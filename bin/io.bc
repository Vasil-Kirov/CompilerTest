; ModuleID = 'io'
source_filename = "io.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%slice.259 = type { i64, ptr }
%string.213 = type { ptr, i64 }
%__init_TypeInfo.226 = type { i64, %__init_TypeUnion.225 }
%__init_TypeUnion.225 = type { %__init_StructType.217 }
%__init_StructType.217 = type { %slice.256, %string.213, i32 }
%slice.256 = type { i64, ptr }
%slice.257 = type { i64, ptr }
%__init_BasicType.215 = type { i64, i32, i32, %string.213 }
%__init_FunctionType.218 = type { i64, %slice.257 }
%__init_PointerType.219 = type { i64, i1 }
%__init_ArrayType.220 = type { i64, i32 }
%__init_SliceType.221 = type { i64 }
%__init_EnumType.222 = type { %string.213, %slice.258, i64 }
%slice.258 = type { i64, ptr }
%__init_GenericType.224 = type { %string.213 }
%__init_Arg.214 = type { i64, ptr }
%__init_StructMember.216 = type { %string.213, i64 }
%slice.262 = type { i64, ptr }
%__mem_Allocator.227 = type { ptr, ptr, ptr }
%slice.261 = type { i64, ptr }
%slice.260 = type { i64, ptr }

$___asan_gen__anon_global = comdat nodeduplicate

$___asan_gen__anon_global.19 = comdat nodeduplicate

$___asan_gen__anon_global.21 = comdat nodeduplicate

$___asan_gen__anon_global.23 = comdat nodeduplicate

$___asan_gen__anon_global.25 = comdat nodeduplicate

$___asan_gen__anon_global.27 = comdat nodeduplicate

$___asan_gen__anon_global.29 = comdat nodeduplicate

$___asan_gen__anon_global.31 = comdat nodeduplicate

$___asan_gen__anon_global.33 = comdat nodeduplicate

$___asan_gen__anon_global.35 = comdat nodeduplicate

$___asan_gen__anon_global.37 = comdat nodeduplicate

$___asan_gen__anon_global.39 = comdat nodeduplicate

$___asan_gen__anon_global.41 = comdat nodeduplicate

$___asan_gen__anon_global.43 = comdat nodeduplicate

$___asan_gen__anon_global.45 = comdat nodeduplicate

$___asan_gen__anon_global.47 = comdat nodeduplicate

@__sdl_INIT_AUDIO = external global i64
@__sdl_INIT_VIDEO = external global i64
@__sdl_INIT_JOYSTICK = external global i64
@__sdl_INIT_HAPTIC = external global i64
@__sdl_INIT_GAMEPAD = external global i64
@__sdl_INIT_EVENTS = external global i64
@__sdl_INIT_SENSOR = external global i64
@__sdl_INIT_CAMERA = external global i64
@__sdl_WINDOW_FULLSCREEN = external global i64
@__sdl_WINDOW_OPENGL = external global i64
@__sdl_WINDOW_OCCLUDED = external global i64
@__sdl_WINDOW_HIDDEN = external global i64
@__sdl_WINDOW_BORDERLESS = external global i64
@__sdl_WINDOW_RESIZABLE = external global i64
@__sdl_WINDOW_MINIMIZED = external global i64
@__sdl_WINDOW_MAXIMIZED = external global i64
@__sdl_WINDOW_MOUSE_GRABBED = external global i64
@__sdl_WINDOW_INPUT_FOCUS = external global i64
@__sdl_WINDOW_MOUSE_FOCUS = external global i64
@__sdl_WINDOW_EXTERNAL = external global i64
@__sdl_WINDOW_MODAL = external global i64
@__sdl_WINDOW_HIGH_PIXEL_DENSITY = external global i64
@__sdl_WINDOW_MOUSE_CAPTURE = external global i64
@__sdl_WINDOW_MOUSE_RELATIVE_MODE = external global i64
@__sdl_WINDOW_ALWAYS_ON_TOP = external global i64
@__sdl_WINDOW_UTILITY = external global i64
@__sdl_WINDOW_TOOLTIP = external global i64
@__sdl_WINDOW_POPUP_MENU = external global i64
@__sdl_WINDOW_KEYBOARD_GRABBED = external global i64
@__sdl_WINDOW_VULKAN = external global i64
@__sdl_WINDOW_METAL = external global i64
@__sdl_WINDOW_TRANSPARENT = external global i64
@__sdl_WINDOW_NOT_FOCUSABLE = external global i64
@__gl_dll_module = external global ptr
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.259
@__os_STD_INPUT_HANDLE = external global i32
@__os_STD_OUTPUT_HANDLE = external global i32
@__os_STD_ERROR_HANDLE = external global i32
@__os_INVALID_HANDLE_VALUE = external global ptr
@__os_CP_UTF7 = external global i32
@__os_CP_UTF8 = external global i32
@__os_MEM_COMMIT = external global i32
@__os_MEM_RESERVE = external global i32
@__os_MEM_RELEASE = external global i32
@__os_PAGE_NOACCESS = external global i32
@__os_PAGE_READONLY = external global i32
@__os_PAGE_READWRITE = external global i32
@__os_PAGE_WRITECOPY = external global i32
@__os_PAGE_EXECUTE = external global i32
@__os_PAGE_EXECUTE_READ = external global i32
@__os_PAGE_EXECUTE_READWRITE = external global i32
@__os_PAGE_EXECUTE_WRITECOPY = external global i32
@__os_PAGE_GUARD = external global i32
@__os_PAGE_NOCACHE = external global i32
@__os_PAGE_WRITECOMBINE = external global i32
@__str_CONTINUE_BIT = external global i8
@___asan_gen__anon_global = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"invalid\00", [24 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.19 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"fn(\00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.21 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c", \00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.23 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c")\00", [30 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.25 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" -> \00", [27 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.27 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"*\00", [30 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.29 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"[x]\00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.31 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"[]\00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.33 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"<>\00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.35 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"true\00", [27 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.37 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"false\00", [26 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.39 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" { \00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.41 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mem: %\0A\00", [24 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.43 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" = \00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.45 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c", \00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.47 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c" }\00", [29 x i8] zeroinitializer }, comdat, align 32
@llvm.used = appending global [1 x ptr] [ptr @asan.module_ctor], section "llvm.metadata"
@___asan_gen_ = private constant [3 x i8] c"io\00", align 1
@___asan_gen_.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__asan_global_ = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.2 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global), align 64, !associated !0
@__asan_global_.18 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.19 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.3 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.19), align 64, !associated !1
@__asan_global_.20 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.21 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.4 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.21), align 64, !associated !2
@__asan_global_.22 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.23 to i64), i64 2, i64 32, i64 ptrtoint (ptr @___asan_gen_.5 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.23), align 64, !associated !3
@__asan_global_.24 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.25 to i64), i64 5, i64 32, i64 ptrtoint (ptr @___asan_gen_.6 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.25), align 64, !associated !4
@__asan_global_.26 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.27 to i64), i64 2, i64 32, i64 ptrtoint (ptr @___asan_gen_.7 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.27), align 64, !associated !5
@__asan_global_.28 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.29 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.8 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.29), align 64, !associated !6
@__asan_global_.30 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.31 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.9 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.31), align 64, !associated !7
@__asan_global_.32 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.33 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.10 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.33), align 64, !associated !8
@__asan_global_.34 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.35 to i64), i64 5, i64 32, i64 ptrtoint (ptr @___asan_gen_.11 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.35), align 64, !associated !9
@__asan_global_.36 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.37 to i64), i64 6, i64 32, i64 ptrtoint (ptr @___asan_gen_.12 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.37), align 64, !associated !10
@__asan_global_.38 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.39 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.13 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.39), align 64, !associated !11
@__asan_global_.40 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.41 to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.14 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.41), align 64, !associated !12
@__asan_global_.42 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.43 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.15 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.43), align 64, !associated !13
@__asan_global_.44 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.45 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.16 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.45), align 64, !associated !14
@__asan_global_.46 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.47 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.17 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.47), align 64, !associated !15
@llvm.compiler.used = appending global [16 x ptr] [ptr @__asan_global_, ptr @__asan_global_.18, ptr @__asan_global_.20, ptr @__asan_global_.22, ptr @__asan_global_.24, ptr @__asan_global_.26, ptr @__asan_global_.28, ptr @__asan_global_.30, ptr @__asan_global_.32, ptr @__asan_global_.34, ptr @__asan_global_.36, ptr @__asan_global_.38, ptr @__asan_global_.40, ptr @__asan_global_.42, ptr @__asan_global_.44, ptr @__asan_global_.46], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]

define void @__io___GlobalInitializerFunction.0() {
block_0:
  ret void
}

declare i32 @__main_main()

declare i1 @SDL_Init(i32)

declare ptr @SDL_CreateWindow(ptr, i32, i32, i64)

declare void @SDL_GL_CreateContext(ptr, ptr)

declare i1 @SDL_GL_SwapWindow(ptr)

declare i1 @SDL_PollEvent(ptr)

declare ptr @SDL_GetError()

declare ptr @wglGetProcAddress(ptr)

declare ptr @GetProcAddress(ptr, ptr)

declare ptr @LoadLibraryA(ptr)

declare ptr @__gl_load_gl_fn(ptr)

declare i1 @__gl_load()

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

declare void @__os_abort()

declare void @__os_assert(i1, ptr)

declare void @__os_print(ptr, i32)

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

define void @__io_push_string(ptr %0, ptr %1) !dbg !84 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %string.213, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !103
  call void @llvm.dbg.value(metadata ptr %2, metadata !104, metadata !DIExpression()), !dbg !103
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !103
  call void @llvm.dbg.value(metadata ptr %3, metadata !105, metadata !DIExpression()), !dbg !103
  %7 = getelementptr inbounds %string.213, ptr %3, i32 0, i32 1, !dbg !106
  %8 = load i64, ptr %7, align 8, !dbg !106
  %9 = getelementptr inbounds %string.213, ptr %3, i32 0, i32 0, !dbg !106
  %10 = load ptr, ptr %9, align 8, !dbg !106
  store ptr %10, ptr %4, align 8, !dbg !106
  store i64 0, ptr %5, align 8, !dbg !106
  br label %block_1, !dbg !106

block_1:                                          ; preds = %block_3, %block_0
  %11 = load i64, ptr %5, align 8, !dbg !106
  %12 = icmp ult i64 %11, %8, !dbg !106
  br i1 %12, label %block_2, label %block_4, !dbg !106

block_2:                                          ; preds = %block_1
  %13 = load ptr, ptr %4, align 8, !dbg !106
  %14 = call i32 @__str_deref(ptr %13), !dbg !106
  store i32 %14, ptr %6, align 4, !dbg !106
  call void @llvm.dbg.declare(metadata ptr %6, metadata !107, metadata !DIExpression()), !dbg !106
  call void @llvm.dbg.declare(metadata ptr %5, metadata !108, metadata !DIExpression()), !dbg !106
  %15 = load ptr, ptr %2, align 8, !dbg !109
  %16 = load i32, ptr %6, align 4, !dbg !109
  call void @"__array_add@*[]u32_u32_@void"(ptr %15, i32 %16), !dbg !109
  br label %block_3, !dbg !109

block_3:                                          ; preds = %block_2
  %17 = load i64, ptr %5, align 8, !dbg !109
  %18 = add i64 %17, 1, !dbg !109
  store i64 %18, ptr %5, align 8, !dbg !109
  %19 = load ptr, ptr %4, align 8, !dbg !109
  %20 = call ptr @__str__it_advance(ptr %19, i64 %8, i64 %17), !dbg !109
  store ptr %20, ptr %4, align 8, !dbg !109
  br label %block_1, !dbg !109

block_4:                                          ; preds = %block_1
  ret void, !dbg !110
}

define void @__io_format_uint(ptr %0, i64 %1) !dbg !111 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !115
  call void @llvm.dbg.value(metadata ptr %2, metadata !116, metadata !DIExpression()), !dbg !115
  store i64 %1, ptr %3, align 8, !dbg !115
  call void @llvm.dbg.value(metadata ptr %3, metadata !117, metadata !DIExpression()), !dbg !115
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !118
  call void @llvm.dbg.declare(metadata ptr %5, metadata !119, metadata !DIExpression()), !dbg !118
  %11 = load i64, ptr %3, align 8, !dbg !123
  store i64 %11, ptr %6, align 8, !dbg !123
  call void @llvm.dbg.declare(metadata ptr %6, metadata !124, metadata !DIExpression()), !dbg !123
  %12 = load i64, ptr %6, align 8, !dbg !125
  %13 = icmp eq i64 %12, 0, !dbg !125
  br i1 %13, label %block_1, label %block_2, !dbg !125

block_1:                                          ; preds = %block_0
  %14 = load ptr, ptr %2, align 8, !dbg !126
  call void @"__array_add@*[]u32_u32_@void"(ptr %14, i32 48), !dbg !126
  ret void, !dbg !127

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !127

block_3:                                          ; preds = %block_2
  store i64 0, ptr %7, align 8, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %7, metadata !129, metadata !DIExpression()), !dbg !128
  br label %block_4, !dbg !130

block_4:                                          ; preds = %block_5, %block_3
  %15 = load i64, ptr %6, align 8, !dbg !130
  %16 = icmp ugt i64 %15, 0, !dbg !130
  br i1 %16, label %block_5, label %block_6, !dbg !130

block_5:                                          ; preds = %block_4
  %17 = load i64, ptr %6, align 8, !dbg !131
  %18 = urem i64 %17, 10, !dbg !131
  store i64 %18, ptr %8, align 8, !dbg !131
  call void @llvm.dbg.declare(metadata ptr %8, metadata !132, metadata !DIExpression()), !dbg !131
  %19 = load i64, ptr %6, align 8, !dbg !133
  %20 = udiv i64 %19, 10, !dbg !133
  store i64 %20, ptr %6, align 8, !dbg !133
  %21 = load i64, ptr %8, align 8, !dbg !134
  %22 = add i64 48, %21, !dbg !134
  store i64 %22, ptr %9, align 8, !dbg !134
  call void @llvm.dbg.declare(metadata ptr %9, metadata !135, metadata !DIExpression()), !dbg !134
  %23 = load i64, ptr %7, align 8, !dbg !136
  %24 = getelementptr [256 x i32], ptr %5, i64 0, i64 %23, !dbg !136
  %25 = load i64, ptr %9, align 8, !dbg !136
  %26 = trunc i64 %25 to i32, !dbg !136
  store i32 %26, ptr %24, align 4, !dbg !136
  %27 = load i64, ptr %7, align 8, !dbg !137
  %28 = add i64 %27, 1, !dbg !137
  store i64 %28, ptr %7, align 8, !dbg !137
  br label %block_4, !dbg !137

block_6:                                          ; preds = %block_4
  %29 = load i64, ptr %7, align 8, !dbg !138
  store i64 0, ptr %10, align 8, !dbg !138
  br label %block_7, !dbg !138

block_7:                                          ; preds = %block_9, %block_6
  %30 = load i64, ptr %10, align 8, !dbg !138
  %31 = icmp ult i64 %30, %29, !dbg !138
  br i1 %31, label %block_8, label %block_10, !dbg !138

block_8:                                          ; preds = %block_7
  call void @llvm.dbg.declare(metadata ptr %10, metadata !139, metadata !DIExpression()), !dbg !138
  %32 = load ptr, ptr %2, align 8, !dbg !140
  %33 = load i64, ptr %7, align 8, !dbg !140
  %34 = load i64, ptr %10, align 8, !dbg !140
  %35 = sub i64 %33, %34, !dbg !140
  %36 = sub i64 %35, 1, !dbg !140
  %37 = getelementptr [256 x i32], ptr %5, i64 0, i64 %36, !dbg !140
  %38 = load i32, ptr %37, align 4, !dbg !140
  call void @"__array_add@*[]u32_u32_@void"(ptr %32, i32 %38), !dbg !140
  br label %block_9, !dbg !140

block_9:                                          ; preds = %block_8
  %39 = load i64, ptr %10, align 8, !dbg !140
  %40 = add i64 %39, 1, !dbg !140
  store i64 %40, ptr %10, align 8, !dbg !140
  br label %block_7, !dbg !140

block_10:                                         ; preds = %block_7
  ret void, !dbg !141
}

define void @__io_format_int(ptr %0, i64 %1) !dbg !142 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %7, i8 0, i32 1, i1 false)
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %10, i8 0, i32 4, i1 false)
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !145
  call void @llvm.dbg.value(metadata ptr %2, metadata !146, metadata !DIExpression()), !dbg !145
  store i64 %1, ptr %3, align 8, !dbg !145
  call void @llvm.dbg.value(metadata ptr %3, metadata !147, metadata !DIExpression()), !dbg !145
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !148
  call void @llvm.dbg.declare(metadata ptr %5, metadata !149, metadata !DIExpression()), !dbg !148
  %12 = load i64, ptr %3, align 8, !dbg !150
  store i64 %12, ptr %6, align 8, !dbg !150
  call void @llvm.dbg.declare(metadata ptr %6, metadata !151, metadata !DIExpression()), !dbg !150
  %13 = load i64, ptr %6, align 8, !dbg !152
  %14 = icmp eq i64 %13, 0, !dbg !152
  br i1 %14, label %block_1, label %block_2, !dbg !152

block_1:                                          ; preds = %block_0
  %15 = load ptr, ptr %2, align 8, !dbg !153
  call void @"__array_add@*[]u32_u32_@void"(ptr %15, i32 48), !dbg !153
  ret void, !dbg !154

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !154

block_3:                                          ; preds = %block_2
  store i1 false, ptr %7, align 1, !dbg !155
  call void @llvm.dbg.declare(metadata ptr %7, metadata !156, metadata !DIExpression()), !dbg !155
  %16 = load i64, ptr %6, align 8, !dbg !158
  %17 = icmp slt i64 %16, 0, !dbg !158
  br i1 %17, label %block_4, label %block_5, !dbg !158

block_4:                                          ; preds = %block_3
  %18 = load i64, ptr %6, align 8, !dbg !159
  %19 = sub i64 0, %18, !dbg !159
  store i64 %19, ptr %6, align 8, !dbg !159
  store i1 true, ptr %7, align 1, !dbg !160
  br label %block_6, !dbg !160

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !160

block_6:                                          ; preds = %block_5, %block_4
  store i64 0, ptr %8, align 8, !dbg !161
  call void @llvm.dbg.declare(metadata ptr %8, metadata !162, metadata !DIExpression()), !dbg !161
  br label %block_7, !dbg !163

block_7:                                          ; preds = %block_8, %block_6
  %20 = load i64, ptr %6, align 8, !dbg !163
  %21 = icmp sgt i64 %20, 0, !dbg !163
  br i1 %21, label %block_8, label %block_9, !dbg !163

block_8:                                          ; preds = %block_7
  %22 = load i64, ptr %6, align 8, !dbg !164
  %23 = srem i64 %22, 10, !dbg !164
  store i64 %23, ptr %9, align 8, !dbg !164
  call void @llvm.dbg.declare(metadata ptr %9, metadata !165, metadata !DIExpression()), !dbg !164
  %24 = load i64, ptr %6, align 8, !dbg !166
  %25 = sdiv i64 %24, 10, !dbg !166
  store i64 %25, ptr %6, align 8, !dbg !166
  %26 = load i64, ptr %9, align 8, !dbg !167
  %27 = trunc i64 %26 to i8, !dbg !167
  %28 = zext i8 %27 to i32, !dbg !167
  %29 = add i32 48, %28, !dbg !167
  store i32 %29, ptr %10, align 4, !dbg !167
  call void @llvm.dbg.declare(metadata ptr %10, metadata !168, metadata !DIExpression()), !dbg !167
  %30 = load i64, ptr %8, align 8, !dbg !169
  %31 = getelementptr [256 x i32], ptr %5, i64 0, i64 %30, !dbg !169
  %32 = load i32, ptr %10, align 4, !dbg !169
  store i32 %32, ptr %31, align 4, !dbg !169
  %33 = load i64, ptr %8, align 8, !dbg !170
  %34 = add i64 %33, 1, !dbg !170
  store i64 %34, ptr %8, align 8, !dbg !170
  br label %block_7, !dbg !170

block_9:                                          ; preds = %block_7
  %35 = load i1, ptr %7, align 1, !dbg !171
  br i1 %35, label %block_10, label %block_11, !dbg !171

block_10:                                         ; preds = %block_9
  %36 = load ptr, ptr %2, align 8, !dbg !171
  call void @"__array_add@*[]u32_u32_@void"(ptr %36, i32 45), !dbg !171
  br label %block_12, !dbg !171

block_11:                                         ; preds = %block_9
  br label %block_12, !dbg !171

block_12:                                         ; preds = %block_11, %block_10
  %37 = load i64, ptr %8, align 8, !dbg !172
  store i64 0, ptr %11, align 8, !dbg !172
  br label %block_13, !dbg !172

block_13:                                         ; preds = %block_15, %block_12
  %38 = load i64, ptr %11, align 8, !dbg !172
  %39 = icmp ult i64 %38, %37, !dbg !172
  br i1 %39, label %block_14, label %block_16, !dbg !172

block_14:                                         ; preds = %block_13
  call void @llvm.dbg.declare(metadata ptr %11, metadata !173, metadata !DIExpression()), !dbg !172
  %40 = load ptr, ptr %2, align 8, !dbg !174
  %41 = load i64, ptr %8, align 8, !dbg !174
  %42 = load i64, ptr %11, align 8, !dbg !174
  %43 = sub i64 %41, %42, !dbg !174
  %44 = sub i64 %43, 1, !dbg !174
  %45 = getelementptr [256 x i32], ptr %5, i64 0, i64 %44, !dbg !174
  %46 = load i32, ptr %45, align 4, !dbg !174
  call void @"__array_add@*[]u32_u32_@void"(ptr %40, i32 %46), !dbg !174
  br label %block_15, !dbg !174

block_15:                                         ; preds = %block_14
  %47 = load i64, ptr %11, align 8, !dbg !174
  %48 = add i64 %47, 1, !dbg !174
  store i64 %48, ptr %11, align 8, !dbg !174
  br label %block_13, !dbg !174

block_16:                                         ; preds = %block_13
  ret void, !dbg !175
}

define void @__io_print_typetype(ptr %0, ptr %1) !dbg !176 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 48, i1 false)
  %4 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  %5 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  %6 = alloca %string.213, align 8
  %7 = alloca %slice.257, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca i64, align 8
  %10 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 48, i1 false)
  %11 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  %12 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca %string.213, align 8
  %14 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 48, i1 false)
  %15 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  %16 = alloca %string.213, align 8
  %17 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 48, i1 false)
  %18 = alloca %string.213, align 8
  %19 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 48, i1 false)
  %20 = alloca %string.213, align 8
  %21 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 48, i1 false)
  %22 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %22, i8 0, i32 16, i1 false)
  %23 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %23, i8 0, i32 16, i1 false)
  %24 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %24, i8 0, i32 16, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !250
  call void @llvm.dbg.value(metadata ptr %2, metadata !251, metadata !DIExpression()), !dbg !250
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 48, i1 false), !dbg !250
  call void @llvm.dbg.value(metadata ptr %3, metadata !252, metadata !DIExpression()), !dbg !250
  %25 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 0, !dbg !253
  %26 = load i64, ptr %25, align 8, !dbg !253
  switch i64 %26, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_4
    i64 3, label %block_15
    i64 4, label %block_16
    i64 5, label %block_17
    i64 6, label %block_18
    i64 7, label %block_19
    i64 8, label %block_20
    i64 9, label %block_21
  ], !dbg !253

block_2:                                          ; preds = %block_0
  %27 = load ptr, ptr %2, align 8, !dbg !254
  %28 = alloca %string.213, align 8, !dbg !254
  %String = getelementptr inbounds %string.213, ptr %28, i32 0, i32 0, !dbg !254
  %Size = getelementptr inbounds %string.213, ptr %28, i32 0, i32 1, !dbg !254
  store ptr @___asan_gen__anon_global, ptr %String, align 8, !dbg !254
  store i64 7, ptr %Size, align 8, !dbg !254
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %28, i64 16, i1 false), !dbg !254
  call void @__io_push_string(ptr %27, ptr %4), !dbg !254
  br label %block_1, !dbg !254

block_3:                                          ; preds = %block_0
  %29 = load ptr, ptr %2, align 8, !dbg !255
  %30 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !255
  %31 = getelementptr inbounds %__init_BasicType.215, ptr %30, i32 0, i32 3, !dbg !255
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %31, i64 16, i1 false), !dbg !255
  call void @__io_push_string(ptr %29, ptr %5), !dbg !255
  br label %block_1, !dbg !255

block_4:                                          ; preds = %block_0
  %32 = load ptr, ptr %2, align 8, !dbg !256
  %33 = alloca %string.213, align 8, !dbg !256
  %String1 = getelementptr inbounds %string.213, ptr %33, i32 0, i32 0, !dbg !256
  %Size2 = getelementptr inbounds %string.213, ptr %33, i32 0, i32 1, !dbg !256
  store ptr @___asan_gen__anon_global.19, ptr %String1, align 8, !dbg !256
  store i64 3, ptr %Size2, align 8, !dbg !256
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %33, i64 16, i1 false), !dbg !256
  call void @__io_push_string(ptr %32, ptr %6), !dbg !256
  %34 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !257
  %35 = getelementptr inbounds %__init_FunctionType.218, ptr %34, i32 0, i32 1, !dbg !257
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %35, i64 16, i1 false), !dbg !257
  call void @llvm.dbg.declare(metadata ptr %7, metadata !258, metadata !DIExpression()), !dbg !257
  %36 = getelementptr inbounds %slice.257, ptr %7, i32 0, i32 0, !dbg !259
  %37 = load i64, ptr %36, align 8, !dbg !259
  store i64 0, ptr %8, align 8, !dbg !259
  br label %block_5, !dbg !259

block_5:                                          ; preds = %block_7, %block_4
  %38 = load i64, ptr %8, align 8, !dbg !259
  %39 = icmp ult i64 %38, %37, !dbg !259
  br i1 %39, label %block_6, label %block_8, !dbg !259

block_6:                                          ; preds = %block_5
  %40 = load i64, ptr %8, align 8, !dbg !259
  %41 = getelementptr inbounds %slice.257, ptr %7, i32 0, i32 1, !dbg !259
  %42 = load ptr, ptr %41, align 8, !dbg !259
  %43 = getelementptr i64, ptr %42, i64 %40, !dbg !259
  %44 = load i64, ptr %43, align 8, !dbg !259
  store i64 %44, ptr %9, align 8, !dbg !259
  call void @llvm.dbg.declare(metadata ptr %9, metadata !260, metadata !DIExpression()), !dbg !259
  call void @llvm.dbg.declare(metadata ptr %8, metadata !261, metadata !DIExpression()), !dbg !259
  %45 = load ptr, ptr %2, align 8, !dbg !262
  %46 = load i64, ptr %9, align 8, !dbg !262
  %47 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !262
  %48 = getelementptr %__init_TypeInfo.226, ptr %47, i64 %46, !dbg !262
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %48, i64 48, i1 false), !dbg !262
  call void @__io_print_typetype(ptr %45, ptr %10), !dbg !262
  %49 = load i64, ptr %8, align 8, !dbg !263
  %50 = add i64 %49, 1, !dbg !263
  %51 = getelementptr inbounds %slice.257, ptr %7, i32 0, i32 0, !dbg !263
  %52 = load i64, ptr %51, align 8, !dbg !263
  %53 = icmp ne i64 %50, %52, !dbg !263
  br i1 %53, label %block_9, label %block_10, !dbg !263

block_9:                                          ; preds = %block_6
  %54 = load ptr, ptr %2, align 8, !dbg !264
  %55 = alloca %string.213, align 8, !dbg !264
  %String3 = getelementptr inbounds %string.213, ptr %55, i32 0, i32 0, !dbg !264
  %Size4 = getelementptr inbounds %string.213, ptr %55, i32 0, i32 1, !dbg !264
  store ptr @___asan_gen__anon_global.21, ptr %String3, align 8, !dbg !264
  store i64 2, ptr %Size4, align 8, !dbg !264
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %55, i64 16, i1 false), !dbg !264
  call void @__io_push_string(ptr %54, ptr %11), !dbg !264
  br label %block_11, !dbg !264

block_10:                                         ; preds = %block_6
  br label %block_11, !dbg !264

block_11:                                         ; preds = %block_10, %block_9
  br label %block_7, !dbg !264

block_7:                                          ; preds = %block_11
  %56 = load i64, ptr %8, align 8, !dbg !264
  %57 = add i64 %56, 1, !dbg !264
  store i64 %57, ptr %8, align 8, !dbg !264
  br label %block_5, !dbg !264

block_8:                                          ; preds = %block_5
  %58 = load ptr, ptr %2, align 8, !dbg !265
  %59 = alloca %string.213, align 8, !dbg !265
  %String5 = getelementptr inbounds %string.213, ptr %59, i32 0, i32 0, !dbg !265
  %Size6 = getelementptr inbounds %string.213, ptr %59, i32 0, i32 1, !dbg !265
  store ptr @___asan_gen__anon_global.23, ptr %String5, align 8, !dbg !265
  store i64 1, ptr %Size6, align 8, !dbg !265
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %59, i64 16, i1 false), !dbg !265
  call void @__io_push_string(ptr %58, ptr %12), !dbg !265
  %60 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !266
  %61 = getelementptr inbounds %__init_FunctionType.218, ptr %60, i32 0, i32 0, !dbg !266
  %62 = load i64, ptr %61, align 8, !dbg !266
  %63 = load i64, ptr @__init_INVALID_TYPE, align 8, !dbg !266
  %64 = icmp ne i64 %62, %63, !dbg !266
  br i1 %64, label %block_12, label %block_13, !dbg !266

block_12:                                         ; preds = %block_8
  %65 = load ptr, ptr %2, align 8, !dbg !267
  %66 = alloca %string.213, align 8, !dbg !267
  %String7 = getelementptr inbounds %string.213, ptr %66, i32 0, i32 0, !dbg !267
  %Size8 = getelementptr inbounds %string.213, ptr %66, i32 0, i32 1, !dbg !267
  store ptr @___asan_gen__anon_global.25, ptr %String7, align 8, !dbg !267
  store i64 4, ptr %Size8, align 8, !dbg !267
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %66, i64 16, i1 false), !dbg !267
  call void @__io_push_string(ptr %65, ptr %13), !dbg !267
  %67 = load ptr, ptr %2, align 8, !dbg !268
  %68 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !268
  %69 = getelementptr inbounds %__init_FunctionType.218, ptr %68, i32 0, i32 0, !dbg !268
  %70 = load i64, ptr %69, align 8, !dbg !268
  %71 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !268
  %72 = getelementptr %__init_TypeInfo.226, ptr %71, i64 %70, !dbg !268
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %72, i64 48, i1 false), !dbg !268
  call void @__io_print_typetype(ptr %67, ptr %14), !dbg !268
  br label %block_14, !dbg !268

block_13:                                         ; preds = %block_8
  br label %block_14, !dbg !268

block_14:                                         ; preds = %block_13, %block_12
  br label %block_1, !dbg !268

block_15:                                         ; preds = %block_0
  %73 = load ptr, ptr %2, align 8, !dbg !269
  %74 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !269
  %75 = getelementptr inbounds %__init_StructType.217, ptr %74, i32 0, i32 1, !dbg !269
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %75, i64 16, i1 false), !dbg !269
  call void @__io_push_string(ptr %73, ptr %15), !dbg !269
  br label %block_1, !dbg !269

block_16:                                         ; preds = %block_0
  %76 = load ptr, ptr %2, align 8, !dbg !270
  %77 = alloca %string.213, align 8, !dbg !270
  %String9 = getelementptr inbounds %string.213, ptr %77, i32 0, i32 0, !dbg !270
  %Size10 = getelementptr inbounds %string.213, ptr %77, i32 0, i32 1, !dbg !270
  store ptr @___asan_gen__anon_global.27, ptr %String9, align 8, !dbg !270
  store i64 1, ptr %Size10, align 8, !dbg !270
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %77, i64 16, i1 false), !dbg !270
  call void @__io_push_string(ptr %76, ptr %16), !dbg !270
  %78 = load ptr, ptr %2, align 8, !dbg !271
  %79 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !271
  %80 = getelementptr inbounds %__init_PointerType.219, ptr %79, i32 0, i32 0, !dbg !271
  %81 = load i64, ptr %80, align 8, !dbg !271
  %82 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !271
  %83 = getelementptr %__init_TypeInfo.226, ptr %82, i64 %81, !dbg !271
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %83, i64 48, i1 false), !dbg !271
  call void @__io_print_typetype(ptr %78, ptr %17), !dbg !271
  br label %block_1, !dbg !271

block_17:                                         ; preds = %block_0
  %84 = load ptr, ptr %2, align 8, !dbg !272
  %85 = alloca %string.213, align 8, !dbg !272
  %String11 = getelementptr inbounds %string.213, ptr %85, i32 0, i32 0, !dbg !272
  %Size12 = getelementptr inbounds %string.213, ptr %85, i32 0, i32 1, !dbg !272
  store ptr @___asan_gen__anon_global.29, ptr %String11, align 8, !dbg !272
  store i64 3, ptr %Size12, align 8, !dbg !272
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %85, i64 16, i1 false), !dbg !272
  call void @__io_push_string(ptr %84, ptr %18), !dbg !272
  %86 = load ptr, ptr %2, align 8, !dbg !273
  %87 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !273
  %88 = getelementptr inbounds %__init_ArrayType.220, ptr %87, i32 0, i32 0, !dbg !273
  %89 = load i64, ptr %88, align 8, !dbg !273
  %90 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !273
  %91 = getelementptr %__init_TypeInfo.226, ptr %90, i64 %89, !dbg !273
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %91, i64 48, i1 false), !dbg !273
  call void @__io_print_typetype(ptr %86, ptr %19), !dbg !273
  br label %block_1, !dbg !273

block_18:                                         ; preds = %block_0
  %92 = load ptr, ptr %2, align 8, !dbg !274
  %93 = alloca %string.213, align 8, !dbg !274
  %String13 = getelementptr inbounds %string.213, ptr %93, i32 0, i32 0, !dbg !274
  %Size14 = getelementptr inbounds %string.213, ptr %93, i32 0, i32 1, !dbg !274
  store ptr @___asan_gen__anon_global.31, ptr %String13, align 8, !dbg !274
  store i64 2, ptr %Size14, align 8, !dbg !274
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %93, i64 16, i1 false), !dbg !274
  call void @__io_push_string(ptr %92, ptr %20), !dbg !274
  %94 = load ptr, ptr %2, align 8, !dbg !275
  %95 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !275
  %96 = getelementptr inbounds %__init_SliceType.221, ptr %95, i32 0, i32 0, !dbg !275
  %97 = load i64, ptr %96, align 8, !dbg !275
  %98 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !275
  %99 = getelementptr %__init_TypeInfo.226, ptr %98, i64 %97, !dbg !275
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %99, i64 48, i1 false), !dbg !275
  call void @__io_print_typetype(ptr %94, ptr %21), !dbg !275
  br label %block_1, !dbg !275

block_19:                                         ; preds = %block_0
  %100 = load ptr, ptr %2, align 8, !dbg !276
  %101 = alloca %string.213, align 8, !dbg !276
  %String15 = getelementptr inbounds %string.213, ptr %101, i32 0, i32 0, !dbg !276
  %Size16 = getelementptr inbounds %string.213, ptr %101, i32 0, i32 1, !dbg !276
  store ptr @___asan_gen__anon_global.33, ptr %String15, align 8, !dbg !276
  store i64 2, ptr %Size16, align 8, !dbg !276
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr align 8 %101, i64 16, i1 false), !dbg !276
  call void @__io_push_string(ptr %100, ptr %22), !dbg !276
  br label %block_1, !dbg !276

block_20:                                         ; preds = %block_0
  %102 = load ptr, ptr %2, align 8, !dbg !277
  %103 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !277
  %104 = getelementptr inbounds %__init_EnumType.222, ptr %103, i32 0, i32 0, !dbg !277
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %104, i64 16, i1 false), !dbg !277
  call void @__io_push_string(ptr %102, ptr %23), !dbg !277
  br label %block_1, !dbg !277

block_21:                                         ; preds = %block_0
  %105 = load ptr, ptr %2, align 8, !dbg !278
  %106 = getelementptr inbounds %__init_TypeInfo.226, ptr %3, i32 0, i32 1, !dbg !278
  %107 = getelementptr inbounds %__init_GenericType.224, ptr %106, i32 0, i32 0, !dbg !278
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %107, i64 16, i1 false), !dbg !278
  call void @__io_push_string(ptr %105, ptr %24), !dbg !278
  br label %block_1, !dbg !278

block_1:                                          ; preds = %block_21, %block_20, %block_19, %block_18, %block_17, %block_16, %block_15, %block_14, %block_3, %block_2, %block_0
  ret void, !dbg !279
}

define void @__io_print_type(ptr %0, ptr %1) !dbg !280 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %__init_Arg.214, align 8
  %4 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 48, i1 false)
  %5 = alloca %__init_BasicType.215, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 32, i1 false)
  %6 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  %7 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  %8 = alloca %string.213, align 8
  %9 = alloca %string.213, align 8
  %10 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  %12 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  %13 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  %14 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 8, i1 false)
  %19 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 8, i1 false)
  %20 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 8, i1 false)
  %21 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %21, i8 0, i32 4, i1 false)
  %22 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %22, i8 0, i32 8, i1 false)
  %23 = alloca i64, align 8
  %24 = alloca %__init_TypeInfo.226, align 8
  %25 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %23, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %24, i8 0, i32 48, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %25, i8 0, i32 48, i1 false)
  %26 = alloca %__init_StructType.217, align 8
  %27 = alloca %string.213, align 8
  %28 = alloca %string.213, align 8
  %29 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %26, i8 0, i32 40, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %27, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %28, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %29, i8 0, i32 8, i1 false)
  %30 = alloca %__init_StructMember.216, align 8
  %31 = alloca %slice.262, align 8
  %32 = alloca [1 x %__init_Arg.214], align 8
  %33 = alloca %string.213, align 8
  %34 = alloca %string.213, align 8
  %35 = alloca %string.213, align 8
  %36 = alloca %string.213, align 8
  %37 = alloca ptr, align 8
  %38 = alloca %__init_StructType.217, align 8
  %39 = alloca i64, align 8
  %40 = alloca %__init_Arg.214, align 8
  %41 = alloca %__init_Arg.214, align 8
  %42 = alloca %__init_Arg.214, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %30, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %31, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %32, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %33, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %34, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %35, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %36, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %37, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %38, i8 0, i32 40, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %39, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %40, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %41, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %42, i8 0, i32 16, i1 false)
  %43 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %43, i8 0, i32 16, i1 false)
  %44 = alloca %string.213, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %44, i8 0, i32 16, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !287
  call void @llvm.dbg.value(metadata ptr %2, metadata !288, metadata !DIExpression()), !dbg !287
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !287
  call void @llvm.dbg.value(metadata ptr %3, metadata !289, metadata !DIExpression()), !dbg !287
  %45 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 0, !dbg !290
  %46 = load i64, ptr %45, align 8, !dbg !290
  %47 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !290
  %48 = getelementptr %__init_TypeInfo.226, ptr %47, i64 %46, !dbg !290
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %48, i64 48, i1 false), !dbg !290
  call void @llvm.dbg.declare(metadata ptr %4, metadata !291, metadata !DIExpression()), !dbg !290
  %49 = getelementptr inbounds %__init_TypeInfo.226, ptr %4, i32 0, i32 0, !dbg !292
  %50 = load i64, ptr %49, align 8, !dbg !292
  switch i64 %50, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_52
    i64 3, label %block_53
    i64 4, label %block_61
    i64 5, label %block_62
    i64 6, label %block_63
    i64 7, label %block_64
    i64 8, label %block_65
    i64 9, label %block_66
  ], !dbg !292

block_2:                                          ; preds = %block_0
  br label %block_1, !dbg !292

block_3:                                          ; preds = %block_0
  %51 = getelementptr inbounds %__init_TypeInfo.226, ptr %4, i32 0, i32 1, !dbg !293
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %51, i64 32, i1 false), !dbg !293
  call void @llvm.dbg.declare(metadata ptr %5, metadata !294, metadata !DIExpression()), !dbg !293
  %52 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !295
  %53 = load i64, ptr %52, align 8, !dbg !295
  %54 = icmp eq i64 %53, 0, !dbg !295
  br i1 %54, label %block_4, label %block_5, !dbg !295

block_4:                                          ; preds = %block_3
  %55 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !296
  %56 = load ptr, ptr %55, align 8, !dbg !296
  %57 = load i1, ptr %56, align 1, !dbg !296
  br i1 %57, label %block_7, label %block_8, !dbg !296

block_7:                                          ; preds = %block_4
  %58 = load ptr, ptr %2, align 8, !dbg !297
  %59 = alloca %string.213, align 8, !dbg !297
  %String = getelementptr inbounds %string.213, ptr %59, i32 0, i32 0, !dbg !297
  %Size = getelementptr inbounds %string.213, ptr %59, i32 0, i32 1, !dbg !297
  store ptr @___asan_gen__anon_global.35, ptr %String, align 8, !dbg !297
  store i64 4, ptr %Size, align 8, !dbg !297
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %59, i64 16, i1 false), !dbg !297
  call void @__io_push_string(ptr %58, ptr %6), !dbg !297
  br label %block_9, !dbg !297

block_8:                                          ; preds = %block_4
  %60 = load ptr, ptr %2, align 8, !dbg !298
  %61 = alloca %string.213, align 8, !dbg !298
  %String1 = getelementptr inbounds %string.213, ptr %61, i32 0, i32 0, !dbg !298
  %Size2 = getelementptr inbounds %string.213, ptr %61, i32 0, i32 1, !dbg !298
  store ptr @___asan_gen__anon_global.37, ptr %String1, align 8, !dbg !298
  store i64 5, ptr %Size2, align 8, !dbg !298
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %61, i64 16, i1 false), !dbg !298
  call void @__io_push_string(ptr %60, ptr %7), !dbg !298
  br label %block_9, !dbg !298

block_9:                                          ; preds = %block_8, %block_7
  br label %block_6, !dbg !298

block_5:                                          ; preds = %block_3
  %62 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !299
  %63 = load i64, ptr %62, align 8, !dbg !299
  %64 = icmp eq i64 %63, 1, !dbg !299
  br i1 %64, label %block_10, label %block_11, !dbg !299

block_10:                                         ; preds = %block_5
  %65 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !300
  %66 = load ptr, ptr %65, align 8, !dbg !300
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %66, i64 16, i1 false), !dbg !300
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !300
  call void @llvm.dbg.declare(metadata ptr %9, metadata !301, metadata !DIExpression()), !dbg !300
  %67 = load ptr, ptr %2, align 8, !dbg !302
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %9, i64 16, i1 false), !dbg !302
  call void @__io_push_string(ptr %67, ptr %10), !dbg !302
  br label %block_12, !dbg !302

block_11:                                         ; preds = %block_5
  %68 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !303
  %69 = load i64, ptr %68, align 8, !dbg !303
  %70 = icmp eq i64 %69, 2, !dbg !303
  br i1 %70, label %block_13, label %block_14, !dbg !303

block_13:                                         ; preds = %block_11
  %71 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !304
  %72 = load ptr, ptr %71, align 8, !dbg !304
  %73 = load i8, ptr %72, align 1, !dbg !304
  %74 = zext i8 %73 to i64, !dbg !304
  store i64 %74, ptr %11, align 8, !dbg !304
  call void @llvm.dbg.declare(metadata ptr %11, metadata !305, metadata !DIExpression()), !dbg !304
  %75 = load ptr, ptr %2, align 8, !dbg !306
  %76 = load i64, ptr %11, align 8, !dbg !306
  call void @__io_format_uint(ptr %75, i64 %76), !dbg !306
  br label %block_15, !dbg !306

block_14:                                         ; preds = %block_11
  %77 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !307
  %78 = load i64, ptr %77, align 8, !dbg !307
  %79 = icmp eq i64 %78, 3, !dbg !307
  br i1 %79, label %block_16, label %block_17, !dbg !307

block_16:                                         ; preds = %block_14
  %80 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !308
  %81 = load ptr, ptr %80, align 8, !dbg !308
  %82 = load i16, ptr %81, align 2, !dbg !308
  %83 = zext i16 %82 to i64, !dbg !308
  store i64 %83, ptr %12, align 8, !dbg !308
  call void @llvm.dbg.declare(metadata ptr %12, metadata !309, metadata !DIExpression()), !dbg !308
  %84 = load ptr, ptr %2, align 8, !dbg !310
  %85 = load i64, ptr %12, align 8, !dbg !310
  call void @__io_format_uint(ptr %84, i64 %85), !dbg !310
  br label %block_18, !dbg !310

block_17:                                         ; preds = %block_14
  %86 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !311
  %87 = load i64, ptr %86, align 8, !dbg !311
  %88 = icmp eq i64 %87, 4, !dbg !311
  br i1 %88, label %block_19, label %block_20, !dbg !311

block_19:                                         ; preds = %block_17
  %89 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !312
  %90 = load ptr, ptr %89, align 8, !dbg !312
  %91 = load i32, ptr %90, align 4, !dbg !312
  %92 = zext i32 %91 to i64, !dbg !312
  store i64 %92, ptr %13, align 8, !dbg !312
  call void @llvm.dbg.declare(metadata ptr %13, metadata !313, metadata !DIExpression()), !dbg !312
  %93 = load ptr, ptr %2, align 8, !dbg !314
  %94 = load i64, ptr %13, align 8, !dbg !314
  call void @__io_format_uint(ptr %93, i64 %94), !dbg !314
  br label %block_21, !dbg !314

block_20:                                         ; preds = %block_17
  %95 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !315
  %96 = load i64, ptr %95, align 8, !dbg !315
  %97 = icmp eq i64 %96, 5, !dbg !315
  br i1 %97, label %block_22, label %block_23, !dbg !315

block_22:                                         ; preds = %block_20
  %98 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !316
  %99 = load ptr, ptr %98, align 8, !dbg !316
  %100 = load i64, ptr %99, align 8, !dbg !316
  store i64 %100, ptr %14, align 8, !dbg !316
  call void @llvm.dbg.declare(metadata ptr %14, metadata !317, metadata !DIExpression()), !dbg !316
  %101 = load ptr, ptr %2, align 8, !dbg !318
  %102 = load i64, ptr %14, align 8, !dbg !318
  call void @__io_format_uint(ptr %101, i64 %102), !dbg !318
  br label %block_24, !dbg !318

block_23:                                         ; preds = %block_20
  %103 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !319
  %104 = load i64, ptr %103, align 8, !dbg !319
  %105 = icmp eq i64 %104, 6, !dbg !319
  br i1 %105, label %block_25, label %block_26, !dbg !319

block_25:                                         ; preds = %block_23
  %106 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !320
  %107 = load ptr, ptr %106, align 8, !dbg !320
  %108 = load i8, ptr %107, align 1, !dbg !320
  %109 = sext i8 %108 to i64, !dbg !320
  store i64 %109, ptr %15, align 8, !dbg !320
  call void @llvm.dbg.declare(metadata ptr %15, metadata !321, metadata !DIExpression()), !dbg !320
  %110 = load ptr, ptr %2, align 8, !dbg !322
  %111 = load i64, ptr %15, align 8, !dbg !322
  call void @__io_format_int(ptr %110, i64 %111), !dbg !322
  br label %block_27, !dbg !322

block_26:                                         ; preds = %block_23
  %112 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !323
  %113 = load i64, ptr %112, align 8, !dbg !323
  %114 = icmp eq i64 %113, 7, !dbg !323
  br i1 %114, label %block_28, label %block_29, !dbg !323

block_28:                                         ; preds = %block_26
  %115 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !324
  %116 = load ptr, ptr %115, align 8, !dbg !324
  %117 = load i16, ptr %116, align 2, !dbg !324
  %118 = sext i16 %117 to i64, !dbg !324
  store i64 %118, ptr %16, align 8, !dbg !324
  call void @llvm.dbg.declare(metadata ptr %16, metadata !325, metadata !DIExpression()), !dbg !324
  %119 = load ptr, ptr %2, align 8, !dbg !326
  %120 = load i64, ptr %16, align 8, !dbg !326
  call void @__io_format_int(ptr %119, i64 %120), !dbg !326
  br label %block_30, !dbg !326

block_29:                                         ; preds = %block_26
  %121 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !327
  %122 = load i64, ptr %121, align 8, !dbg !327
  %123 = icmp eq i64 %122, 8, !dbg !327
  br i1 %123, label %block_31, label %block_32, !dbg !327

block_31:                                         ; preds = %block_29
  %124 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !328
  %125 = load ptr, ptr %124, align 8, !dbg !328
  %126 = load i32, ptr %125, align 4, !dbg !328
  %127 = sext i32 %126 to i64, !dbg !328
  store i64 %127, ptr %17, align 8, !dbg !328
  call void @llvm.dbg.declare(metadata ptr %17, metadata !329, metadata !DIExpression()), !dbg !328
  %128 = load ptr, ptr %2, align 8, !dbg !330
  %129 = load i64, ptr %17, align 8, !dbg !330
  call void @__io_format_int(ptr %128, i64 %129), !dbg !330
  br label %block_33, !dbg !330

block_32:                                         ; preds = %block_29
  %130 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !331
  %131 = load i64, ptr %130, align 8, !dbg !331
  %132 = icmp eq i64 %131, 9, !dbg !331
  br i1 %132, label %block_34, label %block_35, !dbg !331

block_34:                                         ; preds = %block_32
  %133 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !332
  %134 = load ptr, ptr %133, align 8, !dbg !332
  %135 = load i64, ptr %134, align 8, !dbg !332
  store i64 %135, ptr %18, align 8, !dbg !332
  call void @llvm.dbg.declare(metadata ptr %18, metadata !333, metadata !DIExpression()), !dbg !332
  %136 = load ptr, ptr %2, align 8, !dbg !334
  %137 = load i64, ptr %18, align 8, !dbg !334
  call void @__io_format_int(ptr %136, i64 %137), !dbg !334
  br label %block_36, !dbg !334

block_35:                                         ; preds = %block_32
  %138 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !335
  %139 = load i64, ptr %138, align 8, !dbg !335
  %140 = icmp eq i64 %139, 14, !dbg !335
  br i1 %140, label %block_37, label %block_38, !dbg !335

block_37:                                         ; preds = %block_35
  %141 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !336
  %142 = load ptr, ptr %141, align 8, !dbg !336
  %143 = load i64, ptr %142, align 8, !dbg !336
  store i64 %143, ptr %19, align 8, !dbg !336
  call void @llvm.dbg.declare(metadata ptr %19, metadata !337, metadata !DIExpression()), !dbg !336
  %144 = load ptr, ptr %2, align 8, !dbg !338
  %145 = load i64, ptr %19, align 8, !dbg !338
  call void @__io_format_int(ptr %144, i64 %145), !dbg !338
  br label %block_39, !dbg !338

block_38:                                         ; preds = %block_35
  %146 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !339
  %147 = load i64, ptr %146, align 8, !dbg !339
  %148 = icmp eq i64 %147, 15, !dbg !339
  br i1 %148, label %block_40, label %block_41, !dbg !339

block_40:                                         ; preds = %block_38
  %149 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !340
  %150 = load ptr, ptr %149, align 8, !dbg !340
  %151 = load i64, ptr %150, align 8, !dbg !340
  store i64 %151, ptr %20, align 8, !dbg !340
  call void @llvm.dbg.declare(metadata ptr %20, metadata !341, metadata !DIExpression()), !dbg !340
  %152 = load ptr, ptr %2, align 8, !dbg !342
  %153 = load i64, ptr %20, align 8, !dbg !342
  call void @__io_format_uint(ptr %152, i64 %153), !dbg !342
  br label %block_42, !dbg !342

block_41:                                         ; preds = %block_38
  %154 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !343
  %155 = load i64, ptr %154, align 8, !dbg !343
  %156 = icmp eq i64 %155, 10, !dbg !343
  br i1 %156, label %block_43, label %block_44, !dbg !343

block_43:                                         ; preds = %block_41
  %157 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !344
  %158 = load ptr, ptr %157, align 8, !dbg !344
  %159 = load float, ptr %158, align 4, !dbg !344
  store float %159, ptr %21, align 4, !dbg !344
  call void @llvm.dbg.declare(metadata ptr %21, metadata !345, metadata !DIExpression()), !dbg !344
  %160 = load ptr, ptr %2, align 8, !dbg !347
  %161 = load float, ptr %21, align 4, !dbg !347
  call void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64 10, ptr %160, float %161, i32 100), !dbg !347
  br label %block_45, !dbg !347

block_44:                                         ; preds = %block_41
  %162 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !348
  %163 = load i64, ptr %162, align 8, !dbg !348
  %164 = icmp eq i64 %163, 11, !dbg !348
  br i1 %164, label %block_46, label %block_47, !dbg !348

block_46:                                         ; preds = %block_44
  %165 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !349
  %166 = load ptr, ptr %165, align 8, !dbg !349
  %167 = load double, ptr %166, align 8, !dbg !349
  store double %167, ptr %22, align 8, !dbg !349
  call void @llvm.dbg.declare(metadata ptr %22, metadata !350, metadata !DIExpression()), !dbg !349
  %168 = load ptr, ptr %2, align 8, !dbg !352
  %169 = load double, ptr %22, align 8, !dbg !352
  call void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64 11, ptr %168, double %169, i32 100), !dbg !352
  br label %block_48, !dbg !352

block_47:                                         ; preds = %block_44
  %170 = getelementptr inbounds %__init_BasicType.215, ptr %5, i32 0, i32 0, !dbg !353
  %171 = load i64, ptr %170, align 8, !dbg !353
  %172 = icmp eq i64 %171, 16, !dbg !353
  br i1 %172, label %block_49, label %block_50, !dbg !353

block_49:                                         ; preds = %block_47
  %173 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !354
  %174 = load ptr, ptr %173, align 8, !dbg !354
  %175 = load i64, ptr %174, align 8, !dbg !354
  store i64 %175, ptr %23, align 8, !dbg !354
  call void @llvm.dbg.declare(metadata ptr %23, metadata !355, metadata !DIExpression()), !dbg !354
  %176 = load i64, ptr %23, align 8, !dbg !356
  %177 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !356
  %178 = getelementptr %__init_TypeInfo.226, ptr %177, i64 %176, !dbg !356
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %178, i64 48, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata ptr %24, metadata !357, metadata !DIExpression()), !dbg !356
  %179 = load ptr, ptr %2, align 8, !dbg !358
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %24, i64 48, i1 false), !dbg !358
  call void @__io_print_typetype(ptr %179, ptr %25), !dbg !358
  br label %block_51, !dbg !358

block_50:                                         ; preds = %block_47
  %180 = load ptr, ptr %2, align 8, !dbg !359
  call void @"__array_add@*[]u32_u32_@void"(ptr %180, i32 37), !dbg !359
  br label %block_51, !dbg !359

block_51:                                         ; preds = %block_50, %block_49
  br label %block_48, !dbg !359

block_48:                                         ; preds = %block_51, %block_46
  br label %block_45, !dbg !359

block_45:                                         ; preds = %block_48, %block_43
  br label %block_42, !dbg !359

block_42:                                         ; preds = %block_45, %block_40
  br label %block_39, !dbg !359

block_39:                                         ; preds = %block_42, %block_37
  br label %block_36, !dbg !359

block_36:                                         ; preds = %block_39, %block_34
  br label %block_33, !dbg !359

block_33:                                         ; preds = %block_36, %block_31
  br label %block_30, !dbg !359

block_30:                                         ; preds = %block_33, %block_28
  br label %block_27, !dbg !359

block_27:                                         ; preds = %block_30, %block_25
  br label %block_24, !dbg !359

block_24:                                         ; preds = %block_27, %block_22
  br label %block_21, !dbg !359

block_21:                                         ; preds = %block_24, %block_19
  br label %block_18, !dbg !359

block_18:                                         ; preds = %block_21, %block_16
  br label %block_15, !dbg !359

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !359

block_12:                                         ; preds = %block_15, %block_10
  br label %block_6, !dbg !359

block_6:                                          ; preds = %block_12, %block_9
  br label %block_1, !dbg !359

block_52:                                         ; preds = %block_0
  br label %block_1, !dbg !359

block_53:                                         ; preds = %block_0
  %181 = getelementptr inbounds %__init_TypeInfo.226, ptr %4, i32 0, i32 1, !dbg !360
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %181, i64 40, i1 false), !dbg !360
  call void @llvm.dbg.declare(metadata ptr %26, metadata !361, metadata !DIExpression()), !dbg !360
  %182 = load ptr, ptr %2, align 8, !dbg !362
  %183 = getelementptr inbounds %__init_StructType.217, ptr %26, i32 0, i32 1, !dbg !362
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %183, i64 16, i1 false), !dbg !362
  call void @__io_push_string(ptr %182, ptr %27), !dbg !362
  %184 = load ptr, ptr %2, align 8, !dbg !363
  %185 = alloca %string.213, align 8, !dbg !363
  %String3 = getelementptr inbounds %string.213, ptr %185, i32 0, i32 0, !dbg !363
  %Size4 = getelementptr inbounds %string.213, ptr %185, i32 0, i32 1, !dbg !363
  store ptr @___asan_gen__anon_global.39, ptr %String3, align 8, !dbg !363
  store i64 3, ptr %Size4, align 8, !dbg !363
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %185, i64 16, i1 false), !dbg !363
  call void @__io_push_string(ptr %184, ptr %28), !dbg !363
  %186 = getelementptr inbounds %__init_StructType.217, ptr %26, i32 0, i32 0, !dbg !364
  %187 = getelementptr inbounds %slice.256, ptr %186, i32 0, i32 0, !dbg !364
  %188 = load i64, ptr %187, align 8, !dbg !364
  store i64 0, ptr %29, align 8, !dbg !364
  br label %block_54, !dbg !364

block_54:                                         ; preds = %block_56, %block_53
  %189 = load i64, ptr %29, align 8, !dbg !364
  %190 = icmp ult i64 %189, %188, !dbg !364
  br i1 %190, label %block_55, label %block_57, !dbg !364

block_55:                                         ; preds = %block_54
  call void @llvm.dbg.declare(metadata ptr %29, metadata !365, metadata !DIExpression()), !dbg !364
  %191 = getelementptr inbounds %__init_StructType.217, ptr %26, i32 0, i32 0, !dbg !366
  %192 = load i64, ptr %29, align 8, !dbg !366
  %193 = getelementptr inbounds %slice.256, ptr %191, i32 0, i32 1, !dbg !366
  %194 = load ptr, ptr %193, align 8, !dbg !366
  %195 = getelementptr %__init_StructMember.216, ptr %194, i64 %192, !dbg !366
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %195, i64 24, i1 false), !dbg !366
  call void @llvm.dbg.declare(metadata ptr %30, metadata !367, metadata !DIExpression()), !dbg !366
  %196 = getelementptr inbounds %slice.262, ptr %31, i32 0, i32 0, !dbg !371
  %197 = getelementptr inbounds %slice.262, ptr %31, i32 0, i32 1, !dbg !371
  store i64 1, ptr %196, align 8, !dbg !371
  store ptr %32, ptr %197, align 8, !dbg !371
  %198 = alloca %string.213, align 8, !dbg !371
  %String5 = getelementptr inbounds %string.213, ptr %198, i32 0, i32 0, !dbg !371
  %Size6 = getelementptr inbounds %string.213, ptr %198, i32 0, i32 1, !dbg !371
  store ptr @___asan_gen__anon_global.41, ptr %String5, align 8, !dbg !371
  store i64 7, ptr %Size6, align 8, !dbg !371
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %198, i64 16, i1 false), !dbg !371
  %199 = getelementptr inbounds %__init_StructMember.216, ptr %30, i32 0, i32 0, !dbg !371
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %199, i64 16, i1 false), !dbg !371
  %200 = getelementptr [1 x %__init_Arg.214], ptr %32, i64 0, i64 0, !dbg !371
  %201 = getelementptr inbounds %__init_Arg.214, ptr %200, i32 0, i32 0, !dbg !371
  %202 = getelementptr inbounds %__init_Arg.214, ptr %200, i32 0, i32 1, !dbg !371
  store i64 1, ptr %201, align 8, !dbg !371
  store ptr %34, ptr %202, align 8, !dbg !371
  call void @__io_print(ptr %33, ptr %31), !dbg !371
  %203 = load ptr, ptr %2, align 8, !dbg !372
  %204 = getelementptr inbounds %__init_StructMember.216, ptr %30, i32 0, i32 0, !dbg !372
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %204, i64 16, i1 false), !dbg !372
  call void @__io_push_string(ptr %203, ptr %35), !dbg !372
  %205 = load ptr, ptr %2, align 8, !dbg !373
  %206 = alloca %string.213, align 8, !dbg !373
  %String7 = getelementptr inbounds %string.213, ptr %206, i32 0, i32 0, !dbg !373
  %Size8 = getelementptr inbounds %string.213, ptr %206, i32 0, i32 1, !dbg !373
  store ptr @___asan_gen__anon_global.43, ptr %String7, align 8, !dbg !373
  store i64 3, ptr %Size8, align 8, !dbg !373
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %206, i64 16, i1 false), !dbg !373
  call void @__io_push_string(ptr %205, ptr %36), !dbg !373
  %207 = getelementptr inbounds %__init_Arg.214, ptr %3, i32 0, i32 1, !dbg !374
  %208 = load ptr, ptr %207, align 8, !dbg !374
  store ptr %208, ptr %37, align 8, !dbg !374
  call void @llvm.dbg.declare(metadata ptr %37, metadata !375, metadata !DIExpression()), !dbg !374
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %26, i64 40, i1 false), !dbg !376
  %209 = load i64, ptr %29, align 8, !dbg !376
  %210 = call i64 @__init_get_struct_member_offset(ptr %38, i64 %209), !dbg !376
  store i64 %210, ptr %39, align 8, !dbg !376
  call void @llvm.dbg.declare(metadata ptr %39, metadata !377, metadata !DIExpression()), !dbg !376
  %211 = getelementptr inbounds %__init_StructMember.216, ptr %30, i32 0, i32 1, !dbg !378
  %212 = load i64, ptr %211, align 8, !dbg !378
  %213 = getelementptr inbounds %__init_Arg.214, ptr %40, i32 0, i32 0, !dbg !378
  store i64 %212, ptr %213, align 8, !dbg !378
  %214 = load ptr, ptr %37, align 8, !dbg !378
  %215 = load i64, ptr %39, align 8, !dbg !378
  %216 = getelementptr i8, ptr %214, i64 %215, !dbg !378
  %217 = getelementptr inbounds %__init_Arg.214, ptr %40, i32 0, i32 1, !dbg !378
  store ptr %216, ptr %217, align 8, !dbg !378
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %40, i64 16, i1 false), !dbg !378
  call void @llvm.dbg.declare(metadata ptr %41, metadata !379, metadata !DIExpression()), !dbg !378
  %218 = getelementptr inbounds %__init_Arg.214, ptr %41, i32 0, i32 0, !dbg !380
  %219 = getelementptr inbounds %__init_StructMember.216, ptr %30, i32 0, i32 1, !dbg !380
  %220 = load i64, ptr %219, align 8, !dbg !380
  store i64 %220, ptr %218, align 8, !dbg !380
  %221 = load ptr, ptr %2, align 8, !dbg !381
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %41, i64 16, i1 false), !dbg !381
  call void @__io_print_type(ptr %221, ptr %42), !dbg !381
  %222 = load i64, ptr %29, align 8, !dbg !382
  %223 = add i64 %222, 1, !dbg !382
  %224 = getelementptr inbounds %__init_StructType.217, ptr %26, i32 0, i32 0, !dbg !382
  %225 = getelementptr inbounds %slice.256, ptr %224, i32 0, i32 0, !dbg !382
  %226 = load i64, ptr %225, align 8, !dbg !382
  %227 = icmp ne i64 %223, %226, !dbg !382
  br i1 %227, label %block_58, label %block_59, !dbg !382

block_58:                                         ; preds = %block_55
  %228 = load ptr, ptr %2, align 8, !dbg !383
  %229 = alloca %string.213, align 8, !dbg !383
  %String9 = getelementptr inbounds %string.213, ptr %229, i32 0, i32 0, !dbg !383
  %Size10 = getelementptr inbounds %string.213, ptr %229, i32 0, i32 1, !dbg !383
  store ptr @___asan_gen__anon_global.45, ptr %String9, align 8, !dbg !383
  store i64 2, ptr %Size10, align 8, !dbg !383
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %43, ptr align 8 %229, i64 16, i1 false), !dbg !383
  call void @__io_push_string(ptr %228, ptr %43), !dbg !383
  br label %block_60, !dbg !383

block_59:                                         ; preds = %block_55
  br label %block_60, !dbg !383

block_60:                                         ; preds = %block_59, %block_58
  br label %block_56, !dbg !383

block_56:                                         ; preds = %block_60
  %230 = load i64, ptr %29, align 8, !dbg !383
  %231 = add i64 %230, 1, !dbg !383
  store i64 %231, ptr %29, align 8, !dbg !383
  br label %block_54, !dbg !383

block_57:                                         ; preds = %block_54
  %232 = load ptr, ptr %2, align 8, !dbg !384
  %233 = alloca %string.213, align 8, !dbg !384
  %String11 = getelementptr inbounds %string.213, ptr %233, i32 0, i32 0, !dbg !384
  %Size12 = getelementptr inbounds %string.213, ptr %233, i32 0, i32 1, !dbg !384
  store ptr @___asan_gen__anon_global.47, ptr %String11, align 8, !dbg !384
  store i64 2, ptr %Size12, align 8, !dbg !384
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %44, ptr align 8 %233, i64 16, i1 false), !dbg !384
  call void @__io_push_string(ptr %232, ptr %44), !dbg !384
  br label %block_1, !dbg !384

block_61:                                         ; preds = %block_0
  br label %block_1, !dbg !384

block_62:                                         ; preds = %block_0
  br label %block_1, !dbg !384

block_63:                                         ; preds = %block_0
  br label %block_1, !dbg !384

block_64:                                         ; preds = %block_0
  br label %block_1, !dbg !384

block_65:                                         ; preds = %block_0
  br label %block_1, !dbg !384

block_66:                                         ; preds = %block_0
  br label %block_1, !dbg !384

block_1:                                          ; preds = %block_66, %block_65, %block_64, %block_63, %block_62, %block_61, %block_57, %block_52, %block_6, %block_2, %block_0
  ret void, !dbg !385
}

define void @__io_builder_to_string(ptr %0, ptr %1) !dbg !386 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca %__mem_Allocator.227, align 8
  %5 = alloca %__mem_Allocator.227, align 8
  %6 = alloca %slice.261, align 8
  %7 = alloca %slice.261, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  store ptr %1, ptr %2, align 8, !dbg !392
  call void @llvm.dbg.value(metadata ptr %2, metadata !393, metadata !DIExpression()), !dbg !392
  %12 = load ptr, ptr %2, align 8, !dbg !394
  store ptr %12, ptr %3, align 8, !dbg !394
  call void @llvm.dbg.declare(metadata ptr %3, metadata !395, metadata !DIExpression()), !dbg !394
  call void @__mem_create_generic_allocator(ptr %4), !dbg !396
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %4, i64 24, i1 false), !dbg !396
  call void @llvm.dbg.declare(metadata ptr %5, metadata !397, metadata !DIExpression()), !dbg !396
  call void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr %6, i64 2, ptr %5), !dbg !411
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %6, i64 16, i1 false), !dbg !411
  call void @llvm.dbg.declare(metadata ptr %7, metadata !412, metadata !DIExpression()), !dbg !411
  %13 = load ptr, ptr %3, align 8, !dbg !413
  %14 = getelementptr inbounds %slice.260, ptr %13, i32 0, i32 0, !dbg !413
  %15 = load i64, ptr %14, align 8, !dbg !413
  store i64 0, ptr %8, align 8, !dbg !413
  br label %block_1, !dbg !413

block_1:                                          ; preds = %block_3, %block_0
  %16 = load i64, ptr %8, align 8, !dbg !413
  %17 = icmp ult i64 %16, %15, !dbg !413
  br i1 %17, label %block_2, label %block_4, !dbg !413

block_2:                                          ; preds = %block_1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !414, metadata !DIExpression()), !dbg !413
  %18 = load ptr, ptr %3, align 8, !dbg !415
  %19 = getelementptr inbounds %slice.260, ptr %18, i32 0, i32 1, !dbg !415
  %20 = load ptr, ptr %19, align 8, !dbg !415
  %21 = load i64, ptr %8, align 8, !dbg !415
  %22 = getelementptr i32, ptr %20, i64 %21, !dbg !415
  store ptr %22, ptr %9, align 8, !dbg !415
  call void @llvm.dbg.declare(metadata ptr %9, metadata !416, metadata !DIExpression()), !dbg !415
  %23 = load ptr, ptr %9, align 8, !dbg !417
  %24 = getelementptr i8, ptr %23, i64 3, !dbg !417
  store ptr %24, ptr %9, align 8, !dbg !417
  br label %block_5, !dbg !418

block_5:                                          ; preds = %block_6, %block_2
  %25 = load ptr, ptr %9, align 8, !dbg !418
  %26 = load i8, ptr %25, align 1, !dbg !418
  %27 = icmp eq i8 %26, 0, !dbg !418
  br i1 %27, label %block_6, label %block_7, !dbg !418

block_6:                                          ; preds = %block_5
  %28 = load ptr, ptr %9, align 8, !dbg !419
  %29 = getelementptr i8, ptr %28, i64 -1, !dbg !419
  store ptr %29, ptr %9, align 8, !dbg !419
  br label %block_5, !dbg !419

block_7:                                          ; preds = %block_5
  %30 = load ptr, ptr %9, align 8, !dbg !420
  %31 = call i64 @__str_get_codepoint_size(ptr %30), !dbg !420
  store i64 %31, ptr %10, align 8, !dbg !420
  call void @llvm.dbg.declare(metadata ptr %10, metadata !421, metadata !DIExpression()), !dbg !420
  %32 = load i64, ptr %10, align 8, !dbg !422
  store i64 0, ptr %11, align 8, !dbg !422
  br label %block_8, !dbg !422

block_8:                                          ; preds = %block_10, %block_7
  %33 = load i64, ptr %11, align 8, !dbg !422
  %34 = icmp ult i64 %33, %32, !dbg !422
  br i1 %34, label %block_9, label %block_11, !dbg !422

block_9:                                          ; preds = %block_8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !423, metadata !DIExpression()), !dbg !422
  %35 = load ptr, ptr %9, align 8, !dbg !424
  %36 = load i64, ptr %11, align 8, !dbg !424
  %37 = sub i64 0, %36, !dbg !424
  %38 = getelementptr i8, ptr %35, i64 %37, !dbg !424
  %39 = load i8, ptr %38, align 1, !dbg !424
  call void @"__array_add@*[]u8_u8_@void"(ptr %7, i8 %39), !dbg !424
  br label %block_10, !dbg !424

block_10:                                         ; preds = %block_9
  %40 = load i64, ptr %11, align 8, !dbg !424
  %41 = add i64 %40, 1, !dbg !424
  store i64 %41, ptr %11, align 8, !dbg !424
  br label %block_8, !dbg !424

block_11:                                         ; preds = %block_8
  br label %block_3, !dbg !424

block_3:                                          ; preds = %block_11
  %42 = load i64, ptr %8, align 8, !dbg !424
  %43 = add i64 %42, 1, !dbg !424
  store i64 %43, ptr %8, align 8, !dbg !424
  br label %block_1, !dbg !424

block_4:                                          ; preds = %block_1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !425
  ret void, !dbg !425
}

define void @__io___internal_print(ptr %0, ptr %1, ptr %2) !dbg !426 {
block_0:
  %3 = alloca %string.213, align 8
  %4 = alloca %slice.262, align 8
  %5 = alloca %__mem_Allocator.227, align 8
  %6 = alloca %__mem_Allocator.227, align 8
  %7 = alloca %slice.260, align 8
  %8 = alloca %slice.260, align 8
  %9 = alloca i64, align 8
  %10 = alloca i1, align 1
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 1, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  %13 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca %__init_Arg.214, align 8
  %15 = alloca %__init_TypeInfo.226, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 48, i1 false)
  %16 = alloca ptr, align 8
  %17 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca %__init_Arg.214, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !433
  call void @llvm.dbg.value(metadata ptr %3, metadata !434, metadata !DIExpression()), !dbg !433
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !433
  call void @llvm.dbg.value(metadata ptr %4, metadata !435, metadata !DIExpression()), !dbg !433
  call void @__mem_create_generic_allocator(ptr %5), !dbg !436
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %5, i64 24, i1 false), !dbg !436
  call void @llvm.dbg.declare(metadata ptr %6, metadata !437, metadata !DIExpression()), !dbg !436
  call void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr %7, i64 4, ptr %6), !dbg !438
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !438
  call void @llvm.dbg.declare(metadata ptr %8, metadata !439, metadata !DIExpression()), !dbg !438
  store i64 0, ptr %9, align 8, !dbg !440
  call void @llvm.dbg.declare(metadata ptr %9, metadata !441, metadata !DIExpression()), !dbg !440
  store i1 false, ptr %10, align 1, !dbg !442
  call void @llvm.dbg.declare(metadata ptr %10, metadata !443, metadata !DIExpression()), !dbg !442
  %19 = getelementptr inbounds %string.213, ptr %3, i32 0, i32 1, !dbg !444
  %20 = load i64, ptr %19, align 8, !dbg !444
  %21 = getelementptr inbounds %string.213, ptr %3, i32 0, i32 0, !dbg !444
  %22 = load ptr, ptr %21, align 8, !dbg !444
  store ptr %22, ptr %11, align 8, !dbg !444
  store i64 0, ptr %12, align 8, !dbg !444
  br label %block_1, !dbg !444

block_1:                                          ; preds = %block_3, %block_0
  %23 = load i64, ptr %12, align 8, !dbg !444
  %24 = icmp ult i64 %23, %20, !dbg !444
  br i1 %24, label %block_2, label %block_4, !dbg !444

block_2:                                          ; preds = %block_1
  %25 = load ptr, ptr %11, align 8, !dbg !444
  %26 = call i32 @__str_deref(ptr %25), !dbg !444
  store i32 %26, ptr %13, align 4, !dbg !444
  call void @llvm.dbg.declare(metadata ptr %13, metadata !445, metadata !DIExpression()), !dbg !444
  call void @llvm.dbg.declare(metadata ptr %12, metadata !446, metadata !DIExpression()), !dbg !444
  %27 = load i32, ptr %13, align 4, !dbg !447
  %28 = icmp eq i32 %27, 37, !dbg !447
  br i1 %28, label %block_5, label %block_6, !dbg !447

block_5:                                          ; preds = %block_2
  store i1 true, ptr %10, align 1, !dbg !448
  br label %block_7, !dbg !448

block_6:                                          ; preds = %block_2
  %29 = load i1, ptr %10, align 1, !dbg !449
  br i1 %29, label %block_8, label %block_9, !dbg !449

block_8:                                          ; preds = %block_6
  %30 = load i64, ptr %9, align 8, !dbg !450
  %31 = getelementptr inbounds %slice.262, ptr %4, i32 0, i32 1, !dbg !450
  %32 = load ptr, ptr %31, align 8, !dbg !450
  %33 = getelementptr %__init_Arg.214, ptr %32, i64 %30, !dbg !450
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %33, i64 16, i1 false), !dbg !450
  call void @llvm.dbg.declare(metadata ptr %14, metadata !451, metadata !DIExpression()), !dbg !450
  %34 = load i64, ptr %9, align 8, !dbg !452
  %35 = add i64 %34, 1, !dbg !452
  store i64 %35, ptr %9, align 8, !dbg !452
  %36 = getelementptr inbounds %__init_Arg.214, ptr %14, i32 0, i32 0, !dbg !453
  %37 = load i64, ptr %36, align 8, !dbg !453
  %38 = load ptr, ptr getelementptr inbounds (%slice.259, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !453
  %39 = getelementptr %__init_TypeInfo.226, ptr %38, i64 %37, !dbg !453
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %39, i64 48, i1 false), !dbg !453
  call void @llvm.dbg.declare(metadata ptr %15, metadata !454, metadata !DIExpression()), !dbg !453
  %40 = load i32, ptr %13, align 4, !dbg !455
  %41 = icmp eq i32 %40, 115, !dbg !455
  %42 = getelementptr inbounds %__init_TypeInfo.226, ptr %15, i32 0, i32 0, !dbg !455
  %43 = load i64, ptr %42, align 8, !dbg !455
  %44 = icmp eq i64 %43, 4, !dbg !455
  %45 = icmp ne i1 %41, false, !dbg !455
  %46 = icmp ne i1 %44, false, !dbg !455
  %47 = and i1 %45, %46, !dbg !455
  %48 = getelementptr inbounds %__init_TypeInfo.226, ptr %15, i32 0, i32 1, !dbg !455
  %49 = getelementptr inbounds %__init_PointerType.219, ptr %48, i32 0, i32 0, !dbg !455
  %50 = load i64, ptr %49, align 8, !dbg !455
  %51 = icmp eq i64 %50, 2, !dbg !455
  %52 = icmp ne i1 %47, false, !dbg !455
  %53 = icmp ne i1 %51, false, !dbg !455
  %54 = and i1 %52, %53, !dbg !455
  br i1 %54, label %block_11, label %block_12, !dbg !455

block_11:                                         ; preds = %block_8
  %55 = getelementptr inbounds %__init_Arg.214, ptr %14, i32 0, i32 1, !dbg !456
  %56 = load ptr, ptr %55, align 8, !dbg !456
  %57 = load ptr, ptr %56, align 8, !dbg !456
  store ptr %57, ptr %16, align 8, !dbg !456
  call void @llvm.dbg.declare(metadata ptr %16, metadata !457, metadata !DIExpression()), !dbg !456
  store i64 0, ptr %17, align 8, !dbg !458
  call void @llvm.dbg.declare(metadata ptr %17, metadata !459, metadata !DIExpression()), !dbg !458
  br label %block_14, !dbg !458

block_14:                                         ; preds = %block_16, %block_11
  %58 = load ptr, ptr %16, align 8, !dbg !458
  %59 = load i64, ptr %17, align 8, !dbg !458
  %60 = getelementptr i8, ptr %58, i64 %59, !dbg !458
  %61 = load i8, ptr %60, align 1, !dbg !458
  %62 = zext i8 %61 to i32, !dbg !458
  %63 = icmp ne i32 %62, 0, !dbg !458
  br i1 %63, label %block_15, label %block_17, !dbg !458

block_15:                                         ; preds = %block_14
  %64 = load ptr, ptr %16, align 8, !dbg !460
  %65 = load i64, ptr %17, align 8, !dbg !460
  %66 = getelementptr i8, ptr %64, i64 %65, !dbg !460
  %67 = load i8, ptr %66, align 1, !dbg !460
  %68 = zext i8 %67 to i32, !dbg !460
  call void @"__array_add@*[]u32_u32_@void"(ptr %8, i32 %68), !dbg !460
  br label %block_16, !dbg !460

block_16:                                         ; preds = %block_15
  %69 = load i64, ptr %17, align 8, !dbg !460
  %70 = add i64 %69, 1, !dbg !460
  store i64 %70, ptr %17, align 8, !dbg !460
  %71 = load i64, ptr %17, align 8, !dbg !460
  br label %block_14, !dbg !460

block_17:                                         ; preds = %block_14
  br label %block_13, !dbg !460

block_12:                                         ; preds = %block_8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %14, i64 16, i1 false), !dbg !461
  call void @__io_print_type(ptr %8, ptr %18), !dbg !461
  %72 = load i32, ptr %13, align 4, !dbg !462
  call void @"__array_add@*[]u32_u32_@void"(ptr %8, i32 %72), !dbg !462
  br label %block_13, !dbg !462

block_13:                                         ; preds = %block_12, %block_17
  br label %block_10, !dbg !462

block_9:                                          ; preds = %block_6
  %73 = load i32, ptr %13, align 4, !dbg !463
  call void @"__array_add@*[]u32_u32_@void"(ptr %8, i32 %73), !dbg !463
  br label %block_10, !dbg !463

block_10:                                         ; preds = %block_9, %block_13
  br label %block_7, !dbg !463

block_7:                                          ; preds = %block_10, %block_5
  br label %block_3, !dbg !463

block_3:                                          ; preds = %block_7
  %74 = load i64, ptr %12, align 8, !dbg !463
  %75 = add i64 %74, 1, !dbg !463
  store i64 %75, ptr %12, align 8, !dbg !463
  %76 = load ptr, ptr %11, align 8, !dbg !463
  %77 = call ptr @__str__it_advance(ptr %76, i64 %20, i64 %74), !dbg !463
  store ptr %77, ptr %11, align 8, !dbg !463
  br label %block_1, !dbg !463

block_4:                                          ; preds = %block_1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !464
  ret void, !dbg !464
}

define void @__io_print(ptr %0, ptr %1) !dbg !465 {
block_0:
  %2 = alloca %string.213, align 8
  %3 = alloca %slice.262, align 8
  %4 = alloca %slice.260, align 8
  %5 = alloca %string.213, align 8
  %6 = alloca %slice.260, align 8
  %7 = alloca %slice.261, align 8
  %8 = alloca %slice.261, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !468
  call void @llvm.dbg.value(metadata ptr %2, metadata !469, metadata !DIExpression()), !dbg !468
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !468
  call void @llvm.dbg.value(metadata ptr %3, metadata !470, metadata !DIExpression()), !dbg !468
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !471
  call void @__io___internal_print(ptr %4, ptr %5, ptr %3), !dbg !471
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !471
  call void @llvm.dbg.declare(metadata ptr %6, metadata !472, metadata !DIExpression()), !dbg !471
  call void @__io_builder_to_string(ptr %7, ptr %6), !dbg !473
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !473
  call void @llvm.dbg.declare(metadata ptr %8, metadata !474, metadata !DIExpression()), !dbg !473
  %9 = getelementptr inbounds %slice.261, ptr %8, i32 0, i32 1, !dbg !475
  %10 = load ptr, ptr %9, align 8, !dbg !475
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !475
  %12 = getelementptr inbounds %slice.261, ptr %8, i32 0, i32 0, !dbg !475
  %13 = load i64, ptr %12, align 8, !dbg !475
  %14 = trunc i64 %13 to i32, !dbg !475
  call void @__os_print(ptr %11, i32 %14), !dbg !475
  call void @"__array_free@*[]u32_@void"(ptr %6), !dbg !476
  call void @"__array_free@*[]u8_@void"(ptr %8), !dbg !477
  ret void, !dbg !478
}

define void @__io_println(ptr %0, ptr %1) !dbg !479 {
block_0:
  %2 = alloca %string.213, align 8
  %3 = alloca %slice.262, align 8
  %4 = alloca %slice.260, align 8
  %5 = alloca %string.213, align 8
  %6 = alloca %slice.260, align 8
  %7 = alloca %slice.261, align 8
  %8 = alloca %slice.261, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !480
  call void @llvm.dbg.value(metadata ptr %2, metadata !481, metadata !DIExpression()), !dbg !480
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !480
  call void @llvm.dbg.value(metadata ptr %3, metadata !482, metadata !DIExpression()), !dbg !480
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !483
  call void @__io___internal_print(ptr %4, ptr %5, ptr %3), !dbg !483
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !483
  call void @llvm.dbg.declare(metadata ptr %6, metadata !484, metadata !DIExpression()), !dbg !483
  call void @"__array_add@*[]u32_u32_@void"(ptr %6, i32 10), !dbg !485
  call void @__io_builder_to_string(ptr %7, ptr %6), !dbg !486
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !486
  call void @llvm.dbg.declare(metadata ptr %8, metadata !487, metadata !DIExpression()), !dbg !486
  %9 = getelementptr inbounds %slice.261, ptr %8, i32 0, i32 1, !dbg !488
  %10 = load ptr, ptr %9, align 8, !dbg !488
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !488
  %12 = getelementptr inbounds %slice.261, ptr %8, i32 0, i32 0, !dbg !488
  %13 = load i64, ptr %12, align 8, !dbg !488
  %14 = trunc i64 %13 to i32, !dbg !488
  call void @__os_print(ptr %11, i32 %14), !dbg !488
  call void @"__array_free@*[]u32_@void"(ptr %6), !dbg !489
  call void @"__array_free@*[]u8_@void"(ptr %8), !dbg !490
  ret void, !dbg !491
}

define i32 @__io_get_next(ptr %0) !dbg !492 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !495
  call void @llvm.dbg.value(metadata ptr %1, metadata !496, metadata !DIExpression()), !dbg !495
  %4 = load ptr, ptr %1, align 8, !dbg !497
  store ptr %4, ptr %2, align 8, !dbg !497
  call void @llvm.dbg.declare(metadata ptr %2, metadata !498, metadata !DIExpression()), !dbg !497
  %5 = load ptr, ptr %2, align 8, !dbg !499
  %6 = load i8, ptr %5, align 1, !dbg !499
  %7 = zext i8 %6 to i32, !dbg !499
  store i32 %7, ptr %3, align 4, !dbg !499
  call void @llvm.dbg.declare(metadata ptr %3, metadata !500, metadata !DIExpression()), !dbg !499
  br label %block_1, !dbg !501

block_1:                                          ; preds = %block_6, %block_0
  br label %block_2, !dbg !501

block_2:                                          ; preds = %block_1
  %8 = load ptr, ptr %2, align 8, !dbg !502
  %9 = load i8, ptr %8, align 1, !dbg !502
  %10 = and i8 %9, -128, !dbg !502
  %11 = icmp ne i8 %10, 0, !dbg !502
  br i1 %11, label %block_4, label %block_5, !dbg !502

block_4:                                          ; preds = %block_2
  %12 = load ptr, ptr %2, align 8, !dbg !503
  %13 = getelementptr i8, ptr %12, i64 1, !dbg !503
  store ptr %13, ptr %2, align 8, !dbg !503
  %14 = load i32, ptr %3, align 4, !dbg !504
  %15 = shl i32 %14, 8, !dbg !504
  %16 = load ptr, ptr %2, align 8, !dbg !504
  %17 = load i8, ptr %16, align 1, !dbg !504
  %18 = zext i8 %17 to i32, !dbg !504
  %19 = or i32 %15, %18, !dbg !504
  store i32 %19, ptr %3, align 4, !dbg !504
  br label %block_6, !dbg !504

block_5:                                          ; preds = %block_2
  %20 = load i32, ptr %3, align 4, !dbg !505
  ret i32 %20, !dbg !505

block_6:                                          ; preds = %block_4
  br label %block_1, !dbg !505

block_3:                                          ; No predecessors!
  %21 = load i32, ptr %3, align 4, !dbg !506
  ret i32 %21, !dbg !506
}

define void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64 %0, ptr %1, float %2, i32 %3) !dbg !507 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %11, i8 0, i32 4, i1 false)
  %12 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %12, i8 0, i32 1, i1 false)
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %14, i8 0, i32 4, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store i64 %0, ptr %4, align 8, !dbg !511
  call void @llvm.dbg.value(metadata ptr %4, metadata !512, metadata !DIExpression()), !dbg !511
  store ptr %1, ptr %5, align 8, !dbg !511
  call void @llvm.dbg.value(metadata ptr %5, metadata !513, metadata !DIExpression()), !dbg !511
  store float %2, ptr %6, align 4, !dbg !511
  call void @llvm.dbg.value(metadata ptr %6, metadata !514, metadata !DIExpression()), !dbg !511
  store i32 %3, ptr %7, align 4, !dbg !511
  call void @llvm.dbg.value(metadata ptr %7, metadata !515, metadata !DIExpression()), !dbg !511
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !516
  call void @llvm.dbg.declare(metadata ptr %9, metadata !517, metadata !DIExpression()), !dbg !516
  store i64 0, ptr %10, align 8, !dbg !518
  call void @llvm.dbg.declare(metadata ptr %10, metadata !519, metadata !DIExpression()), !dbg !518
  %16 = load float, ptr %6, align 4, !dbg !520
  store float %16, ptr %11, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata ptr %11, metadata !521, metadata !DIExpression()), !dbg !520
  %17 = load i64, ptr %4, align 8, !dbg !522
  %18 = icmp ne i64 %17, 10, !dbg !522
  %19 = load i64, ptr %4, align 8, !dbg !522
  %20 = icmp ne i64 %19, 11, !dbg !522
  %21 = icmp ne i1 %18, false, !dbg !522
  %22 = icmp ne i1 %20, false, !dbg !522
  %23 = and i1 %21, %22, !dbg !522
  br i1 %23, label %block_1, label %block_2, !dbg !522

block_1:                                          ; preds = %block_0
  ret void, !dbg !523

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !523

block_3:                                          ; preds = %block_2
  %24 = load float, ptr %11, align 4, !dbg !524
  %25 = fcmp oeq float %24, 0.000000e+00, !dbg !524
  br i1 %25, label %block_4, label %block_5, !dbg !524

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !525
  call void @"__array_add@*[]u32_u32_@void"(ptr %26, i32 48), !dbg !525
  ret void, !dbg !526

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !526

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !527
  call void @llvm.dbg.declare(metadata ptr %12, metadata !528, metadata !DIExpression()), !dbg !527
  %27 = load float, ptr %11, align 4, !dbg !529
  %28 = fcmp olt float %27, 0.000000e+00, !dbg !529
  br i1 %28, label %block_7, label %block_8, !dbg !529

block_7:                                          ; preds = %block_6
  %29 = load float, ptr %11, align 4, !dbg !530
  %30 = fsub float 0.000000e+00, %29, !dbg !530
  store float %30, ptr %11, align 4, !dbg !530
  store i1 true, ptr %12, align 1, !dbg !531
  br label %block_9, !dbg !531

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !531

block_9:                                          ; preds = %block_8, %block_7
  %31 = load float, ptr %11, align 4, !dbg !532
  %32 = fadd float %31, 0x3F747AE140000000, !dbg !532
  store float %32, ptr %11, align 4, !dbg !532
  %33 = load float, ptr %11, align 4, !dbg !533
  %34 = fptosi float %33 to i32, !dbg !533
  store i32 %34, ptr %13, align 4, !dbg !533
  call void @llvm.dbg.declare(metadata ptr %13, metadata !534, metadata !DIExpression()), !dbg !533
  %35 = load float, ptr %11, align 4, !dbg !535
  %36 = load i32, ptr %7, align 4, !dbg !535
  %37 = sitofp i32 %36 to float, !dbg !535
  %38 = fmul float %35, %37, !dbg !535
  %39 = fptosi float %38 to i32, !dbg !535
  %40 = load i32, ptr %7, align 4, !dbg !535
  %41 = srem i32 %39, %40, !dbg !535
  store i32 %41, ptr %14, align 4, !dbg !535
  call void @llvm.dbg.declare(metadata ptr %14, metadata !536, metadata !DIExpression()), !dbg !535
  %42 = load i32, ptr %14, align 4, !dbg !537
  %43 = icmp eq i32 %42, 0, !dbg !537
  br i1 %43, label %block_10, label %block_11, !dbg !537

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !538
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !538
  store i32 48, ptr %45, align 4, !dbg !538
  %46 = load i64, ptr %10, align 8, !dbg !539
  %47 = add i64 %46, 1, !dbg !539
  store i64 %47, ptr %10, align 8, !dbg !539
  br label %block_12, !dbg !539

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !540

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !540
  %49 = icmp sgt i32 %48, 0, !dbg !540
  br i1 %49, label %block_14, label %block_15, !dbg !540

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !541
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !541
  %52 = load i32, ptr %14, align 4, !dbg !541
  %53 = srem i32 %52, 10, !dbg !541
  %54 = trunc i32 %53 to i8, !dbg !541
  %55 = zext i8 %54 to i32, !dbg !541
  %56 = add i32 48, %55, !dbg !541
  store i32 %56, ptr %51, align 4, !dbg !541
  %57 = load i64, ptr %10, align 8, !dbg !542
  %58 = add i64 %57, 1, !dbg !542
  store i64 %58, ptr %10, align 8, !dbg !542
  %59 = load i32, ptr %14, align 4, !dbg !543
  %60 = sdiv i32 %59, 10, !dbg !543
  store i32 %60, ptr %14, align 4, !dbg !543
  br label %block_13, !dbg !543

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !543

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !544
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !544
  store i32 46, ptr %62, align 4, !dbg !544
  %63 = load i64, ptr %10, align 8, !dbg !545
  %64 = add i64 %63, 1, !dbg !545
  store i64 %64, ptr %10, align 8, !dbg !545
  %65 = load i32, ptr %13, align 4, !dbg !546
  %66 = icmp eq i32 %65, 0, !dbg !546
  br i1 %66, label %block_16, label %block_17, !dbg !546

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !547
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !547
  store i32 48, ptr %68, align 4, !dbg !547
  %69 = load i64, ptr %10, align 8, !dbg !548
  %70 = add i64 %69, 1, !dbg !548
  store i64 %70, ptr %10, align 8, !dbg !548
  br label %block_18, !dbg !548

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !549

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !549
  %72 = icmp sgt i32 %71, 0, !dbg !549
  br i1 %72, label %block_20, label %block_21, !dbg !549

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !550
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !550
  %75 = load i32, ptr %13, align 4, !dbg !550
  %76 = srem i32 %75, 10, !dbg !550
  %77 = add i32 48, %76, !dbg !550
  store i32 %77, ptr %74, align 4, !dbg !550
  %78 = load i64, ptr %10, align 8, !dbg !551
  %79 = add i64 %78, 1, !dbg !551
  store i64 %79, ptr %10, align 8, !dbg !551
  %80 = load i32, ptr %13, align 4, !dbg !552
  %81 = sdiv i32 %80, 10, !dbg !552
  store i32 %81, ptr %13, align 4, !dbg !552
  br label %block_19, !dbg !552

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !552

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !553
  br i1 %82, label %block_22, label %block_23, !dbg !553

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !554
  call void @"__array_add@*[]u32_u32_@void"(ptr %83, i32 45), !dbg !554
  br label %block_24, !dbg !554

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !554

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !555
  store i64 0, ptr %15, align 8, !dbg !555
  br label %block_25, !dbg !555

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !555
  %86 = icmp ult i64 %85, %84, !dbg !555
  br i1 %86, label %block_26, label %block_28, !dbg !555

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !556, metadata !DIExpression()), !dbg !555
  %87 = load ptr, ptr %5, align 8, !dbg !557
  %88 = load i64, ptr %10, align 8, !dbg !557
  %89 = load i64, ptr %15, align 8, !dbg !557
  %90 = sub i64 %88, %89, !dbg !557
  %91 = sub i64 %90, 1, !dbg !557
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !557
  %93 = load i32, ptr %92, align 4, !dbg !557
  call void @"__array_add@*[]u32_u32_@void"(ptr %87, i32 %93), !dbg !557
  br label %block_27, !dbg !557

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !557
  %95 = add i64 %94, 1, !dbg !557
  store i64 %95, ptr %15, align 8, !dbg !557
  br label %block_25, !dbg !557

block_28:                                         ; preds = %block_25
  ret void, !dbg !558
}

define void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64 %0, ptr %1, double %2, i32 %3) !dbg !559 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  %12 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %12, i8 0, i32 1, i1 false)
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %14, i8 0, i32 4, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store i64 %0, ptr %4, align 8, !dbg !562
  call void @llvm.dbg.value(metadata ptr %4, metadata !563, metadata !DIExpression()), !dbg !562
  store ptr %1, ptr %5, align 8, !dbg !562
  call void @llvm.dbg.value(metadata ptr %5, metadata !564, metadata !DIExpression()), !dbg !562
  store double %2, ptr %6, align 8, !dbg !562
  call void @llvm.dbg.value(metadata ptr %6, metadata !565, metadata !DIExpression()), !dbg !562
  store i32 %3, ptr %7, align 4, !dbg !562
  call void @llvm.dbg.value(metadata ptr %7, metadata !566, metadata !DIExpression()), !dbg !562
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !567
  call void @llvm.dbg.declare(metadata ptr %9, metadata !568, metadata !DIExpression()), !dbg !567
  store i64 0, ptr %10, align 8, !dbg !569
  call void @llvm.dbg.declare(metadata ptr %10, metadata !570, metadata !DIExpression()), !dbg !569
  %16 = load double, ptr %6, align 8, !dbg !571
  store double %16, ptr %11, align 8, !dbg !571
  call void @llvm.dbg.declare(metadata ptr %11, metadata !572, metadata !DIExpression()), !dbg !571
  %17 = load i64, ptr %4, align 8, !dbg !573
  %18 = icmp ne i64 %17, 10, !dbg !573
  %19 = load i64, ptr %4, align 8, !dbg !573
  %20 = icmp ne i64 %19, 11, !dbg !573
  %21 = icmp ne i1 %18, false, !dbg !573
  %22 = icmp ne i1 %20, false, !dbg !573
  %23 = and i1 %21, %22, !dbg !573
  br i1 %23, label %block_1, label %block_2, !dbg !573

block_1:                                          ; preds = %block_0
  ret void, !dbg !574

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !574

block_3:                                          ; preds = %block_2
  %24 = load double, ptr %11, align 8, !dbg !575
  %25 = fcmp oeq double %24, 0.000000e+00, !dbg !575
  br i1 %25, label %block_4, label %block_5, !dbg !575

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !576
  call void @"__array_add@*[]u32_u32_@void"(ptr %26, i32 48), !dbg !576
  ret void, !dbg !577

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !577

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !578
  call void @llvm.dbg.declare(metadata ptr %12, metadata !579, metadata !DIExpression()), !dbg !578
  %27 = load double, ptr %11, align 8, !dbg !580
  %28 = fcmp olt double %27, 0.000000e+00, !dbg !580
  br i1 %28, label %block_7, label %block_8, !dbg !580

block_7:                                          ; preds = %block_6
  %29 = load double, ptr %11, align 8, !dbg !581
  %30 = fsub double 0.000000e+00, %29, !dbg !581
  store double %30, ptr %11, align 8, !dbg !581
  store i1 true, ptr %12, align 1, !dbg !582
  br label %block_9, !dbg !582

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !582

block_9:                                          ; preds = %block_8, %block_7
  %31 = load double, ptr %11, align 8, !dbg !583
  %32 = fadd double %31, 0x3F747AE140000000, !dbg !583
  store double %32, ptr %11, align 8, !dbg !583
  %33 = load double, ptr %11, align 8, !dbg !584
  %34 = fptosi double %33 to i32, !dbg !584
  store i32 %34, ptr %13, align 4, !dbg !584
  call void @llvm.dbg.declare(metadata ptr %13, metadata !585, metadata !DIExpression()), !dbg !584
  %35 = load double, ptr %11, align 8, !dbg !586
  %36 = load i32, ptr %7, align 4, !dbg !586
  %37 = sitofp i32 %36 to double, !dbg !586
  %38 = fmul double %35, %37, !dbg !586
  %39 = fptosi double %38 to i32, !dbg !586
  %40 = load i32, ptr %7, align 4, !dbg !586
  %41 = srem i32 %39, %40, !dbg !586
  store i32 %41, ptr %14, align 4, !dbg !586
  call void @llvm.dbg.declare(metadata ptr %14, metadata !587, metadata !DIExpression()), !dbg !586
  %42 = load i32, ptr %14, align 4, !dbg !588
  %43 = icmp eq i32 %42, 0, !dbg !588
  br i1 %43, label %block_10, label %block_11, !dbg !588

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !589
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !589
  store i32 48, ptr %45, align 4, !dbg !589
  %46 = load i64, ptr %10, align 8, !dbg !590
  %47 = add i64 %46, 1, !dbg !590
  store i64 %47, ptr %10, align 8, !dbg !590
  br label %block_12, !dbg !590

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !591

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !591
  %49 = icmp sgt i32 %48, 0, !dbg !591
  br i1 %49, label %block_14, label %block_15, !dbg !591

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !592
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !592
  %52 = load i32, ptr %14, align 4, !dbg !592
  %53 = srem i32 %52, 10, !dbg !592
  %54 = trunc i32 %53 to i8, !dbg !592
  %55 = zext i8 %54 to i32, !dbg !592
  %56 = add i32 48, %55, !dbg !592
  store i32 %56, ptr %51, align 4, !dbg !592
  %57 = load i64, ptr %10, align 8, !dbg !593
  %58 = add i64 %57, 1, !dbg !593
  store i64 %58, ptr %10, align 8, !dbg !593
  %59 = load i32, ptr %14, align 4, !dbg !594
  %60 = sdiv i32 %59, 10, !dbg !594
  store i32 %60, ptr %14, align 4, !dbg !594
  br label %block_13, !dbg !594

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !594

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !595
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !595
  store i32 46, ptr %62, align 4, !dbg !595
  %63 = load i64, ptr %10, align 8, !dbg !596
  %64 = add i64 %63, 1, !dbg !596
  store i64 %64, ptr %10, align 8, !dbg !596
  %65 = load i32, ptr %13, align 4, !dbg !597
  %66 = icmp eq i32 %65, 0, !dbg !597
  br i1 %66, label %block_16, label %block_17, !dbg !597

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !598
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !598
  store i32 48, ptr %68, align 4, !dbg !598
  %69 = load i64, ptr %10, align 8, !dbg !599
  %70 = add i64 %69, 1, !dbg !599
  store i64 %70, ptr %10, align 8, !dbg !599
  br label %block_18, !dbg !599

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !600

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !600
  %72 = icmp sgt i32 %71, 0, !dbg !600
  br i1 %72, label %block_20, label %block_21, !dbg !600

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !601
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !601
  %75 = load i32, ptr %13, align 4, !dbg !601
  %76 = srem i32 %75, 10, !dbg !601
  %77 = add i32 48, %76, !dbg !601
  store i32 %77, ptr %74, align 4, !dbg !601
  %78 = load i64, ptr %10, align 8, !dbg !602
  %79 = add i64 %78, 1, !dbg !602
  store i64 %79, ptr %10, align 8, !dbg !602
  %80 = load i32, ptr %13, align 4, !dbg !603
  %81 = sdiv i32 %80, 10, !dbg !603
  store i32 %81, ptr %13, align 4, !dbg !603
  br label %block_19, !dbg !603

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !603

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !604
  br i1 %82, label %block_22, label %block_23, !dbg !604

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !605
  call void @"__array_add@*[]u32_u32_@void"(ptr %83, i32 45), !dbg !605
  br label %block_24, !dbg !605

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !605

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !606
  store i64 0, ptr %15, align 8, !dbg !606
  br label %block_25, !dbg !606

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !606
  %86 = icmp ult i64 %85, %84, !dbg !606
  br i1 %86, label %block_26, label %block_28, !dbg !606

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !607, metadata !DIExpression()), !dbg !606
  %87 = load ptr, ptr %5, align 8, !dbg !608
  %88 = load i64, ptr %10, align 8, !dbg !608
  %89 = load i64, ptr %15, align 8, !dbg !608
  %90 = sub i64 %88, %89, !dbg !608
  %91 = sub i64 %90, 1, !dbg !608
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !608
  %93 = load i32, ptr %92, align 4, !dbg !608
  call void @"__array_add@*[]u32_u32_@void"(ptr %87, i32 %93), !dbg !608
  br label %block_27, !dbg !608

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !608
  %95 = add i64 %94, 1, !dbg !608
  store i64 %95, ptr %15, align 8, !dbg !608
  br label %block_25, !dbg !608

block_28:                                         ; preds = %block_25
  ret void, !dbg !609
}

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_add@*[]u32_u32_@void"(ptr, i32)

declare void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr, i64, ptr)

declare void @"__array_add@*[]u8_u8_@void"(ptr, i8)

declare void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr, i64, ptr)

declare void @"__array_free@*[]u32_@void"(ptr)

declare void @"__array_free@*[]u8_@void"(ptr)

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @__asan_before_dynamic_init(i64)

declare void @__asan_after_dynamic_init()

declare void @__asan_register_globals(i64, i64)

declare void @__asan_unregister_globals(i64, i64)

declare void @__asan_register_image_globals(i64)

declare void @__asan_unregister_image_globals(i64)

declare void @__asan_register_elf_globals(i64, i64, i64)

declare void @__asan_unregister_elf_globals(i64, i64, i64)

declare void @__asan_init()

; Function Attrs: nounwind
define internal void @asan.module_ctor() #3 {
  call void @__asan_init()
  call void @__asan_version_mismatch_check_v8()
  ret void
}

declare void @__asan_version_mismatch_check_v8()

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!16}
!llvm.module.flags = !{!82, !83}

!0 = !{ptr @___asan_gen__anon_global}
!1 = !{ptr @___asan_gen__anon_global.19}
!2 = !{ptr @___asan_gen__anon_global.21}
!3 = !{ptr @___asan_gen__anon_global.23}
!4 = !{ptr @___asan_gen__anon_global.25}
!5 = !{ptr @___asan_gen__anon_global.27}
!6 = !{ptr @___asan_gen__anon_global.29}
!7 = !{ptr @___asan_gen__anon_global.31}
!8 = !{ptr @___asan_gen__anon_global.33}
!9 = !{ptr @___asan_gen__anon_global.35}
!10 = !{ptr @___asan_gen__anon_global.37}
!11 = !{ptr @___asan_gen__anon_global.39}
!12 = !{ptr @___asan_gen__anon_global.41}
!13 = !{ptr @___asan_gen__anon_global.43}
!14 = !{ptr @___asan_gen__anon_global.45}
!15 = !{ptr @___asan_gen__anon_global.47}
!16 = distinct !DICompileUnit(language: DW_LANG_C99, file: !17, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !18, splitDebugInlining: false)
!17 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!18 = !{!19, !31, !52, !61, !66, !70, !78, !19, !31, !52, !61, !66, !70}
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !17, file: !17, size: 64, align: 64, elements: !20)
!20 = !{!21, !22, !23, !24, !25, !26, !27, !28, !29, !30}
!21 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!24 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!25 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!26 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!27 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!28 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!29 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!30 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !17, file: !17, size: 64, align: 64, elements: !32)
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51}
!33 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!40 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!41 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!43 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!44 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!45 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!46 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!47 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!48 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!49 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!50 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!51 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !17, file: !17, size: 32, align: 32, elements: !53)
!53 = !{!54, !55, !56, !57, !58, !59, !60}
!54 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!57 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!58 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!59 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!60 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !17, file: !17, size: 32, align: 32, elements: !62)
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !17, file: !17, size: 64, align: 64, elements: !67)
!67 = !{!68, !69}
!68 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !17, file: !17, size: 32, align: 32, elements: !71)
!71 = !{!72, !73, !74, !75, !76, !77}
!72 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!74 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!75 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!77 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_EventType", scope: !17, file: !17, size: 32, align: 32, elements: !79)
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "FIRST", value: 0)
!81 = !DIEnumerator(name: "QUIT", value: 256, isUnsigned: true)
!82 = !{i32 2, !"CodeView", i32 1}
!83 = !{i32 2, !"Debug Info Version", i32 3}
!84 = distinct !DISubprogram(name: "push_string", linkageName: "__io_push_string", scope: !17, file: !17, line: 9, type: !85, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!85 = !DISubroutineType(types: !86)
!86 = !{null, !87, !95}
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u32", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!88 = !DICompositeType(tag: DW_TAG_structure_type, scope: !17, file: !17, size: 128, align: 64, elements: !89)
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !17, file: !17, baseType: !91, size: 64, align: 64)
!91 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !17, file: !17, baseType: !93, size: 64, align: 64, offset: 64)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u32", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!94 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!95 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !96, file: !96, size: 128, elements: !97)
!96 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!97 = !{!98, !101}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !96, file: !96, baseType: !99, size: 64, align: 64)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !100, size: 64, align: 64, dwarfAddressSpace: 0)
!100 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !96, file: !96, baseType: !91, size: 64, align: 64, offset: 64)
!102 = !{}
!103 = !DILocation(line: 9, scope: !84)
!104 = !DILocalVariable(name: "b", scope: !84, file: !17, line: 9, type: !87)
!105 = !DILocalVariable(name: "to_push", arg: 1, scope: !84, file: !17, line: 9, type: !95)
!106 = !DILocation(line: 10, scope: !84)
!107 = !DILocalVariable(name: "c", scope: !84, file: !17, line: 10, type: !94)
!108 = !DILocalVariable(name: "i", scope: !84, file: !17, line: 10, type: !91)
!109 = !DILocation(line: 11, scope: !84)
!110 = !DILocation(line: 13, scope: !84)
!111 = distinct !DISubprogram(name: "format_uint", linkageName: "__io_format_uint", scope: !17, file: !17, line: 15, type: !112, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!112 = !DISubroutineType(types: !113)
!113 = !{null, !87, !114}
!114 = !DIBasicType(name: "uint", size: 64, encoding: DW_ATE_unsigned)
!115 = !DILocation(line: 15, scope: !111)
!116 = !DILocalVariable(name: "b", scope: !111, file: !17, line: 15, type: !87)
!117 = !DILocalVariable(name: "num_in", arg: 1, scope: !111, file: !17, line: 15, type: !114)
!118 = !DILocation(line: 16, scope: !111)
!119 = !DILocalVariable(name: "temp", scope: !111, file: !17, line: 16, type: !120)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 8192, align: 32, elements: !121)
!121 = !{!122}
!122 = !DISubrange(count: 256, lowerBound: 0)
!123 = !DILocation(line: 17, scope: !111)
!124 = !DILocalVariable(name: "num", scope: !111, file: !17, line: 17, type: !114)
!125 = !DILocation(line: 18, scope: !111)
!126 = !DILocation(line: 19, scope: !111)
!127 = !DILocation(line: 20, scope: !111)
!128 = !DILocation(line: 23, scope: !111)
!129 = !DILocalVariable(name: "count", scope: !111, file: !17, line: 23, type: !91)
!130 = !DILocation(line: 24, scope: !111)
!131 = !DILocation(line: 25, scope: !111)
!132 = !DILocalVariable(name: "digit", scope: !111, file: !17, line: 25, type: !114)
!133 = !DILocation(line: 26, scope: !111)
!134 = !DILocation(line: 27, scope: !111)
!135 = !DILocalVariable(name: "c", scope: !111, file: !17, line: 27, type: !114)
!136 = !DILocation(line: 28, scope: !111)
!137 = !DILocation(line: 29, scope: !111)
!138 = !DILocation(line: 32, scope: !111)
!139 = !DILocalVariable(name: "i", scope: !111, file: !17, line: 32, type: !91)
!140 = !DILocation(line: 33, scope: !111)
!141 = !DILocation(line: 35, scope: !111)
!142 = distinct !DISubprogram(name: "format_int", linkageName: "__io_format_int", scope: !17, file: !17, line: 37, type: !143, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!143 = !DISubroutineType(types: !144)
!144 = !{null, !87, !91}
!145 = !DILocation(line: 37, scope: !142)
!146 = !DILocalVariable(name: "b", scope: !142, file: !17, line: 37, type: !87)
!147 = !DILocalVariable(name: "num_in", arg: 1, scope: !142, file: !17, line: 37, type: !91)
!148 = !DILocation(line: 38, scope: !142)
!149 = !DILocalVariable(name: "temp", scope: !142, file: !17, line: 38, type: !120)
!150 = !DILocation(line: 39, scope: !142)
!151 = !DILocalVariable(name: "num", scope: !142, file: !17, line: 39, type: !91)
!152 = !DILocation(line: 40, scope: !142)
!153 = !DILocation(line: 41, scope: !142)
!154 = !DILocation(line: 42, scope: !142)
!155 = !DILocation(line: 45, scope: !142)
!156 = !DILocalVariable(name: "is_neg", scope: !142, file: !17, line: 45, type: !157)
!157 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DILocation(line: 46, scope: !142)
!159 = !DILocation(line: 47, scope: !142)
!160 = !DILocation(line: 48, scope: !142)
!161 = !DILocation(line: 51, scope: !142)
!162 = !DILocalVariable(name: "count", scope: !142, file: !17, line: 51, type: !91)
!163 = !DILocation(line: 52, scope: !142)
!164 = !DILocation(line: 53, scope: !142)
!165 = !DILocalVariable(name: "digit", scope: !142, file: !17, line: 53, type: !91)
!166 = !DILocation(line: 54, scope: !142)
!167 = !DILocation(line: 55, scope: !142)
!168 = !DILocalVariable(name: "c", scope: !142, file: !17, line: 55, type: !94)
!169 = !DILocation(line: 56, scope: !142)
!170 = !DILocation(line: 57, scope: !142)
!171 = !DILocation(line: 60, scope: !142)
!172 = !DILocation(line: 62, scope: !142)
!173 = !DILocalVariable(name: "i", scope: !142, file: !17, line: 62, type: !91)
!174 = !DILocation(line: 63, scope: !142)
!175 = !DILocation(line: 65, scope: !142)
!176 = distinct !DISubprogram(name: "print_typetype", linkageName: "__io_print_typetype", scope: !17, file: !17, line: 127, type: !177, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!177 = !DISubroutineType(types: !178)
!178 = !{null, !87, !179}
!179 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_TypeInfo", scope: !17, file: !17, size: 384, elements: !180)
!180 = !{!181, !183}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !17, file: !17, baseType: !182, size: 64, align: 64)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !96, file: !96, size: 64, align: 64, elements: !20)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !17, file: !17, baseType: !184, size: 320, align: 64, offset: 64)
!184 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_TypeUnion", scope: !17, file: !17, size: 320, elements: !185)
!185 = !{!186, !194, !209, !218, !223, !228, !231, !241, !247}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !17, file: !17, baseType: !187, size: 256, align: 64)
!187 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_BasicType", scope: !17, file: !17, size: 256, elements: !188)
!188 = !{!189, !191, !192, !193}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !17, file: !17, baseType: !190, size: 64, align: 64)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !96, file: !96, size: 64, align: 64, elements: !32)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !17, file: !17, baseType: !94, size: 32, align: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17, file: !17, baseType: !94, size: 32, align: 32, offset: 96)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17, file: !17, baseType: !95, size: 128, align: 64, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "struct_", scope: !17, file: !17, baseType: !195, size: 320, align: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructType", scope: !17, file: !17, size: 320, elements: !196)
!196 = !{!197, !193, !208}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !17, file: !17, baseType: !198, size: 128, align: 64)
!198 = !DICompositeType(tag: DW_TAG_structure_type, scope: !96, file: !96, size: 128, align: 64, elements: !199)
!199 = !{!200, !201}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !96, file: !96, baseType: !91, size: 64, align: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !96, file: !96, baseType: !202, size: 64, align: 64, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init_StructMember", baseType: !203, size: 64, align: 64, dwarfAddressSpace: 0)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructMember", scope: !96, file: !96, size: 192, elements: !204)
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !96, file: !96, baseType: !95, size: 128, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !96, file: !96, baseType: !207, size: 64, align: 64, offset: 128)
!207 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !17, file: !17, baseType: !94, size: 32, align: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !17, file: !17, baseType: !210, size: 192, align: 64)
!210 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_FunctionType", scope: !17, file: !17, size: 192, elements: !211)
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "return_", scope: !17, file: !17, baseType: !207, size: 64, align: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "args_t", scope: !17, file: !17, baseType: !214, size: 128, align: 64, offset: 64)
!214 = !DICompositeType(tag: DW_TAG_structure_type, scope: !96, file: !96, size: 128, align: 64, elements: !215)
!215 = !{!200, !216}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !96, file: !96, baseType: !217, size: 64, align: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*type", baseType: !207, size: 64, align: 64, dwarfAddressSpace: 0)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !17, file: !17, baseType: !219, size: 128, align: 64)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_PointerType", scope: !17, file: !17, size: 128, elements: !220)
!220 = !{!221, !222}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "pointee", scope: !17, file: !17, baseType: !207, size: 64, align: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "is_optional", scope: !17, file: !17, baseType: !157, size: 8, align: 8, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !17, file: !17, baseType: !224, size: 128, align: 64)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_ArrayType", scope: !17, file: !17, size: 128, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !17, file: !17, baseType: !207, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "member_count", scope: !17, file: !17, baseType: !94, size: 32, align: 32, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !17, file: !17, baseType: !229, size: 64, align: 64)
!229 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_SliceType", scope: !17, file: !17, size: 64, elements: !230)
!230 = !{!226}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "enum_", scope: !17, file: !17, baseType: !232, size: 320, align: 64)
!232 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_EnumType", scope: !17, file: !17, size: 320, elements: !233)
!233 = !{!234, !235, !240}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17, file: !17, baseType: !95, size: 128, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "member_names", scope: !17, file: !17, baseType: !236, size: 128, align: 64, offset: 128)
!236 = !DICompositeType(tag: DW_TAG_structure_type, scope: !96, file: !96, size: 128, align: 64, elements: !237)
!237 = !{!200, !238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !96, file: !96, baseType: !239, size: 64, align: 64, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*string", baseType: !95, size: 64, align: 64, dwarfAddressSpace: 0)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !17, file: !17, baseType: !207, size: 64, align: 64, offset: 256)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !17, file: !17, baseType: !242, size: 128, align: 64)
!242 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_VectorType", scope: !17, file: !17, size: 128, elements: !243)
!243 = !{!244, !246}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !17, file: !17, baseType: !245, size: 64, align: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !96, file: !96, size: 64, align: 64, elements: !67)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count", scope: !17, file: !17, baseType: !94, size: 32, align: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !17, file: !17, baseType: !248, size: 128, align: 64)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_GenericType", scope: !17, file: !17, size: 128, elements: !249)
!249 = !{!234}
!250 = !DILocation(line: 127, scope: !176)
!251 = !DILocalVariable(name: "b", scope: !176, file: !17, line: 127, type: !87)
!252 = !DILocalVariable(name: "info", arg: 1, scope: !176, file: !17, line: 127, type: !179)
!253 = !DILocation(line: 128, scope: !176)
!254 = !DILocation(line: 130, scope: !176)
!255 = !DILocation(line: 133, scope: !176)
!256 = !DILocation(line: 136, scope: !176)
!257 = !DILocation(line: 137, scope: !176)
!258 = !DILocalVariable(name: "args", scope: !176, file: !17, line: 137, type: !214)
!259 = !DILocation(line: 138, scope: !176)
!260 = !DILocalVariable(name: "arg", scope: !176, file: !17, line: 138, type: !207)
!261 = !DILocalVariable(name: "i", scope: !176, file: !17, line: 138, type: !91)
!262 = !DILocation(line: 139, scope: !176)
!263 = !DILocation(line: 140, scope: !176)
!264 = !DILocation(line: 141, scope: !176)
!265 = !DILocation(line: 144, scope: !176)
!266 = !DILocation(line: 145, scope: !176)
!267 = !DILocation(line: 146, scope: !176)
!268 = !DILocation(line: 147, scope: !176)
!269 = !DILocation(line: 151, scope: !176)
!270 = !DILocation(line: 154, scope: !176)
!271 = !DILocation(line: 155, scope: !176)
!272 = !DILocation(line: 158, scope: !176)
!273 = !DILocation(line: 159, scope: !176)
!274 = !DILocation(line: 162, scope: !176)
!275 = !DILocation(line: 163, scope: !176)
!276 = !DILocation(line: 166, scope: !176)
!277 = !DILocation(line: 169, scope: !176)
!278 = !DILocation(line: 172, scope: !176)
!279 = !DILocation(line: 176, scope: !176)
!280 = distinct !DISubprogram(name: "print_type", linkageName: "__io_print_type", scope: !17, file: !17, line: 178, type: !281, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !87, !283}
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_Arg", scope: !17, file: !17, size: 128, elements: !284)
!284 = !{!226, !285}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !17, file: !17, baseType: !286, size: 64, align: 64, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!287 = !DILocation(line: 178, scope: !280)
!288 = !DILocalVariable(name: "b", scope: !280, file: !17, line: 178, type: !87)
!289 = !DILocalVariable(name: "arg", arg: 1, scope: !280, file: !17, line: 178, type: !283)
!290 = !DILocation(line: 179, scope: !280)
!291 = !DILocalVariable(name: "t", scope: !280, file: !17, line: 179, type: !179)
!292 = !DILocation(line: 180, scope: !280)
!293 = !DILocation(line: 184, scope: !280)
!294 = !DILocalVariable(name: "basic", scope: !280, file: !17, line: 184, type: !187)
!295 = !DILocation(line: 185, scope: !280)
!296 = !DILocation(line: 186, scope: !280)
!297 = !DILocation(line: 187, scope: !280)
!298 = !DILocation(line: 189, scope: !280)
!299 = !DILocation(line: 192, scope: !280)
!300 = !DILocation(line: 193, scope: !280)
!301 = !DILocalVariable(name: "str", scope: !280, file: !17, line: 193, type: !95)
!302 = !DILocation(line: 194, scope: !280)
!303 = !DILocation(line: 203, scope: !280)
!304 = !DILocation(line: 204, scope: !280)
!305 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 204, type: !114)
!306 = !DILocation(line: 205, scope: !280)
!307 = !DILocation(line: 207, scope: !280)
!308 = !DILocation(line: 208, scope: !280)
!309 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 208, type: !114)
!310 = !DILocation(line: 209, scope: !280)
!311 = !DILocation(line: 211, scope: !280)
!312 = !DILocation(line: 212, scope: !280)
!313 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 212, type: !114)
!314 = !DILocation(line: 213, scope: !280)
!315 = !DILocation(line: 215, scope: !280)
!316 = !DILocation(line: 216, scope: !280)
!317 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 216, type: !114)
!318 = !DILocation(line: 217, scope: !280)
!319 = !DILocation(line: 219, scope: !280)
!320 = !DILocation(line: 220, scope: !280)
!321 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 220, type: !91)
!322 = !DILocation(line: 221, scope: !280)
!323 = !DILocation(line: 223, scope: !280)
!324 = !DILocation(line: 224, scope: !280)
!325 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 224, type: !91)
!326 = !DILocation(line: 225, scope: !280)
!327 = !DILocation(line: 227, scope: !280)
!328 = !DILocation(line: 228, scope: !280)
!329 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 228, type: !91)
!330 = !DILocation(line: 229, scope: !280)
!331 = !DILocation(line: 231, scope: !280)
!332 = !DILocation(line: 232, scope: !280)
!333 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 232, type: !91)
!334 = !DILocation(line: 233, scope: !280)
!335 = !DILocation(line: 235, scope: !280)
!336 = !DILocation(line: 236, scope: !280)
!337 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 236, type: !91)
!338 = !DILocation(line: 237, scope: !280)
!339 = !DILocation(line: 239, scope: !280)
!340 = !DILocation(line: 240, scope: !280)
!341 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 240, type: !114)
!342 = !DILocation(line: 241, scope: !280)
!343 = !DILocation(line: 243, scope: !280)
!344 = !DILocation(line: 244, scope: !280)
!345 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 244, type: !346)
!346 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!347 = !DILocation(line: 245, scope: !280)
!348 = !DILocation(line: 247, scope: !280)
!349 = !DILocation(line: 248, scope: !280)
!350 = !DILocalVariable(name: "num", scope: !280, file: !17, line: 248, type: !351)
!351 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!352 = !DILocation(line: 249, scope: !280)
!353 = !DILocation(line: 251, scope: !280)
!354 = !DILocation(line: 252, scope: !280)
!355 = !DILocalVariable(name: "pt", scope: !280, file: !17, line: 252, type: !207)
!356 = !DILocation(line: 253, scope: !280)
!357 = !DILocalVariable(name: "info", scope: !280, file: !17, line: 253, type: !179)
!358 = !DILocation(line: 254, scope: !280)
!359 = !DILocation(line: 257, scope: !280)
!360 = !DILocation(line: 263, scope: !280)
!361 = !DILocalVariable(name: "st", scope: !280, file: !17, line: 263, type: !195)
!362 = !DILocation(line: 264, scope: !280)
!363 = !DILocation(line: 265, scope: !280)
!364 = !DILocation(line: 266, scope: !280)
!365 = !DILocalVariable(name: "n", scope: !280, file: !17, line: 266, type: !91)
!366 = !DILocation(line: 267, scope: !280)
!367 = !DILocalVariable(name: "m", scope: !280, file: !17, line: 267, type: !368)
!368 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructMember", scope: !17, file: !17, size: 192, elements: !369)
!369 = !{!234, !370}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !17, file: !17, baseType: !207, size: 64, align: 64, offset: 128)
!371 = !DILocation(line: 268, scope: !280)
!372 = !DILocation(line: 269, scope: !280)
!373 = !DILocation(line: 270, scope: !280)
!374 = !DILocation(line: 271, scope: !280)
!375 = !DILocalVariable(name: "ptr", scope: !280, file: !17, line: 271, type: !99)
!376 = !DILocation(line: 272, scope: !280)
!377 = !DILocalVariable(name: "offset", scope: !280, file: !17, line: 272, type: !91)
!378 = !DILocation(line: 273, scope: !280)
!379 = !DILocalVariable(name: "mem_arg", scope: !280, file: !17, line: 273, type: !283)
!380 = !DILocation(line: 277, scope: !280)
!381 = !DILocation(line: 279, scope: !280)
!382 = !DILocation(line: 280, scope: !280)
!383 = !DILocation(line: 281, scope: !280)
!384 = !DILocation(line: 284, scope: !280)
!385 = !DILocation(line: 299, scope: !280)
!386 = distinct !DISubprogram(name: "builder_to_string", linkageName: "__io_builder_to_string", scope: !17, file: !17, line: 301, type: !387, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!387 = !DISubroutineType(types: !388)
!388 = !{!389, !87}
!389 = !DICompositeType(tag: DW_TAG_structure_type, scope: !17, file: !17, size: 128, align: 64, elements: !390)
!390 = !{!90, !391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !17, file: !17, baseType: !99, size: 64, align: 64, offset: 64)
!392 = !DILocation(line: 301, scope: !386)
!393 = !DILocalVariable(name: "b_in", scope: !386, file: !17, line: 301, type: !87)
!394 = !DILocation(line: 302, scope: !386)
!395 = !DILocalVariable(name: "b", scope: !386, file: !17, line: 302, type: !87)
!396 = !DILocation(line: 303, scope: !386)
!397 = !DILocalVariable(name: "alloc", scope: !386, file: !17, line: 303, type: !398)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !17, file: !17, size: 192, elements: !399)
!399 = !{!400, !406, !410}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !17, file: !17, baseType: !401, size: 64, align: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *__mem_Allocator) -> ?*", baseType: !402, size: 64, align: 64, dwarfAddressSpace: 0)
!402 = !DISubroutineType(types: !403)
!403 = !{!286, !91, !404}
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_Allocator", baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !96, file: !96, size: 192, align: 64, flags: DIFlagFwdDecl)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !17, file: !17, baseType: !407, size: 64, align: 64, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *__mem_Allocator)", baseType: !408, size: 64, align: 64, dwarfAddressSpace: 0)
!408 = !DISubroutineType(types: !409)
!409 = !{null, !286, !404}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !17, file: !17, baseType: !286, size: 64, align: 64, offset: 128)
!411 = !DILocation(line: 304, scope: !386)
!412 = !DILocalVariable(name: "res", scope: !386, file: !17, line: 304, type: !389)
!413 = !DILocation(line: 306, scope: !386)
!414 = !DILocalVariable(name: "i", scope: !386, file: !17, line: 306, type: !91)
!415 = !DILocation(line: 307, scope: !386)
!416 = !DILocalVariable(name: "ptr", scope: !386, file: !17, line: 307, type: !99)
!417 = !DILocation(line: 308, scope: !386)
!418 = !DILocation(line: 309, scope: !386)
!419 = !DILocation(line: 310, scope: !386)
!420 = !DILocation(line: 313, scope: !386)
!421 = !DILocalVariable(name: "size", scope: !386, file: !17, line: 313, type: !91)
!422 = !DILocation(line: 314, scope: !386)
!423 = !DILocalVariable(name: "j", scope: !386, file: !17, line: 314, type: !91)
!424 = !DILocation(line: 315, scope: !386)
!425 = !DILocation(line: 319, scope: !386)
!426 = distinct !DISubprogram(name: "__internal_print", linkageName: "__io___internal_print", scope: !17, file: !17, line: 322, type: !427, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!427 = !DISubroutineType(types: !428)
!428 = !{!88, !95, !429}
!429 = !DICompositeType(tag: DW_TAG_structure_type, scope: !17, file: !17, size: 128, align: 64, elements: !430)
!430 = !{!90, !431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !17, file: !17, baseType: !432, size: 64, align: 64, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init_Arg", baseType: !283, size: 64, align: 64, dwarfAddressSpace: 0)
!433 = !DILocation(line: 322, scope: !426)
!434 = !DILocalVariable(name: "fmt", scope: !426, file: !17, line: 322, type: !95)
!435 = !DILocalVariable(name: "args", arg: 1, scope: !426, file: !17, line: 322, type: !429)
!436 = !DILocation(line: 323, scope: !426)
!437 = !DILocalVariable(name: "alloc", scope: !426, file: !17, line: 323, type: !398)
!438 = !DILocation(line: 324, scope: !426)
!439 = !DILocalVariable(name: "builder", scope: !426, file: !17, line: 324, type: !88)
!440 = !DILocation(line: 325, scope: !426)
!441 = !DILocalVariable(name: "arg_count", scope: !426, file: !17, line: 325, type: !91)
!442 = !DILocation(line: 326, scope: !426)
!443 = !DILocalVariable(name: "need_to_print_arg", scope: !426, file: !17, line: 326, type: !157)
!444 = !DILocation(line: 327, scope: !426)
!445 = !DILocalVariable(name: "c", scope: !426, file: !17, line: 327, type: !94)
!446 = !DILocalVariable(name: "i", scope: !426, file: !17, line: 327, type: !91)
!447 = !DILocation(line: 328, scope: !426)
!448 = !DILocation(line: 329, scope: !426)
!449 = !DILocation(line: 331, scope: !426)
!450 = !DILocation(line: 332, scope: !426)
!451 = !DILocalVariable(name: "arg", scope: !426, file: !17, line: 332, type: !283)
!452 = !DILocation(line: 333, scope: !426)
!453 = !DILocation(line: 334, scope: !426)
!454 = !DILocalVariable(name: "t", scope: !426, file: !17, line: 334, type: !179)
!455 = !DILocation(line: 335, scope: !426)
!456 = !DILocation(line: 336, scope: !426)
!457 = !DILocalVariable(name: "str", scope: !426, file: !17, line: 336, type: !99)
!458 = !DILocation(line: 337, scope: !426)
!459 = !DILocalVariable(name: "i", scope: !426, file: !17, line: 337, type: !91)
!460 = !DILocation(line: 338, scope: !426)
!461 = !DILocation(line: 341, scope: !426)
!462 = !DILocation(line: 342, scope: !426)
!463 = !DILocation(line: 346, scope: !426)
!464 = !DILocation(line: 350, scope: !426)
!465 = distinct !DISubprogram(name: "print", linkageName: "__io_print", scope: !17, file: !17, line: 353, type: !466, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!466 = !DISubroutineType(types: !467)
!467 = !{null, !95}
!468 = !DILocation(line: 353, scope: !465)
!469 = !DILocalVariable(name: "str", scope: !465, file: !17, line: 353, type: !95)
!470 = !DILocalVariable(name: "args", arg: 1, scope: !465, file: !17, line: 353, type: !429)
!471 = !DILocation(line: 354, scope: !465)
!472 = !DILocalVariable(name: "builder", scope: !465, file: !17, line: 354, type: !88)
!473 = !DILocation(line: 355, scope: !465)
!474 = !DILocalVariable(name: "res", scope: !465, file: !17, line: 355, type: !389)
!475 = !DILocation(line: 356, scope: !465)
!476 = !DILocation(line: 357, scope: !465)
!477 = !DILocation(line: 358, scope: !465)
!478 = !DILocation(line: 359, scope: !465)
!479 = distinct !DISubprogram(name: "println", linkageName: "__io_println", scope: !17, file: !17, line: 361, type: !466, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!480 = !DILocation(line: 361, scope: !479)
!481 = !DILocalVariable(name: "str", scope: !479, file: !17, line: 361, type: !95)
!482 = !DILocalVariable(name: "args", arg: 1, scope: !479, file: !17, line: 361, type: !429)
!483 = !DILocation(line: 362, scope: !479)
!484 = !DILocalVariable(name: "builder", scope: !479, file: !17, line: 362, type: !88)
!485 = !DILocation(line: 363, scope: !479)
!486 = !DILocation(line: 364, scope: !479)
!487 = !DILocalVariable(name: "res", scope: !479, file: !17, line: 364, type: !389)
!488 = !DILocation(line: 365, scope: !479)
!489 = !DILocation(line: 366, scope: !479)
!490 = !DILocation(line: 367, scope: !479)
!491 = !DILocation(line: 369, scope: !479)
!492 = distinct !DISubprogram(name: "get_next", linkageName: "__io_get_next", scope: !17, file: !17, line: 371, type: !493, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!493 = !DISubroutineType(types: !494)
!494 = !{!94, !99}
!495 = !DILocation(line: 371, scope: !492)
!496 = !DILocalVariable(name: "curr", scope: !492, file: !17, line: 371, type: !99)
!497 = !DILocation(line: 372, scope: !492)
!498 = !DILocalVariable(name: "scan", scope: !492, file: !17, line: 372, type: !99)
!499 = !DILocation(line: 373, scope: !492)
!500 = !DILocalVariable(name: "codepoint", scope: !492, file: !17, line: 373, type: !94)
!501 = !DILocation(line: 374, scope: !492)
!502 = !DILocation(line: 375, scope: !492)
!503 = !DILocation(line: 376, scope: !492)
!504 = !DILocation(line: 377, scope: !492)
!505 = !DILocation(line: 379, scope: !492)
!506 = !DILocation(line: 382, scope: !492)
!507 = distinct !DISubprogram(name: "format_float@type_*[]u32_f32_i32_@void", linkageName: "__io_format_float@type_*[]u32_f32_i32_@void", scope: !17, file: !17, line: 67, type: !508, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !207, !87, !346, !510}
!510 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!511 = !DILocation(line: 67, scope: !507)
!512 = !DILocalVariable(name: "ft", scope: !507, file: !17, line: 67, type: !207)
!513 = !DILocalVariable(name: "b", arg: 1, scope: !507, file: !17, line: 67, type: !87)
!514 = !DILocalVariable(name: "num_in", arg: 2, scope: !507, file: !17, line: 67, type: !346)
!515 = !DILocalVariable(name: "round_at", arg: 3, scope: !507, file: !17, line: 67, type: !510)
!516 = !DILocation(line: 68, scope: !507)
!517 = !DILocalVariable(name: "temp", scope: !507, file: !17, line: 68, type: !120)
!518 = !DILocation(line: 69, scope: !507)
!519 = !DILocalVariable(name: "count", scope: !507, file: !17, line: 69, type: !91)
!520 = !DILocation(line: 70, scope: !507)
!521 = !DILocalVariable(name: "num", scope: !507, file: !17, line: 70, type: !346)
!522 = !DILocation(line: 72, scope: !507)
!523 = !DILocation(line: 73, scope: !507)
!524 = !DILocation(line: 76, scope: !507)
!525 = !DILocation(line: 77, scope: !507)
!526 = !DILocation(line: 78, scope: !507)
!527 = !DILocation(line: 81, scope: !507)
!528 = !DILocalVariable(name: "is_neg", scope: !507, file: !17, line: 81, type: !157)
!529 = !DILocation(line: 82, scope: !507)
!530 = !DILocation(line: 83, scope: !507)
!531 = !DILocation(line: 84, scope: !507)
!532 = !DILocation(line: 87, scope: !507)
!533 = !DILocation(line: 88, scope: !507)
!534 = !DILocalVariable(name: "int_val", scope: !507, file: !17, line: 88, type: !510)
!535 = !DILocation(line: 89, scope: !507)
!536 = !DILocalVariable(name: "dec", scope: !507, file: !17, line: 89, type: !510)
!537 = !DILocation(line: 91, scope: !507)
!538 = !DILocation(line: 92, scope: !507)
!539 = !DILocation(line: 93, scope: !507)
!540 = !DILocation(line: 96, scope: !507)
!541 = !DILocation(line: 97, scope: !507)
!542 = !DILocation(line: 98, scope: !507)
!543 = !DILocation(line: 99, scope: !507)
!544 = !DILocation(line: 103, scope: !507)
!545 = !DILocation(line: 104, scope: !507)
!546 = !DILocation(line: 106, scope: !507)
!547 = !DILocation(line: 107, scope: !507)
!548 = !DILocation(line: 108, scope: !507)
!549 = !DILocation(line: 110, scope: !507)
!550 = !DILocation(line: 111, scope: !507)
!551 = !DILocation(line: 112, scope: !507)
!552 = !DILocation(line: 113, scope: !507)
!553 = !DILocation(line: 118, scope: !507)
!554 = !DILocation(line: 119, scope: !507)
!555 = !DILocation(line: 122, scope: !507)
!556 = !DILocalVariable(name: "i", scope: !507, file: !17, line: 122, type: !91)
!557 = !DILocation(line: 123, scope: !507)
!558 = !DILocation(line: 125, scope: !507)
!559 = distinct !DISubprogram(name: "format_float@type_*[]u32_f64_i32_@void", linkageName: "__io_format_float@type_*[]u32_f64_i32_@void", scope: !17, file: !17, line: 67, type: !560, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !102)
!560 = !DISubroutineType(types: !561)
!561 = !{null, !207, !87, !351, !510}
!562 = !DILocation(line: 67, scope: !559)
!563 = !DILocalVariable(name: "ft", scope: !559, file: !17, line: 67, type: !207)
!564 = !DILocalVariable(name: "b", arg: 1, scope: !559, file: !17, line: 67, type: !87)
!565 = !DILocalVariable(name: "num_in", arg: 2, scope: !559, file: !17, line: 67, type: !351)
!566 = !DILocalVariable(name: "round_at", arg: 3, scope: !559, file: !17, line: 67, type: !510)
!567 = !DILocation(line: 68, scope: !559)
!568 = !DILocalVariable(name: "temp", scope: !559, file: !17, line: 68, type: !120)
!569 = !DILocation(line: 69, scope: !559)
!570 = !DILocalVariable(name: "count", scope: !559, file: !17, line: 69, type: !91)
!571 = !DILocation(line: 70, scope: !559)
!572 = !DILocalVariable(name: "num", scope: !559, file: !17, line: 70, type: !351)
!573 = !DILocation(line: 72, scope: !559)
!574 = !DILocation(line: 73, scope: !559)
!575 = !DILocation(line: 76, scope: !559)
!576 = !DILocation(line: 77, scope: !559)
!577 = !DILocation(line: 78, scope: !559)
!578 = !DILocation(line: 81, scope: !559)
!579 = !DILocalVariable(name: "is_neg", scope: !559, file: !17, line: 81, type: !157)
!580 = !DILocation(line: 82, scope: !559)
!581 = !DILocation(line: 83, scope: !559)
!582 = !DILocation(line: 84, scope: !559)
!583 = !DILocation(line: 87, scope: !559)
!584 = !DILocation(line: 88, scope: !559)
!585 = !DILocalVariable(name: "int_val", scope: !559, file: !17, line: 88, type: !510)
!586 = !DILocation(line: 89, scope: !559)
!587 = !DILocalVariable(name: "dec", scope: !559, file: !17, line: 89, type: !510)
!588 = !DILocation(line: 91, scope: !559)
!589 = !DILocation(line: 92, scope: !559)
!590 = !DILocation(line: 93, scope: !559)
!591 = !DILocation(line: 96, scope: !559)
!592 = !DILocation(line: 97, scope: !559)
!593 = !DILocation(line: 98, scope: !559)
!594 = !DILocation(line: 99, scope: !559)
!595 = !DILocation(line: 103, scope: !559)
!596 = !DILocation(line: 104, scope: !559)
!597 = !DILocation(line: 106, scope: !559)
!598 = !DILocation(line: 107, scope: !559)
!599 = !DILocation(line: 108, scope: !559)
!600 = !DILocation(line: 110, scope: !559)
!601 = !DILocation(line: 111, scope: !559)
!602 = !DILocation(line: 112, scope: !559)
!603 = !DILocation(line: 113, scope: !559)
!604 = !DILocation(line: 118, scope: !559)
!605 = !DILocation(line: 119, scope: !559)
!606 = !DILocation(line: 122, scope: !559)
!607 = !DILocalVariable(name: "i", scope: !559, file: !17, line: 122, type: !91)
!608 = !DILocation(line: 123, scope: !559)
!609 = !DILocation(line: 125, scope: !559)
