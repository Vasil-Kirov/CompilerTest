; ModuleID = 'io'
source_filename = "io.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%slice.523 = type { i64, ptr }
%string.461 = type { ptr, i64 }
%__init_TypeInfo.474 = type { i64, %__init_TypeUnion.473 }
%__init_TypeUnion.473 = type { %__init_StructType.465 }
%__init_StructType.465 = type { %slice.518, %string.461, i32 }
%slice.518 = type { i64, ptr }
%slice.519 = type { i64, ptr }
%__init_BasicType.463 = type { i64, i32, i32, %string.461 }
%__init_FunctionType.466 = type { i64, %slice.519 }
%__init_PointerType.467 = type { i64, i1 }
%__init_ArrayType.468 = type { i64, i32 }
%__init_SliceType.469 = type { i64 }
%__init_EnumType.470 = type { %string.461, %slice.520, i64 }
%slice.520 = type { i64, ptr }
%__init_GenericType.472 = type { %string.461 }
%__init_Arg.462 = type { i64, ptr }
%__init_StructMember.464 = type { %string.461, i64 }
%slice.526 = type { i64, ptr }
%__mem_Allocator.476 = type { ptr, ptr, ptr }
%slice.525 = type { i64, ptr }
%slice.524 = type { i64, ptr }

$___asan_gen__anon_global = comdat nodeduplicate

$___asan_gen__anon_global.21 = comdat nodeduplicate

$___asan_gen__anon_global.23 = comdat nodeduplicate

$___asan_gen__anon_global.25 = comdat nodeduplicate

$___asan_gen__anon_global.27 = comdat nodeduplicate

$___asan_gen__anon_global.29 = comdat nodeduplicate

$___asan_gen__anon_global.31 = comdat nodeduplicate

$___asan_gen__anon_global.33 = comdat nodeduplicate

$___asan_gen__anon_global.35 = comdat nodeduplicate

$___asan_gen__anon_global.37 = comdat nodeduplicate

$___asan_gen__anon_global.39 = comdat nodeduplicate

$___asan_gen__anon_global.41 = comdat nodeduplicate

$___asan_gen__anon_global.43 = comdat nodeduplicate

$___asan_gen__anon_global.45 = comdat nodeduplicate

$___asan_gen__anon_global.47 = comdat nodeduplicate

$___asan_gen__anon_global.49 = comdat nodeduplicate

$___asan_gen__anon_global.51 = comdat nodeduplicate

$___asan_gen__anon_global.53 = comdat nodeduplicate

@__main_WIDTH = external global i32
@__main_HEIGHT = external global i32
@__main_vert_shader = external global ptr
@__main_frag_shader = external global ptr
@__sdl_INIT_AUDIO = external global i32
@__sdl_INIT_VIDEO = external global i32
@__sdl_INIT_JOYSTICK = external global i32
@__sdl_INIT_HAPTIC = external global i32
@__sdl_INIT_GAMEPAD = external global i32
@__sdl_INIT_EVENTS = external global i32
@__sdl_INIT_SENSOR = external global i32
@__sdl_INIT_CAMERA = external global i32
@__sdl_WINDOW_FULLSCREEN = external global i64
@__sdl_WINDOW_OPENGL = external global i64
@__sdl_WINDOW_OCCLUDED = external global i64
@__sdl_WINDOW_HIDDEN = external global i64
@__sdl_WINDOW_BORDERLESS = external global i64
@__sdl_WINDOW_RESIZABLE = external global i64
@__sdl_WINDOW_MINIMIZED = external global i64
@__sdl_WINDOW_MAXIMIZED = external global i64
@__sdl_WINDOW_MOUSE_GRABBED = external global i64
@__sdl_WINDOW_INPUT_FOCUS = external global i64
@__sdl_WINDOW_MOUSE_FOCUS = external global i64
@__sdl_WINDOW_EXTERNAL = external global i64
@__sdl_WINDOW_MODAL = external global i64
@__sdl_WINDOW_HIGH_PIXEL_DENSITY = external global i64
@__sdl_WINDOW_MOUSE_CAPTURE = external global i64
@__sdl_WINDOW_MOUSE_RELATIVE_MODE = external global i64
@__sdl_WINDOW_ALWAYS_ON_TOP = external global i64
@__sdl_WINDOW_UTILITY = external global i64
@__sdl_WINDOW_TOOLTIP = external global i64
@__sdl_WINDOW_POPUP_MENU = external global i64
@__sdl_WINDOW_KEYBOARD_GRABBED = external global i64
@__sdl_WINDOW_VULKAN = external global i64
@__sdl_WINDOW_METAL = external global i64
@__sdl_WINDOW_TRANSPARENT = external global i64
@__sdl_WINDOW_NOT_FOCUSABLE = external global i64
@__sdl_BUTTON_LEFT = external global i32
@__sdl_BUTTON_MIDDLE = external global i32
@__sdl_BUTTON_RIGHT = external global i32
@__sdl_BUTTON_X1 = external global i32
@__sdl_BUTTON_X2 = external global i32
@__sdl_GL_CONTEXT_PROFILE_CORE = external global i32
@__sdl_GL_CONTEXT_PROFILE_COMPATIBILITY = external global i32
@__sdl_GL_CONTEXT_PROFILE_ES = external global i32
@__sdl_GL_CONTEXT_DEBUG_FLAG = external global i32
@__sdl_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = external global i32
@__sdl_GL_CONTEXT_ROBUST_ACCESS_FLAG = external global i32
@__sdl_GL_CONTEXT_RESET_ISOLATION_FLAG = external global i32
@__gl_dll_module = external global ptr
@__gl_ClearColor = external global ptr
@__gl_Clear = external global ptr
@__gl_GenVertexArrays = external global ptr
@__gl_BindVertexArray = external global ptr
@__gl_DeleteVertexArrays = external global ptr
@__gl_EnableVertexAttribArray = external global ptr
@__gl_DisableVertexAttribArray = external global ptr
@__gl_VertexAttribPointer = external global ptr
@__gl_GenBuffers = external global ptr
@__gl_BindBuffer = external global ptr
@__gl_BufferData = external global ptr
@__gl_BufferSubData = external global ptr
@__gl_DeleteBuffers = external global ptr
@__gl_GenFramebuffers = external global ptr
@__gl_CheckFramebufferStatus = external global ptr
@__gl_BindFramebuffer = external global ptr
@__gl_DeleteFramebuffers = external global ptr
@__gl_FramebufferTexture2D = external global ptr
@__gl_FramebufferRenderbuffer = external global ptr
@__gl_GenRenderbuffers = external global ptr
@__gl_BindRenderbuffer = external global ptr
@__gl_RenderbufferStorage = external global ptr
@__gl_GenTextures = external global ptr
@__gl_BindTexture = external global ptr
@__gl_TexImage2D = external global ptr
@__gl_TexParameteri = external global ptr
@__gl_Enable = external global ptr
@__gl_Disable = external global ptr
@__gl_CreateShader = external global ptr
@__gl_ShaderSource = external global ptr
@__gl_CompileShader = external global ptr
@__gl_GetShaderiv = external global ptr
@__gl_GetProgramiv = external global ptr
@__gl_GetShaderInfoLog = external global ptr
@__gl_GetProgramInfoLog = external global ptr
@__gl_DeleteShader = external global ptr
@__gl_AttachShader = external global ptr
@__gl_LinkProgram = external global ptr
@__gl_UseProgram = external global ptr
@__gl_CreateProgram = external global ptr
@__gl_DeleteProgram = external global ptr
@__gl_GetUniformLocation = external global ptr
@__gl_Uniform1i = external global ptr
@__gl_Uniform1f = external global ptr
@__gl_Uniform2f = external global ptr
@__gl_Uniform3f = external global ptr
@__gl_UniformMatrix4fv = external global ptr
@__gl_DrawArrays = external global ptr
@__gl_DrawElements = external global ptr
@__gl_Viewport = external global ptr
@__gl_DebugMessageCallback = external global ptr
@__gl_DebugMessageControl = external global ptr
@__gl_LineWidth = external global ptr
@__gl_BlendFunc = external global ptr
@__gl_VERSION_ES_CL_1_0 = external global i32
@__gl_VERSION_ES_CM_1_1 = external global i32
@__gl_VERSION_ES_CL_1_1 = external global i32
@__gl_DEPTH_BUFFER_BIT = external global i32
@__gl_STENCIL_BUFFER_BIT = external global i32
@__gl_COLOR_BUFFER_BIT = external global i32
@__gl_FALSE = external global i32
@__gl_TRUE = external global i32
@__gl_POINTS = external global i32
@__gl_LINES = external global i32
@__gl_LINE_LOOP = external global i32
@__gl_LINE_STRIP = external global i32
@__gl_TRIANGLES = external global i32
@__gl_TRIANGLE_STRIP = external global i32
@__gl_TRIANGLE_FAN = external global i32
@__gl_NEVER = external global i32
@__gl_LESS = external global i32
@__gl_EQUAL = external global i32
@__gl_LEQUAL = external global i32
@__gl_GREATER = external global i32
@__gl_NOTEQUAL = external global i32
@__gl_GEQUAL = external global i32
@__gl_ALWAYS = external global i32
@__gl_ZERO = external global i32
@__gl_ONE = external global i32
@__gl_SRC_COLOR = external global i32
@__gl_ONE_MINUS_SRC_COLOR = external global i32
@__gl_SRC_ALPHA = external global i32
@__gl_ONE_MINUS_SRC_ALPHA = external global i32
@__gl_DST_ALPHA = external global i32
@__gl_ONE_MINUS_DST_ALPHA = external global i32
@__gl_DST_COLOR = external global i32
@__gl_ONE_MINUS_DST_COLOR = external global i32
@__gl_SRC_ALPHA_SATURATE = external global i32
@__gl_CLIP_PLANE0 = external global i32
@__gl_CLIP_PLANE1 = external global i32
@__gl_CLIP_PLANE2 = external global i32
@__gl_CLIP_PLANE3 = external global i32
@__gl_CLIP_PLANE4 = external global i32
@__gl_CLIP_PLANE5 = external global i32
@__gl_FRONT = external global i32
@__gl_BACK = external global i32
@__gl_FRONT_AND_BACK = external global i32
@__gl_FOG = external global i32
@__gl_LIGHTING = external global i32
@__gl_TEXTURE_2D = external global i32
@__gl_CULL_FACE = external global i32
@__gl_ALPHA_TEST = external global i32
@__gl_BLEND = external global i32
@__gl_COLOR_LOGIC_OP = external global i32
@__gl_DITHER = external global i32
@__gl_STENCIL_TEST = external global i32
@__gl_DEPTH_TEST = external global i32
@__gl_POINT_SMOOTH = external global i32
@__gl_LINE_SMOOTH = external global i32
@__gl_SCISSOR_TEST = external global i32
@__gl_COLOR_MATERIAL = external global i32
@__gl_NORMALIZE = external global i32
@__gl_RESCALE_NORMAL = external global i32
@__gl_VERTEX_ARRAY = external global i32
@__gl_NORMAL_ARRAY = external global i32
@__gl_COLOR_ARRAY = external global i32
@__gl_TEXTURE_COORD_ARRAY = external global i32
@__gl_MULTISAMPLE = external global i32
@__gl_SAMPLE_ALPHA_TO_COVERAGE = external global i32
@__gl_SAMPLE_ALPHA_TO_ONE = external global i32
@__gl_SAMPLE_COVERAGE = external global i32
@__gl_NO_ERROR = external global i32
@__gl_INVALID_ENUM = external global i32
@__gl_INVALID_VALUE = external global i32
@__gl_INVALID_OPERATION = external global i32
@__gl_STACK_OVERFLOW = external global i32
@__gl_STACK_UNDERFLOW = external global i32
@__gl_OUT_OF_MEMORY = external global i32
@__gl_EXP = external global i32
@__gl_EXP2 = external global i32
@__gl_FOG_DENSITY = external global i32
@__gl_FOG_START = external global i32
@__gl_FOG_END = external global i32
@__gl_FOG_MODE = external global i32
@__gl_FOG_COLOR = external global i32
@__gl_CW = external global i32
@__gl_CCW = external global i32
@__gl_CURRENT_COLOR = external global i32
@__gl_CURRENT_NORMAL = external global i32
@__gl_CURRENT_TEXTURE_COORDS = external global i32
@__gl_POINT_SIZE = external global i32
@__gl_POINT_SIZE_MIN = external global i32
@__gl_POINT_SIZE_MAX = external global i32
@__gl_POINT_FADE_THRESHOLD_SIZE = external global i32
@__gl_POINT_DISTANCE_ATTENUATION = external global i32
@__gl_SMOOTH_POINT_SIZE_RANGE = external global i32
@__gl_LINE_WIDTH = external global i32
@__gl_SMOOTH_LINE_WIDTH_RANGE = external global i32
@__gl_ALIASED_POINT_SIZE_RANGE = external global i32
@__gl_ALIASED_LINE_WIDTH_RANGE = external global i32
@__gl_CULL_FACE_MODE = external global i32
@__gl_FRONT_FACE = external global i32
@__gl_SHADE_MODEL = external global i32
@__gl_DEPTH_RANGE = external global i32
@__gl_DEPTH_WRITEMASK = external global i32
@__gl_DEPTH_CLEAR_VALUE = external global i32
@__gl_DEPTH_FUNC = external global i32
@__gl_STENCIL_CLEAR_VALUE = external global i32
@__gl_STENCIL_FUNC = external global i32
@__gl_STENCIL_VALUE_MASK = external global i32
@__gl_STENCIL_FAIL = external global i32
@__gl_STENCIL_PASS_DEPTH_FAIL = external global i32
@__gl_STENCIL_PASS_DEPTH_PASS = external global i32
@__gl_STENCIL_REF = external global i32
@__gl_STENCIL_WRITEMASK = external global i32
@__gl_MATRIX_MODE = external global i32
@__gl_VIEWPORT = external global i32
@__gl_MODELVIEW_STACK_DEPTH = external global i32
@__gl_PROJECTION_STACK_DEPTH = external global i32
@__gl_TEXTURE_STACK_DEPTH = external global i32
@__gl_MODELVIEW_MATRIX = external global i32
@__gl_PROJECTION_MATRIX = external global i32
@__gl_TEXTURE_MATRIX = external global i32
@__gl_ALPHA_TEST_FUNC = external global i32
@__gl_ALPHA_TEST_REF = external global i32
@__gl_BLEND_DST = external global i32
@__gl_BLEND_SRC = external global i32
@__gl_LOGIC_OP_MODE = external global i32
@__gl_SCISSOR_BOX = external global i32
@__gl_COLOR_CLEAR_VALUE = external global i32
@__gl_COLOR_WRITEMASK = external global i32
@__gl_MAX_LIGHTS = external global i32
@__gl_MAX_CLIP_PLANES = external global i32
@__gl_MAX_TEXTURE_SIZE = external global i32
@__gl_MAX_MODELVIEW_STACK_DEPTH = external global i32
@__gl_MAX_PROJECTION_STACK_DEPTH = external global i32
@__gl_MAX_TEXTURE_STACK_DEPTH = external global i32
@__gl_MAX_VIEWPORT_DIMS = external global i32
@__gl_MAX_TEXTURE_UNITS = external global i32
@__gl_SUBPIXEL_BITS = external global i32
@__gl_RED_BITS = external global i32
@__gl_GREEN_BITS = external global i32
@__gl_BLUE_BITS = external global i32
@__gl_ALPHA_BITS = external global i32
@__gl_DEPTH_BITS = external global i32
@__gl_STENCIL_BITS = external global i32
@__gl_POLYGON_OFFSET_UNITS = external global i32
@__gl_POLYGON_OFFSET_FILL = external global i32
@__gl_POLYGON_OFFSET_FACTOR = external global i32
@__gl_TEXTURE_BINDING_2D = external global i32
@__gl_VERTEX_ARRAY_SIZE = external global i32
@__gl_VERTEX_ARRAY_TYPE = external global i32
@__gl_VERTEX_ARRAY_STRIDE = external global i32
@__gl_NORMAL_ARRAY_TYPE = external global i32
@__gl_NORMAL_ARRAY_STRIDE = external global i32
@__gl_COLOR_ARRAY_SIZE = external global i32
@__gl_COLOR_ARRAY_TYPE = external global i32
@__gl_COLOR_ARRAY_STRIDE = external global i32
@__gl_TEXTURE_COORD_ARRAY_SIZE = external global i32
@__gl_TEXTURE_COORD_ARRAY_TYPE = external global i32
@__gl_TEXTURE_COORD_ARRAY_STRIDE = external global i32
@__gl_VERTEX_ARRAY_POINTER = external global i32
@__gl_NORMAL_ARRAY_POINTER = external global i32
@__gl_COLOR_ARRAY_POINTER = external global i32
@__gl_TEXTURE_COORD_ARRAY_POINTER = external global i32
@__gl_SAMPLE_BUFFERS = external global i32
@__gl_SAMPLES = external global i32
@__gl_SAMPLE_COVERAGE_VALUE = external global i32
@__gl_SAMPLE_COVERAGE_INVERT = external global i32
@__gl_NUM_COMPRESSED_TEXTURE_FORMATS = external global i32
@__gl_COMPRESSED_TEXTURE_FORMATS = external global i32
@__gl_DONT_CARE = external global i32
@__gl_FASTEST = external global i32
@__gl_NICEST = external global i32
@__gl_PERSPECTIVE_CORRECTION_HINT = external global i32
@__gl_POINT_SMOOTH_HINT = external global i32
@__gl_LINE_SMOOTH_HINT = external global i32
@__gl_FOG_HINT = external global i32
@__gl_GENERATE_MIPMAP_HINT = external global i32
@__gl_LIGHT_MODEL_AMBIENT = external global i32
@__gl_LIGHT_MODEL_TWO_SIDE = external global i32
@__gl_AMBIENT = external global i32
@__gl_DIFFUSE = external global i32
@__gl_SPECULAR = external global i32
@__gl_POSITION = external global i32
@__gl_SPOT_DIRECTION = external global i32
@__gl_SPOT_EXPONENT = external global i32
@__gl_SPOT_CUTOFF = external global i32
@__gl_CONSTANT_ATTENUATION = external global i32
@__gl_LINEAR_ATTENUATION = external global i32
@__gl_QUADRATIC_ATTENUATION = external global i32
@__gl_BYTE = external global i32
@__gl_UNSIGNED_BYTE = external global i32
@__gl_SHORT = external global i32
@__gl_UNSIGNED_SHORT = external global i32
@__gl_FLOAT = external global i32
@__gl_FIXED = external global i32
@__gl_CLEAR = external global i32
@__gl_AND = external global i32
@__gl_AND_REVERSE = external global i32
@__gl_COPY = external global i32
@__gl_AND_INVERTED = external global i32
@__gl_NOOP = external global i32
@__gl_XOR = external global i32
@__gl_OR = external global i32
@__gl_NOR = external global i32
@__gl_EQUIV = external global i32
@__gl_INVERT = external global i32
@__gl_OR_REVERSE = external global i32
@__gl_COPY_INVERTED = external global i32
@__gl_OR_INVERTED = external global i32
@__gl_NAND = external global i32
@__gl_SET = external global i32
@__gl_EMISSION = external global i32
@__gl_SHININESS = external global i32
@__gl_AMBIENT_AND_DIFFUSE = external global i32
@__gl_MODELVIEW = external global i32
@__gl_PROJECTION = external global i32
@__gl_TEXTURE = external global i32
@__gl_ALPHA = external global i32
@__gl_RGB = external global i32
@__gl_RGBA = external global i32
@__gl_LUMINANCE = external global i32
@__gl_LUMINANCE_ALPHA = external global i32
@__gl_UNPACK_ALIGNMENT = external global i32
@__gl_PACK_ALIGNMENT = external global i32
@__gl_UNSIGNED_SHORT_4_4_4_4 = external global i32
@__gl_UNSIGNED_SHORT_5_5_5_1 = external global i32
@__gl_UNSIGNED_SHORT_5_6_5 = external global i32
@__gl_FLAT = external global i32
@__gl_SMOOTH = external global i32
@__gl_KEEP = external global i32
@__gl_REPLACE = external global i32
@__gl_INCR = external global i32
@__gl_DECR = external global i32
@__gl_VENDOR = external global i32
@__gl_RENDERER = external global i32
@__gl_VERSION = external global i32
@__gl_EXTENSIONS = external global i32
@__gl_MODULATE = external global i32
@__gl_DECAL = external global i32
@__gl_ADD = external global i32
@__gl_TEXTURE_ENV_MODE = external global i32
@__gl_TEXTURE_ENV_COLOR = external global i32
@__gl_TEXTURE_ENV = external global i32
@__gl_NEAREST = external global i32
@__gl_LINEAR = external global i32
@__gl_NEAREST_MIPMAP_NEAREST = external global i32
@__gl_LINEAR_MIPMAP_NEAREST = external global i32
@__gl_NEAREST_MIPMAP_LINEAR = external global i32
@__gl_LINEAR_MIPMAP_LINEAR = external global i32
@__gl_TEXTURE_MAG_FILTER = external global i32
@__gl_TEXTURE_MIN_FILTER = external global i32
@__gl_TEXTURE_WRAP_S = external global i32
@__gl_TEXTURE_WRAP_T = external global i32
@__gl_GENERATE_MIPMAP = external global i32
@__gl_TEXTURE0 = external global i32
@__gl_TEXTURE1 = external global i32
@__gl_TEXTURE2 = external global i32
@__gl_TEXTURE3 = external global i32
@__gl_TEXTURE4 = external global i32
@__gl_TEXTURE5 = external global i32
@__gl_TEXTURE6 = external global i32
@__gl_TEXTURE7 = external global i32
@__gl_TEXTURE8 = external global i32
@__gl_TEXTURE9 = external global i32
@__gl_TEXTURE10 = external global i32
@__gl_TEXTURE11 = external global i32
@__gl_TEXTURE12 = external global i32
@__gl_TEXTURE13 = external global i32
@__gl_TEXTURE14 = external global i32
@__gl_TEXTURE15 = external global i32
@__gl_TEXTURE16 = external global i32
@__gl_TEXTURE17 = external global i32
@__gl_TEXTURE18 = external global i32
@__gl_TEXTURE19 = external global i32
@__gl_TEXTURE20 = external global i32
@__gl_TEXTURE21 = external global i32
@__gl_TEXTURE22 = external global i32
@__gl_TEXTURE23 = external global i32
@__gl_TEXTURE24 = external global i32
@__gl_TEXTURE25 = external global i32
@__gl_TEXTURE26 = external global i32
@__gl_TEXTURE27 = external global i32
@__gl_TEXTURE28 = external global i32
@__gl_TEXTURE29 = external global i32
@__gl_TEXTURE30 = external global i32
@__gl_TEXTURE31 = external global i32
@__gl_ACTIVE_TEXTURE = external global i32
@__gl_CLIENT_ACTIVE_TEXTURE = external global i32
@__gl_REPEAT = external global i32
@__gl_CLAMP_TO_EDGE = external global i32
@__gl_LIGHT0 = external global i32
@__gl_LIGHT1 = external global i32
@__gl_LIGHT2 = external global i32
@__gl_LIGHT3 = external global i32
@__gl_LIGHT4 = external global i32
@__gl_LIGHT5 = external global i32
@__gl_LIGHT6 = external global i32
@__gl_LIGHT7 = external global i32
@__gl_ARRAY_BUFFER = external global i32
@__gl_ELEMENT_ARRAY_BUFFER = external global i32
@__gl_ARRAY_BUFFER_BINDING = external global i32
@__gl_ELEMENT_ARRAY_BUFFER_BINDING = external global i32
@__gl_VERTEX_ARRAY_BUFFER_BINDING = external global i32
@__gl_NORMAL_ARRAY_BUFFER_BINDING = external global i32
@__gl_COLOR_ARRAY_BUFFER_BINDING = external global i32
@__gl_TEXTURE_COORD_ARRAY_BUFFER_BIDING = external global i32
@__gl_STATIC_DRAW = external global i32
@__gl_DYNAMIC_DRAW = external global i32
@__gl_BUFFER_SIZE = external global i32
@__gl_BUFFER_USAGE = external global i32
@__gl_SUBTRACT = external global i32
@__gl_COMBINE = external global i32
@__gl_COMBINE_RGB = external global i32
@__gl_COMBINE_ALPHA = external global i32
@__gl_RGB_SCALE = external global i32
@__gl_ADD_SIGNED = external global i32
@__gl_INTERPOLATE = external global i32
@__gl_CONSTANT = external global i32
@__gl_PRIMARY_COLOR = external global i32
@__gl_PREVIOUS = external global i32
@__gl_OPERAND0_RGB = external global i32
@__gl_OPERAND1_RGB = external global i32
@__gl_OPERAND2_RGB = external global i32
@__gl_OPERAND0_ALPHA = external global i32
@__gl_OPERAND1_ALPHA = external global i32
@__gl_OPERAND2_ALPHA = external global i32
@__gl_ALPHA_SCALE = external global i32
@__gl_SRC0_RGB = external global i32
@__gl_SRC1_RGB = external global i32
@__gl_SRC2_RGB = external global i32
@__gl_SRC0_ALPHA = external global i32
@__gl_SRC1_ALPHA = external global i32
@__gl_SRC2_ALPHA = external global i32
@__gl_DOT3_RGB = external global i32
@__gl_DOT3_RGBA = external global i32
@__gl_BLEND_EQUATION_RGB = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_ENABLED = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_SIZE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_STRIDE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_TYPE = external global i32
@__gl_CURRENT_VERTEX_ATTRIB = external global i32
@__gl_VERTEX_PROGRAM_POINT_SIZE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_POINTER = external global i32
@__gl_STENCIL_BACK_FUNC = external global i32
@__gl_STENCIL_BACK_FAIL = external global i32
@__gl_STENCIL_BACK_PASS_DEPTH_FAIL = external global i32
@__gl_STENCIL_BACK_PASS_DEPTH_PASS = external global i32
@__gl_MAX_DRAW_BUFFERS = external global i32
@__gl_DRAW_BUFFER0 = external global i32
@__gl_DRAW_BUFFER1 = external global i32
@__gl_DRAW_BUFFER2 = external global i32
@__gl_DRAW_BUFFER3 = external global i32
@__gl_DRAW_BUFFER4 = external global i32
@__gl_DRAW_BUFFER5 = external global i32
@__gl_DRAW_BUFFER6 = external global i32
@__gl_DRAW_BUFFER7 = external global i32
@__gl_DRAW_BUFFER8 = external global i32
@__gl_DRAW_BUFFER9 = external global i32
@__gl_DRAW_BUFFER10 = external global i32
@__gl_DRAW_BUFFER11 = external global i32
@__gl_DRAW_BUFFER12 = external global i32
@__gl_DRAW_BUFFER13 = external global i32
@__gl_DRAW_BUFFER14 = external global i32
@__gl_DRAW_BUFFER15 = external global i32
@__gl_BLEND_EQUATION_ALPHA = external global i32
@__gl_MAX_VERTEX_ATTRIBS = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_NORMALIZED = external global i32
@__gl_MAX_TEXTURE_IMAGE_UNITS = external global i32
@__gl_FRAGMENT_SHADER = external global i32
@__gl_VERTEX_SHADER = external global i32
@__gl_MAX_FRAGMENT_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_VERTEX_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_VARYING_FLOATS = external global i32
@__gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS = external global i32
@__gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS = external global i32
@__gl_SHADER_TYPE = external global i32
@__gl_FLOAT_VEC2 = external global i32
@__gl_FLOAT_VEC3 = external global i32
@__gl_FLOAT_VEC4 = external global i32
@__gl_INT_VEC2 = external global i32
@__gl_INT_VEC3 = external global i32
@__gl_INT_VEC4 = external global i32
@__gl_BOOL = external global i32
@__gl_BOOL_VEC2 = external global i32
@__gl_BOOL_VEC3 = external global i32
@__gl_BOOL_VEC4 = external global i32
@__gl_FLOAT_MAT2 = external global i32
@__gl_FLOAT_MAT3 = external global i32
@__gl_FLOAT_MAT4 = external global i32
@__gl_SAMPLER_1D = external global i32
@__gl_SAMPLER_2D = external global i32
@__gl_SAMPLER_3D = external global i32
@__gl_SAMPLER_CUBE = external global i32
@__gl_SAMPLER_1D_SHADOW = external global i32
@__gl_SAMPLER_2D_SHADOW = external global i32
@__gl_DELETE_STATUS = external global i32
@__gl_COMPILE_STATUS = external global i32
@__gl_LINK_STATUS = external global i32
@__gl_VALIDATE_STATUS = external global i32
@__gl_INFO_LOG_LENGTH = external global i32
@__gl_ATTACHED_SHADERS = external global i32
@__gl_ACTIVE_UNIFORMS = external global i32
@__gl_ACTIVE_UNIFORM_MAX_LENGTH = external global i32
@__gl_SHADER_SOURCE_LENGTH = external global i32
@__gl_ACTIVE_ATTRIBUTES = external global i32
@__gl_ACTIVE_ATTRIBUTE_MAX_LENGTH = external global i32
@__gl_FRAGMENT_SHADER_DERIVATIVE_HINT = external global i32
@__gl_SHADING_LANGUAGE_VERSION = external global i32
@__gl_CURRENT_PROGRAM = external global i32
@__gl_POINT_SPRITE_COORD_ORIGIN = external global i32
@__gl_LOWER_LEFT = external global i32
@__gl_UPPER_LEFT = external global i32
@__gl_STENCIL_BACK_REF = external global i32
@__gl_STENCIL_BACK_VALUE_MASK = external global i32
@__gl_STENCIL_BACK_WRITEMASK = external global i32
@__gl_VERTEX_PROGRAM_TWO_SIDE = external global i32
@__gl_POINT_SPRITE = external global i32
@__gl_COORD_REPLACE = external global i32
@__gl_MAX_TEXTURE_COORDS = external global i32
@__gl_NUM_SHADING_LANGUAGE_VERSIONS = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_LONG = external global i32
@__gl_COMPRESSED_RGB8_ETC2 = external global i32
@__gl_COMPRESSED_SRGB8_ETC2 = external global i32
@__gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = external global i32
@__gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = external global i32
@__gl_COMPRESSED_RGBA8_ETC2_EAC = external global i32
@__gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = external global i32
@__gl_COMPRESSED_R11_EAC = external global i32
@__gl_COMPRESSED_SIGNED_R11_EAC = external global i32
@__gl_COMPRESSED_RG11_EAC = external global i32
@__gl_COMPRESSED_SIGNED_RG11_EAC = external global i32
@__gl_PRIMITIVE_RESTART_FIXED_INDEX = external global i32
@__gl_ANY_SAMPLES_PASSED_CONSERVATIVE = external global i32
@__gl_MAX_ELEMENT_INDEX = external global i32
@__gl_COMPUTE_SHADER = external global i32
@__gl_MAX_COMPUTE_UNIFORM_BLOCKS = external global i32
@__gl_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = external global i32
@__gl_MAX_COMPUTE_IMAGE_UNIFORMS = external global i32
@__gl_MAX_COMPUTE_SHARED_MEMORY_SIZE = external global i32
@__gl_MAX_COMPUTE_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = external global i32
@__gl_MAX_COMPUTE_ATOMIC_COUNTERS = external global i32
@__gl_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_COUNT = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_SIZE = external global i32
@__gl_COMPUTE_WORK_GROUP_SIZE = external global i32
@__gl_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_DISPATCH_INDIRECT_BUFFER = external global i32
@__gl_DISPATCH_INDIRECT_BUFFER_BINDING = external global i32
@__gl_COMPUTE_SHADER_BIT = external global i32
@__gl_DEBUG_OUTPUT_SYNCHRONOUS = external global i32
@__gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = external global i32
@__gl_DEBUG_CALLBACK_FUNCTION = external global i32
@__gl_DEBUG_CALLBACK_USER_PARAM = external global i32
@__gl_DEBUG_SOURCE_API = external global i32
@__gl_DEBUG_SOURCE_WINDOW_SYSTEM = external global i32
@__gl_DEBUG_SOURCE_SHADER_COMPILER = external global i32
@__gl_DEBUG_SOURCE_THIRD_PARTY = external global i32
@__gl_DEBUG_SOURCE_APPLICATION = external global i32
@__gl_DEBUG_SOURCE_OTHER = external global i32
@__gl_DEBUG_TYPE_ERROR = external global i32
@__gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR = external global i32
@__gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR = external global i32
@__gl_DEBUG_TYPE_PORTABILITY = external global i32
@__gl_DEBUG_TYPE_PERFORMANCE = external global i32
@__gl_DEBUG_TYPE_OTHER = external global i32
@__gl_MAX_DEBUG_MESSAGE_LENGTH = external global i32
@__gl_MAX_DEBUG_LOGGED_MESSAGES = external global i32
@__gl_DEBUG_LOGGED_MESSAGES = external global i32
@__gl_DEBUG_SEVERITY_HIGH = external global i32
@__gl_DEBUG_SEVERITY_MEDIUM = external global i32
@__gl_DEBUG_SEVERITY_LOW = external global i32
@__gl_DEBUG_TYPE_MARKER = external global i32
@__gl_DEBUG_TYPE_PUSH_GROUP = external global i32
@__gl_DEBUG_TYPE_POP_GROUP = external global i32
@__gl_DEBUG_SEVERITY_NOTIFICATION = external global i32
@__gl_MAX_DEBUG_GROUP_STACK_DEPTH = external global i32
@__gl_DEBUG_GROUP_STACK_DEPTH = external global i32
@__gl_BUFFER = external global i32
@__gl_SHADER = external global i32
@__gl_PROGRAM = external global i32
@__gl_QUERY = external global i32
@__gl_PROGRAM_PIPELINE = external global i32
@__gl_SAMPLER = external global i32
@__gl_MAX_LABEL_LENGTH = external global i32
@__gl_DEBUG_OUTPUT = external global i32
@__gl_CONTEXT_FLAG_DEBUG_BIT = external global i32
@__gl_MAX_UNIFORM_LOCATIONS = external global i32
@__gl_FRAMEBUFFER_DEFAULT_WIDTH = external global i32
@__gl_FRAMEBUFFER_DEFAULT_HEIGHT = external global i32
@__gl_FRAMEBUFFER_DEFAULT_LAYERS = external global i32
@__gl_FRAMEBUFFER_DEFAULT_SAMPLES = external global i32
@__gl_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = external global i32
@__gl_MAX_FRAMEBUFFER_WIDTH = external global i32
@__gl_MAX_FRAMEBUFFER_HEIGHT = external global i32
@__gl_MAX_FRAMEBUFFER_LAYERS = external global i32
@__gl_MAX_FRAMEBUFFER_SAMPLES = external global i32
@__gl_INTERNALFORMAT_SUPPORTED = external global i32
@__gl_INTERNALFORMAT_PREFERRED = external global i32
@__gl_INTERNALFORMAT_RED_SIZE = external global i32
@__gl_INTERNALFORMAT_GREEN_SIZE = external global i32
@__gl_INTERNALFORMAT_BLUE_SIZE = external global i32
@__gl_INTERNALFORMAT_ALPHA_SIZE = external global i32
@__gl_INTERNALFORMAT_DEPTH_SIZE = external global i32
@__gl_INTERNALFORMAT_STENCIL_SIZE = external global i32
@__gl_INTERNALFORMAT_SHARED_SIZE = external global i32
@__gl_INTERNALFORMAT_RED_TYPE = external global i32
@__gl_INTERNALFORMAT_GREEN_TYPE = external global i32
@__gl_INTERNALFORMAT_BLUE_TYPE = external global i32
@__gl_INTERNALFORMAT_ALPHA_TYPE = external global i32
@__gl_INTERNALFORMAT_DEPTH_TYPE = external global i32
@__gl_INTERNALFORMAT_STENCIL_TYPE = external global i32
@__gl_MAX_WIDTH = external global i32
@__gl_MAX_HEIGHT = external global i32
@__gl_MAX_DEPTH = external global i32
@__gl_MAX_LAYERS = external global i32
@__gl_MAX_COMBINED_DIMENSIONS = external global i32
@__gl_COLOR_COMPONENTS = external global i32
@__gl_DEPTH_COMPONENTS = external global i32
@__gl_STENCIL_COMPONENTS = external global i32
@__gl_COLOR_RENDERABLE = external global i32
@__gl_DEPTH_RENDERABLE = external global i32
@__gl_STENCIL_RENDERABLE = external global i32
@__gl_FRAMEBUFFER_RENDERABLE = external global i32
@__gl_FRAMEBUFFER_RENDERABLE_LAYERED = external global i32
@__gl_FRAMEBUFFER_BLEND = external global i32
@__gl_READ_PIXELS = external global i32
@__gl_READ_PIXELS_FORMAT = external global i32
@__gl_READ_PIXELS_TYPE = external global i32
@__gl_TEXTURE_IMAGE_FORMAT = external global i32
@__gl_TEXTURE_IMAGE_TYPE = external global i32
@__gl_GET_TEXTURE_IMAGE_FORMAT = external global i32
@__gl_GET_TEXTURE_IMAGE_TYPE = external global i32
@__gl_MIPMAP = external global i32
@__gl_MANUAL_GENERATE_MIPMAP = external global i32
@__gl_AUTO_GENERATE_MIPMAP = external global i32
@__gl_COLOR_ENCODING = external global i32
@__gl_SRGB_READ = external global i32
@__gl_SRGB_WRITE = external global i32
@__gl_FILTER = external global i32
@__gl_VERTEX_TEXTURE = external global i32
@__gl_TESS_CONTROL_TEXTURE = external global i32
@__gl_TESS_EVALUATION_TEXTURE = external global i32
@__gl_GEOMETRY_TEXTURE = external global i32
@__gl_FRAGMENT_TEXTURE = external global i32
@__gl_COMPUTE_TEXTURE = external global i32
@__gl_TEXTURE_SHADOW = external global i32
@__gl_TEXTURE_GATHER = external global i32
@__gl_TEXTURE_GATHER_SHADOW = external global i32
@__gl_SHADER_IMAGE_LOAD = external global i32
@__gl_SHADER_IMAGE_STORE = external global i32
@__gl_SHADER_IMAGE_ATOMIC = external global i32
@__gl_IMAGE_TEXEL_SIZE = external global i32
@__gl_IMAGE_COMPATIBILITY_CLASS = external global i32
@__gl_IMAGE_PIXEL_FORMAT = external global i32
@__gl_IMAGE_PIXEL_TYPE = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_WIDTH = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_HEIGHT = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_SIZE = external global i32
@__gl_CLEAR_BUFFER = external global i32
@__gl_TEXTURE_VIEW = external global i32
@__gl_VIEW_COMPATIBILITY_CLASS = external global i32
@__gl_FULL_SUPPORT = external global i32
@__gl_CAVEAT_SUPPORT = external global i32
@__gl_IMAGE_CLASS_4_X_32 = external global i32
@__gl_IMAGE_CLASS_2_X_32 = external global i32
@__gl_IMAGE_CLASS_1_X_32 = external global i32
@__gl_IMAGE_CLASS_4_X_16 = external global i32
@__gl_IMAGE_CLASS_2_X_16 = external global i32
@__gl_IMAGE_CLASS_1_X_16 = external global i32
@__gl_IMAGE_CLASS_4_X_8 = external global i32
@__gl_IMAGE_CLASS_2_X_8 = external global i32
@__gl_IMAGE_CLASS_1_X_8 = external global i32
@__gl_IMAGE_CLASS_11_11_10 = external global i32
@__gl_IMAGE_CLASS_10_10_10_2 = external global i32
@__gl_VIEW_CLASS_128_BITS = external global i32
@__gl_VIEW_CLASS_96_BITS = external global i32
@__gl_VIEW_CLASS_64_BITS = external global i32
@__gl_VIEW_CLASS_48_BITS = external global i32
@__gl_VIEW_CLASS_32_BITS = external global i32
@__gl_VIEW_CLASS_24_BITS = external global i32
@__gl_VIEW_CLASS_16_BITS = external global i32
@__gl_VIEW_CLASS_8_BITS = external global i32
@__gl_VIEW_CLASS_S3TC_DXT1_RGB = external global i32
@__gl_VIEW_CLASS_S3TC_DXT1_RGBA = external global i32
@__gl_VIEW_CLASS_S3TC_DXT3_RGBA = external global i32
@__gl_VIEW_CLASS_S3TC_DXT5_RGBA = external global i32
@__gl_VIEW_CLASS_RGTC1_RED = external global i32
@__gl_VIEW_CLASS_RGTC2_RG = external global i32
@__gl_VIEW_CLASS_BPTC_UNORM = external global i32
@__gl_VIEW_CLASS_BPTC_FLOAT = external global i32
@__gl_UNIFORM = external global i32
@__gl_UNIFORM_BLOCK = external global i32
@__gl_PROGRAM_INPUT = external global i32
@__gl_PROGRAM_OUTPUT = external global i32
@__gl_BUFFER_VARIABLE = external global i32
@__gl_SHADER_STORAGE_BLOCK = external global i32
@__gl_VERTEX_SUBROUTINE = external global i32
@__gl_TESS_CONTROL_SUBROUTINE = external global i32
@__gl_TESS_EVALUATION_SUBROUTINE = external global i32
@__gl_GEOMETRY_SUBROUTINE = external global i32
@__gl_FRAGMENT_SUBROUTINE = external global i32
@__gl_COMPUTE_SUBROUTINE = external global i32
@__gl_VERTEX_SUBROUTINE_UNIFORM = external global i32
@__gl_TESS_CONTROL_SUBROUTINE_UNIFORM = external global i32
@__gl_TESS_EVALUATION_SUBROUTINE_UNIFORM = external global i32
@__gl_GEOMETRY_SUBROUTINE_UNIFORM = external global i32
@__gl_FRAGMENT_SUBROUTINE_UNIFORM = external global i32
@__gl_COMPUTE_SUBROUTINE_UNIFORM = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYING = external global i32
@__gl_ACTIVE_RESOURCES = external global i32
@__gl_MAX_NAME_LENGTH = external global i32
@__gl_MAX_NUM_ACTIVE_VARIABLES = external global i32
@__gl_MAX_NUM_COMPATIBLE_SUBROUTINES = external global i32
@__gl_NAME_LENGTH = external global i32
@__gl_TYPE = external global i32
@__gl_ARRAY_SIZE = external global i32
@__gl_OFFSET = external global i32
@__gl_BLOCK_INDEX = external global i32
@__gl_ARRAY_STRIDE = external global i32
@__gl_MATRIX_STRIDE = external global i32
@__gl_IS_ROW_MAJOR = external global i32
@__gl_ATOMIC_COUNTER_BUFFER_INDEX = external global i32
@__gl_BUFFER_BINDING = external global i32
@__gl_BUFFER_DATA_SIZE = external global i32
@__gl_NUM_ACTIVE_VARIABLES = external global i32
@__gl_ACTIVE_VARIABLES = external global i32
@__gl_REFERENCED_BY_VERTEX_SHADER = external global i32
@__gl_REFERENCED_BY_TESS_CONTROL_SHADER = external global i32
@__gl_REFERENCED_BY_TESS_EVALUATION_SHADER = external global i32
@__gl_REFERENCED_BY_GEOMETRY_SHADER = external global i32
@__gl_REFERENCED_BY_FRAGMENT_SHADER = external global i32
@__gl_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_TOP_LEVEL_ARRAY_SIZE = external global i32
@__gl_TOP_LEVEL_ARRAY_STRIDE = external global i32
@__gl_LOCATION = external global i32
@__gl_LOCATION_INDEX = external global i32
@__gl_IS_PER_PATCH = external global i32
@__gl_SHADER_STORAGE_BUFFER = external global i32
@__gl_SHADER_STORAGE_BUFFER_BINDING = external global i32
@__gl_SHADER_STORAGE_BUFFER_START = external global i32
@__gl_SHADER_STORAGE_BUFFER_SIZE = external global i32
@__gl_MAX_VERTEX_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_COMBINED_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_SHADER_STORAGE_BUFFER_BINDINGS = external global i32
@__gl_MAX_SHADER_STORAGE_BLOCK_SIZE = external global i32
@__gl_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = external global i32
@__gl_SHADER_STORAGE_BARRIER_BIT = external global i32
@__gl_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = external global i32
@__gl_DEPTH_STENCIL_TEXTURE_MODE = external global i32
@__gl_TEXTURE_BUFFER_OFFSET = external global i32
@__gl_TEXTURE_BUFFER_SIZE = external global i32
@__gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT = external global i32
@__gl_TEXTURE_VIEW_MIN_LEVEL = external global i32
@__gl_TEXTURE_VIEW_NUM_LEVELS = external global i32
@__gl_TEXTURE_VIEW_MIN_LAYER = external global i32
@__gl_TEXTURE_VIEW_NUM_LAYERS = external global i32
@__gl_TEXTURE_IMMUTABLE_LEVELS = external global i32
@__gl_VERTEX_ATTRIB_BINDING = external global i32
@__gl_VERTEX_ATTRIB_RELATIVE_OFFSET = external global i32
@__gl_VERTEX_BINDING_DIVISOR = external global i32
@__gl_VERTEX_BINDING_OFFSET = external global i32
@__gl_VERTEX_BINDING_STRIDE = external global i32
@__gl_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = external global i32
@__gl_MAX_VERTEX_ATTRIB_BINDINGS = external global i32
@__gl_VERTEX_BINDING_BUFFER = external global i32
@__gl_DISPLAY_LIST = external global i32
@__gl_COMPARE_REF_TO_TEXTURE = external global i32
@__gl_CLIP_DISTANCE0 = external global i32
@__gl_CLIP_DISTANCE1 = external global i32
@__gl_CLIP_DISTANCE2 = external global i32
@__gl_CLIP_DISTANCE3 = external global i32
@__gl_CLIP_DISTANCE4 = external global i32
@__gl_CLIP_DISTANCE5 = external global i32
@__gl_CLIP_DISTANCE6 = external global i32
@__gl_CLIP_DISTANCE7 = external global i32
@__gl_MAX_CLIP_DISTANCES = external global i32
@__gl_MAJOR_VERSION = external global i32
@__gl_MINOR_VERSION = external global i32
@__gl_NUM_EXTENSIONS = external global i32
@__gl_CONTEXT_FLAGS = external global i32
@__gl_COMPRESSED_RED = external global i32
@__gl_COMPRESSED_RG = external global i32
@__gl_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = external global i32
@__gl_RGBA32F = external global i32
@__gl_RGB32F = external global i32
@__gl_RGBA16F = external global i32
@__gl_RGB16F = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_INTEGER = external global i32
@__gl_MAX_ARRAY_TEXTURE_LAYERS = external global i32
@__gl_MIN_PROGRAM_TEXEL_OFFSET = external global i32
@__gl_MAX_PROGRAM_TEXEL_OFFSET = external global i32
@__gl_CLAMP_READ_COLOR = external global i32
@__gl_FIXED_ONLY = external global i32
@__gl_MAX_VARYING_COMPONENTS = external global i32
@__gl_TEXTURE_1D_ARRAY = external global i32
@__gl_PROXY_TEXTURE_1D_ARRAY = external global i32
@__gl_TEXTURE_2D_ARRAY = external global i32
@__gl_PROXY_TEXTURE_2D_ARRAY = external global i32
@__gl_TEXTURE_BINDING_1D_ARRAY = external global i32
@__gl_TEXTURE_BINDING_2D_ARRAY = external global i32
@__gl_R11F_G11F_B10F = external global i32
@__gl_UNSIGNED_INT_10F_11F_11F_REV = external global i32
@__gl_RGB9_E5 = external global i32
@__gl_UNSIGNED_INT_5_9_9_9_REV = external global i32
@__gl_TEXTURE_SHARED_SIZE = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_MODE = external global i32
@__gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYINGS = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_START = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_SIZE = external global i32
@__gl_PRIMITIVES_GENERATED = external global i32
@__gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = external global i32
@__gl_RASTERIZER_DISCARD = external global i32
@__gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = external global i32
@__gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = external global i32
@__gl_INTERLEAVED_ATTRIBS = external global i32
@__gl_SEPARATE_ATTRIBS = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_BINDING = external global i32
@__gl_RGBA32UI = external global i32
@__gl_RGB32UI = external global i32
@__gl_RGBA16UI = external global i32
@__gl_RGB16UI = external global i32
@__gl_RGBA8UI = external global i32
@__gl_RGB8UI = external global i32
@__gl_RGBA32I = external global i32
@__gl_RGB32I = external global i32
@__gl_RGBA16I = external global i32
@__gl_RGB16I = external global i32
@__gl_RGBA8I = external global i32
@__gl_RGB8I = external global i32
@__gl_RED_INTEGER = external global i32
@__gl_GREEN_INTEGER = external global i32
@__gl_BLUE_INTEGER = external global i32
@__gl_RGB_INTEGER = external global i32
@__gl_RGBA_INTEGER = external global i32
@__gl_BGR_INTEGER = external global i32
@__gl_BGRA_INTEGER = external global i32
@__gl_SAMPLER_1D_ARRAY = external global i32
@__gl_SAMPLER_2D_ARRAY = external global i32
@__gl_SAMPLER_1D_ARRAY_SHADOW = external global i32
@__gl_SAMPLER_2D_ARRAY_SHADOW = external global i32
@__gl_SAMPLER_CUBE_SHADOW = external global i32
@__gl_UNSIGNED_INT_VEC2 = external global i32
@__gl_UNSIGNED_INT_VEC3 = external global i32
@__gl_UNSIGNED_INT_VEC4 = external global i32
@__gl_INT_SAMPLER_1D = external global i32
@__gl_INT_SAMPLER_2D = external global i32
@__gl_INT_SAMPLER_3D = external global i32
@__gl_INT_SAMPLER_CUBE = external global i32
@__gl_INT_SAMPLER_1D_ARRAY = external global i32
@__gl_INT_SAMPLER_2D_ARRAY = external global i32
@__gl_UNSIGNED_INT_SAMPLER_1D = external global i32
@__gl_UNSIGNED_INT_SAMPLER_2D = external global i32
@__gl_UNSIGNED_INT_SAMPLER_3D = external global i32
@__gl_UNSIGNED_INT_SAMPLER_CUBE = external global i32
@__gl_UNSIGNED_INT_SAMPLER_1D_ARRAY = external global i32
@__gl_UNSIGNED_INT_SAMPLER_2D_ARRAY = external global i32
@__gl_QUERY_WAIT = external global i32
@__gl_QUERY_NO_WAIT = external global i32
@__gl_QUERY_BY_REGION_WAIT = external global i32
@__gl_QUERY_BY_REGION_NO_WAIT = external global i32
@__gl_BUFFER_ACCESS_FLAGS = external global i32
@__gl_BUFFER_MAP_LENGTH = external global i32
@__gl_BUFFER_MAP_OFFSET = external global i32
@__gl_DEPTH_COMPONENT32F = external global i32
@__gl_DEPTH32F_STENCIL8 = external global i32
@__gl_FLOAT_32_UNSIGNED_INT_24_8_REV = external global i32
@__gl_INVALID_FRAMEBUFFER_OPERATION = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_RED_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = external global i32
@__gl_FRAMEBUFFER_DEFAULT = external global i32
@__gl_FRAMEBUFFER_UNDEFINED = external global i32
@__gl_DEPTH_STENCIL_ATTACHMENT = external global i32
@__gl_MAX_RENDERBUFFER_SIZE = external global i32
@__gl_DEPTH_STENCIL = external global i32
@__gl_UNSIGNED_INT_24_8 = external global i32
@__gl_DEPTH24_STENCIL8 = external global i32
@__gl_TEXTURE_STENCIL_SIZE = external global i32
@__gl_TEXTURE_RED_TYPE = external global i32
@__gl_TEXTURE_GREEN_TYPE = external global i32
@__gl_TEXTURE_BLUE_TYPE = external global i32
@__gl_TEXTURE_ALPHA_TYPE = external global i32
@__gl_TEXTURE_DEPTH_TYPE = external global i32
@__gl_UNSIGNED_NORMALIZED = external global i32
@__gl_FRAMEBUFFER_BINDING = external global i32
@__gl_DRAW_FRAMEBUFFER_BINDING = external global i32
@__gl_RENDERBUFFER_BINDING = external global i32
@__gl_READ_FRAMEBUFFER = external global i32
@__gl_DRAW_FRAMEBUFFER = external global i32
@__gl_READ_FRAMEBUFFER_BINDING = external global i32
@__gl_RENDERBUFFER_SAMPLES = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = external global i32
@__gl_FRAMEBUFFER_COMPLETE = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = external global i32
@__gl_FRAMEBUFFER_UNSUPPORTED = external global i32
@__gl_MAX_COLOR_ATTACHMENTS = external global i32
@__gl_COLOR_ATTACHMENT0 = external global i32
@__gl_COLOR_ATTACHMENT1 = external global i32
@__gl_COLOR_ATTACHMENT2 = external global i32
@__gl_COLOR_ATTACHMENT3 = external global i32
@__gl_COLOR_ATTACHMENT4 = external global i32
@__gl_COLOR_ATTACHMENT5 = external global i32
@__gl_COLOR_ATTACHMENT6 = external global i32
@__gl_COLOR_ATTACHMENT7 = external global i32
@__gl_COLOR_ATTACHMENT8 = external global i32
@__gl_COLOR_ATTACHMENT9 = external global i32
@__gl_COLOR_ATTACHMENT10 = external global i32
@__gl_COLOR_ATTACHMENT11 = external global i32
@__gl_COLOR_ATTACHMENT12 = external global i32
@__gl_COLOR_ATTACHMENT13 = external global i32
@__gl_COLOR_ATTACHMENT14 = external global i32
@__gl_COLOR_ATTACHMENT15 = external global i32
@__gl_COLOR_ATTACHMENT16 = external global i32
@__gl_COLOR_ATTACHMENT17 = external global i32
@__gl_COLOR_ATTACHMENT18 = external global i32
@__gl_COLOR_ATTACHMENT19 = external global i32
@__gl_COLOR_ATTACHMENT20 = external global i32
@__gl_COLOR_ATTACHMENT21 = external global i32
@__gl_COLOR_ATTACHMENT22 = external global i32
@__gl_COLOR_ATTACHMENT23 = external global i32
@__gl_COLOR_ATTACHMENT24 = external global i32
@__gl_COLOR_ATTACHMENT25 = external global i32
@__gl_COLOR_ATTACHMENT26 = external global i32
@__gl_COLOR_ATTACHMENT27 = external global i32
@__gl_COLOR_ATTACHMENT28 = external global i32
@__gl_COLOR_ATTACHMENT29 = external global i32
@__gl_COLOR_ATTACHMENT30 = external global i32
@__gl_COLOR_ATTACHMENT31 = external global i32
@__gl_DEPTH_ATTACHMENT = external global i32
@__gl_STENCIL_ATTACHMENT = external global i32
@__gl_FRAMEBUFFER = external global i32
@__gl_RENDERBUFFER = external global i32
@__gl_RENDERBUFFER_WIDTH = external global i32
@__gl_RENDERBUFFER_HEIGHT = external global i32
@__gl_RENDERBUFFER_INTERNAL_FORMAT = external global i32
@__gl_STENCIL_INDEX1 = external global i32
@__gl_STENCIL_INDEX4 = external global i32
@__gl_STENCIL_INDEX8 = external global i32
@__gl_STENCIL_INDEX16 = external global i32
@__gl_RENDERBUFFER_RED_SIZE = external global i32
@__gl_RENDERBUFFER_GREEN_SIZE = external global i32
@__gl_RENDERBUFFER_BLUE_SIZE = external global i32
@__gl_RENDERBUFFER_ALPHA_SIZE = external global i32
@__gl_RENDERBUFFER_DEPTH_SIZE = external global i32
@__gl_RENDERBUFFER_STENCIL_SIZE = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = external global i32
@__gl_MAX_SAMPLES = external global i32
@__gl_INDEX = external global i32
@__gl_TEXTURE_LUMINANCE_TYPE = external global i32
@__gl_TEXTURE_INTENSITY_TYPE = external global i32
@__gl_FRAMEBUFFER_SRGB = external global i32
@__gl_HALF_FLOAT = external global i32
@__gl_MAP_READ_BIT = external global i32
@__gl_MAP_WRITE_BIT = external global i32
@__gl_MAP_INVALIDATE_RANGE_BIT = external global i32
@__gl_MAP_INVALIDATE_BUFFER_BIT = external global i32
@__gl_MAP_FLUSH_EXPLICIT_BIT = external global i32
@__gl_MAP_UNSYNCHRONIZED_BIT = external global i32
@__gl_COMPRESSED_RED_RGTC1 = external global i32
@__gl_COMPRESSED_SIGNED_RED_RGTC1 = external global i32
@__gl_COMPRESSED_RG_RGTC2 = external global i32
@__gl_COMPRESSED_SIGNED_RG_RGTC2 = external global i32
@__gl_RG = external global i32
@__gl_RG_INTEGER = external global i32
@__gl_R8 = external global i32
@__gl_R16 = external global i32
@__gl_RG8 = external global i32
@__gl_RG16 = external global i32
@__gl_R16F = external global i32
@__gl_R32F = external global i32
@__gl_RG16F = external global i32
@__gl_RG32F = external global i32
@__gl_R8I = external global i32
@__gl_R8UI = external global i32
@__gl_R16I = external global i32
@__gl_R16UI = external global i32
@__gl_R32I = external global i32
@__gl_R32UI = external global i32
@__gl_RG8I = external global i32
@__gl_RG8UI = external global i32
@__gl_RG16I = external global i32
@__gl_RG16UI = external global i32
@__gl_RG32I = external global i32
@__gl_RG32UI = external global i32
@__gl_VERTEX_ARRAY_BINDING = external global i32
@__gl_CLAMP_VERTEX_COLOR = external global i32
@__gl_CLAMP_FRAGMENT_COLOR = external global i32
@__gl_ALPHA_INTEGER = external global i32
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.523
@__os_STD_INPUT_HANDLE = external global i32
@__os_STD_OUTPUT_HANDLE = external global i32
@__os_STD_ERROR_HANDLE = external global i32
@__os_INVALID_HANDLE_VALUE = external global ptr
@__os_CP_UTF7 = external global i32
@__os_CP_UTF8 = external global i32
@__os_MEM_COMMIT = external global i32
@__os_MEM_RESERVE = external global i32
@__os_MEM_RELEASE = external global i32
@__os_PAGE_NOACCESS = external global i32
@__os_PAGE_READONLY = external global i32
@__os_PAGE_READWRITE = external global i32
@__os_PAGE_WRITECOPY = external global i32
@__os_PAGE_EXECUTE = external global i32
@__os_PAGE_EXECUTE_READ = external global i32
@__os_PAGE_EXECUTE_READWRITE = external global i32
@__os_PAGE_EXECUTE_WRITECOPY = external global i32
@__os_PAGE_GUARD = external global i32
@__os_PAGE_NOCACHE = external global i32
@__os_PAGE_WRITECOMBINE = external global i32
@__str_CONTINUE_BIT = external global i8
@___asan_gen__anon_global = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"invalid\00", [24 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.21 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"fn(\00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.23 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c", \00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.25 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c")\00", [30 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.27 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" -> \00", [27 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.29 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"*\00", [30 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.31 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"[x]\00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.33 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"[]\00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.35 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"<>\00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.37 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"true\00", [27 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.39 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"false\00", [26 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.41 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" { \00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.43 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mem: %\0A\00", [24 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.45 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" = \00", [28 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.47 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c", \00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.49 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c" }\00", [29 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.51 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, comdat, align 32
@___asan_gen__anon_global.53 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, comdat, align 32
@llvm.used = appending global [1 x ptr] [ptr @asan.module_ctor], section "llvm.metadata"
@___asan_gen_ = private constant [3 x i8] c"io\00", align 1
@___asan_gen_.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__asan_global_ = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.2 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global), align 64, !associated !0
@__asan_global_.20 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.21 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.3 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.21), align 64, !associated !1
@__asan_global_.22 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.23 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.4 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.23), align 64, !associated !2
@__asan_global_.24 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.25 to i64), i64 2, i64 32, i64 ptrtoint (ptr @___asan_gen_.5 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.25), align 64, !associated !3
@__asan_global_.26 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.27 to i64), i64 5, i64 32, i64 ptrtoint (ptr @___asan_gen_.6 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.27), align 64, !associated !4
@__asan_global_.28 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.29 to i64), i64 2, i64 32, i64 ptrtoint (ptr @___asan_gen_.7 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.29), align 64, !associated !5
@__asan_global_.30 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.31 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.8 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.31), align 64, !associated !6
@__asan_global_.32 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.33 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.9 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.33), align 64, !associated !7
@__asan_global_.34 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.35 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.10 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.35), align 64, !associated !8
@__asan_global_.36 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.37 to i64), i64 5, i64 32, i64 ptrtoint (ptr @___asan_gen_.11 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.37), align 64, !associated !9
@__asan_global_.38 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.39 to i64), i64 6, i64 32, i64 ptrtoint (ptr @___asan_gen_.12 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.39), align 64, !associated !10
@__asan_global_.40 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.41 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.13 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.41), align 64, !associated !11
@__asan_global_.42 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.43 to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.14 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.43), align 64, !associated !12
@__asan_global_.44 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.45 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.15 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.45), align 64, !associated !13
@__asan_global_.46 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.47 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.16 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.47), align 64, !associated !14
@__asan_global_.48 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.49 to i64), i64 3, i64 32, i64 ptrtoint (ptr @___asan_gen_.17 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.49), align 64, !associated !15
@__asan_global_.50 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.51 to i64), i64 1, i64 32, i64 ptrtoint (ptr @___asan_gen_.18 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.51), align 64, !associated !16
@__asan_global_.52 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.53 to i64), i64 1, i64 32, i64 ptrtoint (ptr @___asan_gen_.19 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.53), align 64, !associated !17
@llvm.compiler.used = appending global [18 x ptr] [ptr @__asan_global_, ptr @__asan_global_.20, ptr @__asan_global_.22, ptr @__asan_global_.24, ptr @__asan_global_.26, ptr @__asan_global_.28, ptr @__asan_global_.30, ptr @__asan_global_.32, ptr @__asan_global_.34, ptr @__asan_global_.36, ptr @__asan_global_.38, ptr @__asan_global_.40, ptr @__asan_global_.42, ptr @__asan_global_.44, ptr @__asan_global_.46, ptr @__asan_global_.48, ptr @__asan_global_.50, ptr @__asan_global_.52], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]

define void @__io___GlobalInitializerFunction.0() {
block_0:
  ret void
}

declare i32 @__main_main()

declare i1 @SDL_Init(i32)

declare ptr @SDL_CreateWindow(ptr, i32, i32, i64)

declare ptr @SDL_GL_CreateContext(ptr)

declare i1 @SDL_GL_SwapWindow(ptr)

declare i1 @SDL_GL_SetAttribute(i32, i32)

declare i1 @SDL_PollEvent(ptr)

declare ptr @SDL_GetError()

declare i64 @SDL_GetTicks()

declare i1 @SDL_GL_SetSwapInterval(i32)

declare i32 @__sdl_BUTTON_MASK(i32)

declare ptr @wglGetProcAddress(ptr)

declare ptr @GetProcAddress(ptr, ptr)

declare ptr @LoadLibraryA(ptr)

declare ptr @__gl_load_gl_fn(ptr)

declare i1 @__gl_load()

declare i32 @__renderer_compile_shaders(ptr, ptr)

declare void @__renderer_use_shader(i32)

declare i64 @__renderer_create_ctx()

declare ptr @__renderer_create_framebuffer(i32, i32, ptr)

declare void @__renderer_delete_framebuffer(ptr)

declare void @__renderer_bind_framebuffer(ptr, ptr)

declare void @__renderer_draw_verts(ptr, ptr)

declare void @__renderer_draw_lines(ptr, ptr, float)

declare void @__renderer_compile_shader(i32, ptr, ptr)

declare void @__renderer_gl_callback(i32, i32, i32, i32, i32, ptr, ptr)

declare void @"__renderer_set_uniform@u32_string_f32_@void"(i32, ptr, float)

declare void @"__renderer_set_uniform@u32_string_@@f32_f32_@@__math_v2_@void"(i32, ptr, i64)

declare void @"__renderer_set_uniform@u32_string_@@f32_f32_f32_@@__math_v3_@void"(i32, ptr, ptr)

declare void @"__renderer_set_uniform@u32_string_int_@void"(i32, ptr, i64)

declare i64 @__graph_map_point(i64, float, float)

declare i64 @__graph_calculate_spline(i64, i64, i64, i64, float)

declare void @__graph_draw(ptr, ptr, float, float)

declare i64 @__math_v2_scale(i64, float)

declare i64 @__math_v2_add(i64, i64)

declare float @__math_map(float, float, float, float, float)

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

declare i1 @ReadConsoleA(ptr, ptr, i32, ptr, ptr)

declare void @__os_abort()

declare void @__os_assert(i1, ptr)

declare void @__os_print(ptr, i32)

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

declare i32 @__os_read_stdin_line(ptr, i32)

define void @__io_push_string(ptr %0, ptr %1) !dbg !119 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %string.461, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !138
  call void @llvm.dbg.value(metadata ptr %2, metadata !139, metadata !DIExpression()), !dbg !138
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !138
  call void @llvm.dbg.value(metadata ptr %3, metadata !140, metadata !DIExpression()), !dbg !138
  %7 = getelementptr inbounds %string.461, ptr %3, i32 0, i32 1, !dbg !141
  %8 = load i64, ptr %7, align 8, !dbg !141
  %9 = getelementptr inbounds %string.461, ptr %3, i32 0, i32 0, !dbg !141
  %10 = load ptr, ptr %9, align 8, !dbg !141
  store ptr %10, ptr %4, align 8, !dbg !141
  store i64 0, ptr %5, align 8, !dbg !141
  br label %block_1, !dbg !141

block_1:                                          ; preds = %block_3, %block_0
  %11 = load i64, ptr %5, align 8, !dbg !141
  %12 = icmp ult i64 %11, %8, !dbg !141
  br i1 %12, label %block_2, label %block_4, !dbg !141

block_2:                                          ; preds = %block_1
  %13 = load ptr, ptr %4, align 8, !dbg !141
  %14 = call i32 @__str_deref(ptr %13), !dbg !141
  store i32 %14, ptr %6, align 4, !dbg !141
  call void @llvm.dbg.declare(metadata ptr %6, metadata !142, metadata !DIExpression()), !dbg !141
  call void @llvm.dbg.declare(metadata ptr %5, metadata !143, metadata !DIExpression()), !dbg !141
  %15 = load ptr, ptr %2, align 8, !dbg !144
  %16 = load i32, ptr %6, align 4, !dbg !144
  call void @"__array_add@*[]u32_u32_@void"(ptr %15, i32 %16), !dbg !144
  br label %block_3, !dbg !144

block_3:                                          ; preds = %block_2
  %17 = load i64, ptr %5, align 8, !dbg !144
  %18 = add i64 %17, 1, !dbg !144
  store i64 %18, ptr %5, align 8, !dbg !144
  %19 = load ptr, ptr %4, align 8, !dbg !144
  %20 = call ptr @__str__it_advance(ptr %19, i64 %8, i64 %17), !dbg !144
  store ptr %20, ptr %4, align 8, !dbg !144
  br label %block_1, !dbg !144

block_4:                                          ; preds = %block_1
  ret void, !dbg !145
}

define void @__io_format_uint(ptr %0, i64 %1) !dbg !146 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !150
  call void @llvm.dbg.value(metadata ptr %2, metadata !151, metadata !DIExpression()), !dbg !150
  store i64 %1, ptr %3, align 8, !dbg !150
  call void @llvm.dbg.value(metadata ptr %3, metadata !152, metadata !DIExpression()), !dbg !150
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !153
  call void @llvm.dbg.declare(metadata ptr %5, metadata !154, metadata !DIExpression()), !dbg !153
  %11 = load i64, ptr %3, align 8, !dbg !158
  store i64 %11, ptr %6, align 8, !dbg !158
  call void @llvm.dbg.declare(metadata ptr %6, metadata !159, metadata !DIExpression()), !dbg !158
  %12 = load i64, ptr %6, align 8, !dbg !160
  %13 = icmp eq i64 %12, 0, !dbg !160
  br i1 %13, label %block_1, label %block_2, !dbg !160

block_1:                                          ; preds = %block_0
  %14 = load ptr, ptr %2, align 8, !dbg !161
  call void @"__array_add@*[]u32_u32_@void"(ptr %14, i32 48), !dbg !161
  ret void, !dbg !162

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !162

block_3:                                          ; preds = %block_2
  store i64 0, ptr %7, align 8, !dbg !163
  call void @llvm.dbg.declare(metadata ptr %7, metadata !164, metadata !DIExpression()), !dbg !163
  br label %block_4, !dbg !165

block_4:                                          ; preds = %block_5, %block_3
  %15 = load i64, ptr %6, align 8, !dbg !165
  %16 = icmp ugt i64 %15, 0, !dbg !165
  br i1 %16, label %block_5, label %block_6, !dbg !165

block_5:                                          ; preds = %block_4
  %17 = load i64, ptr %6, align 8, !dbg !166
  %18 = urem i64 %17, 10, !dbg !166
  store i64 %18, ptr %8, align 8, !dbg !166
  call void @llvm.dbg.declare(metadata ptr %8, metadata !167, metadata !DIExpression()), !dbg !166
  %19 = load i64, ptr %6, align 8, !dbg !168
  %20 = udiv i64 %19, 10, !dbg !168
  store i64 %20, ptr %6, align 8, !dbg !168
  %21 = load i64, ptr %8, align 8, !dbg !169
  %22 = add i64 48, %21, !dbg !169
  store i64 %22, ptr %9, align 8, !dbg !169
  call void @llvm.dbg.declare(metadata ptr %9, metadata !170, metadata !DIExpression()), !dbg !169
  %23 = load i64, ptr %7, align 8, !dbg !171
  %24 = getelementptr [256 x i32], ptr %5, i64 0, i64 %23, !dbg !171
  %25 = load i64, ptr %9, align 8, !dbg !171
  %26 = trunc i64 %25 to i32, !dbg !171
  store i32 %26, ptr %24, align 4, !dbg !171
  %27 = load i64, ptr %7, align 8, !dbg !172
  %28 = add i64 %27, 1, !dbg !172
  store i64 %28, ptr %7, align 8, !dbg !172
  br label %block_4, !dbg !172

block_6:                                          ; preds = %block_4
  %29 = load i64, ptr %7, align 8, !dbg !173
  store i64 0, ptr %10, align 8, !dbg !173
  br label %block_7, !dbg !173

block_7:                                          ; preds = %block_9, %block_6
  %30 = load i64, ptr %10, align 8, !dbg !173
  %31 = icmp ult i64 %30, %29, !dbg !173
  br i1 %31, label %block_8, label %block_10, !dbg !173

block_8:                                          ; preds = %block_7
  call void @llvm.dbg.declare(metadata ptr %10, metadata !174, metadata !DIExpression()), !dbg !173
  %32 = load ptr, ptr %2, align 8, !dbg !175
  %33 = load i64, ptr %7, align 8, !dbg !175
  %34 = load i64, ptr %10, align 8, !dbg !175
  %35 = sub i64 %33, %34, !dbg !175
  %36 = sub i64 %35, 1, !dbg !175
  %37 = getelementptr [256 x i32], ptr %5, i64 0, i64 %36, !dbg !175
  %38 = load i32, ptr %37, align 4, !dbg !175
  call void @"__array_add@*[]u32_u32_@void"(ptr %32, i32 %38), !dbg !175
  br label %block_9, !dbg !175

block_9:                                          ; preds = %block_8
  %39 = load i64, ptr %10, align 8, !dbg !175
  %40 = add i64 %39, 1, !dbg !175
  store i64 %40, ptr %10, align 8, !dbg !175
  br label %block_7, !dbg !175

block_10:                                         ; preds = %block_7
  ret void, !dbg !176
}

define void @__io_format_int(ptr %0, i64 %1) !dbg !177 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %7, i8 0, i32 1, i1 false)
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %10, i8 0, i32 4, i1 false)
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !180
  call void @llvm.dbg.value(metadata ptr %2, metadata !181, metadata !DIExpression()), !dbg !180
  store i64 %1, ptr %3, align 8, !dbg !180
  call void @llvm.dbg.value(metadata ptr %3, metadata !182, metadata !DIExpression()), !dbg !180
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !183
  call void @llvm.dbg.declare(metadata ptr %5, metadata !184, metadata !DIExpression()), !dbg !183
  %12 = load i64, ptr %3, align 8, !dbg !185
  store i64 %12, ptr %6, align 8, !dbg !185
  call void @llvm.dbg.declare(metadata ptr %6, metadata !186, metadata !DIExpression()), !dbg !185
  %13 = load i64, ptr %6, align 8, !dbg !187
  %14 = icmp eq i64 %13, 0, !dbg !187
  br i1 %14, label %block_1, label %block_2, !dbg !187

block_1:                                          ; preds = %block_0
  %15 = load ptr, ptr %2, align 8, !dbg !188
  call void @"__array_add@*[]u32_u32_@void"(ptr %15, i32 48), !dbg !188
  ret void, !dbg !189

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !189

block_3:                                          ; preds = %block_2
  store i1 false, ptr %7, align 1, !dbg !190
  call void @llvm.dbg.declare(metadata ptr %7, metadata !191, metadata !DIExpression()), !dbg !190
  %16 = load i64, ptr %6, align 8, !dbg !193
  %17 = icmp slt i64 %16, 0, !dbg !193
  br i1 %17, label %block_4, label %block_5, !dbg !193

block_4:                                          ; preds = %block_3
  %18 = load i64, ptr %6, align 8, !dbg !194
  %19 = sub i64 0, %18, !dbg !194
  store i64 %19, ptr %6, align 8, !dbg !194
  store i1 true, ptr %7, align 1, !dbg !195
  br label %block_6, !dbg !195

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !195

block_6:                                          ; preds = %block_5, %block_4
  store i64 0, ptr %8, align 8, !dbg !196
  call void @llvm.dbg.declare(metadata ptr %8, metadata !197, metadata !DIExpression()), !dbg !196
  br label %block_7, !dbg !198

block_7:                                          ; preds = %block_8, %block_6
  %20 = load i64, ptr %6, align 8, !dbg !198
  %21 = icmp sgt i64 %20, 0, !dbg !198
  br i1 %21, label %block_8, label %block_9, !dbg !198

block_8:                                          ; preds = %block_7
  %22 = load i64, ptr %6, align 8, !dbg !199
  %23 = srem i64 %22, 10, !dbg !199
  store i64 %23, ptr %9, align 8, !dbg !199
  call void @llvm.dbg.declare(metadata ptr %9, metadata !200, metadata !DIExpression()), !dbg !199
  %24 = load i64, ptr %6, align 8, !dbg !201
  %25 = sdiv i64 %24, 10, !dbg !201
  store i64 %25, ptr %6, align 8, !dbg !201
  %26 = load i64, ptr %9, align 8, !dbg !202
  %27 = trunc i64 %26 to i8, !dbg !202
  %28 = zext i8 %27 to i32, !dbg !202
  %29 = add i32 48, %28, !dbg !202
  store i32 %29, ptr %10, align 4, !dbg !202
  call void @llvm.dbg.declare(metadata ptr %10, metadata !203, metadata !DIExpression()), !dbg !202
  %30 = load i64, ptr %8, align 8, !dbg !204
  %31 = getelementptr [256 x i32], ptr %5, i64 0, i64 %30, !dbg !204
  %32 = load i32, ptr %10, align 4, !dbg !204
  store i32 %32, ptr %31, align 4, !dbg !204
  %33 = load i64, ptr %8, align 8, !dbg !205
  %34 = add i64 %33, 1, !dbg !205
  store i64 %34, ptr %8, align 8, !dbg !205
  br label %block_7, !dbg !205

block_9:                                          ; preds = %block_7
  %35 = load i1, ptr %7, align 1, !dbg !206
  br i1 %35, label %block_10, label %block_11, !dbg !206

block_10:                                         ; preds = %block_9
  %36 = load ptr, ptr %2, align 8, !dbg !206
  call void @"__array_add@*[]u32_u32_@void"(ptr %36, i32 45), !dbg !206
  br label %block_12, !dbg !206

block_11:                                         ; preds = %block_9
  br label %block_12, !dbg !206

block_12:                                         ; preds = %block_11, %block_10
  %37 = load i64, ptr %8, align 8, !dbg !207
  store i64 0, ptr %11, align 8, !dbg !207
  br label %block_13, !dbg !207

block_13:                                         ; preds = %block_15, %block_12
  %38 = load i64, ptr %11, align 8, !dbg !207
  %39 = icmp ult i64 %38, %37, !dbg !207
  br i1 %39, label %block_14, label %block_16, !dbg !207

block_14:                                         ; preds = %block_13
  call void @llvm.dbg.declare(metadata ptr %11, metadata !208, metadata !DIExpression()), !dbg !207
  %40 = load ptr, ptr %2, align 8, !dbg !209
  %41 = load i64, ptr %8, align 8, !dbg !209
  %42 = load i64, ptr %11, align 8, !dbg !209
  %43 = sub i64 %41, %42, !dbg !209
  %44 = sub i64 %43, 1, !dbg !209
  %45 = getelementptr [256 x i32], ptr %5, i64 0, i64 %44, !dbg !209
  %46 = load i32, ptr %45, align 4, !dbg !209
  call void @"__array_add@*[]u32_u32_@void"(ptr %40, i32 %46), !dbg !209
  br label %block_15, !dbg !209

block_15:                                         ; preds = %block_14
  %47 = load i64, ptr %11, align 8, !dbg !209
  %48 = add i64 %47, 1, !dbg !209
  store i64 %48, ptr %11, align 8, !dbg !209
  br label %block_13, !dbg !209

block_16:                                         ; preds = %block_13
  ret void, !dbg !210
}

define void @__io_print_typetype(ptr %0, ptr %1) !dbg !211 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 48, i1 false)
  %4 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  %5 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  %6 = alloca %string.461, align 8
  %7 = alloca %slice.519, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca i64, align 8
  %10 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 48, i1 false)
  %11 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  %12 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca %string.461, align 8
  %14 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 48, i1 false)
  %15 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  %16 = alloca %string.461, align 8
  %17 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 48, i1 false)
  %18 = alloca %string.461, align 8
  %19 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 48, i1 false)
  %20 = alloca %string.461, align 8
  %21 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 48, i1 false)
  %22 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %22, i8 0, i32 16, i1 false)
  %23 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %23, i8 0, i32 16, i1 false)
  %24 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %24, i8 0, i32 16, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !285
  call void @llvm.dbg.value(metadata ptr %2, metadata !286, metadata !DIExpression()), !dbg !285
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 48, i1 false), !dbg !285
  call void @llvm.dbg.value(metadata ptr %3, metadata !287, metadata !DIExpression()), !dbg !285
  %25 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 0, !dbg !288
  %26 = load i64, ptr %25, align 8, !dbg !288
  switch i64 %26, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_4
    i64 3, label %block_15
    i64 4, label %block_16
    i64 5, label %block_17
    i64 6, label %block_18
    i64 7, label %block_19
    i64 8, label %block_20
    i64 9, label %block_21
  ], !dbg !288

block_2:                                          ; preds = %block_0
  %27 = load ptr, ptr %2, align 8, !dbg !289
  %28 = alloca %string.461, align 8, !dbg !289
  %String = getelementptr inbounds %string.461, ptr %28, i32 0, i32 0, !dbg !289
  %Size = getelementptr inbounds %string.461, ptr %28, i32 0, i32 1, !dbg !289
  store ptr @___asan_gen__anon_global, ptr %String, align 8, !dbg !289
  store i64 7, ptr %Size, align 8, !dbg !289
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %28, i64 16, i1 false), !dbg !289
  call void @__io_push_string(ptr %27, ptr %4), !dbg !289
  br label %block_1, !dbg !289

block_3:                                          ; preds = %block_0
  %29 = load ptr, ptr %2, align 8, !dbg !290
  %30 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !290
  %31 = getelementptr inbounds %__init_BasicType.463, ptr %30, i32 0, i32 3, !dbg !290
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %31, i64 16, i1 false), !dbg !290
  call void @__io_push_string(ptr %29, ptr %5), !dbg !290
  br label %block_1, !dbg !290

block_4:                                          ; preds = %block_0
  %32 = load ptr, ptr %2, align 8, !dbg !291
  %33 = alloca %string.461, align 8, !dbg !291
  %String1 = getelementptr inbounds %string.461, ptr %33, i32 0, i32 0, !dbg !291
  %Size2 = getelementptr inbounds %string.461, ptr %33, i32 0, i32 1, !dbg !291
  store ptr @___asan_gen__anon_global.21, ptr %String1, align 8, !dbg !291
  store i64 3, ptr %Size2, align 8, !dbg !291
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %33, i64 16, i1 false), !dbg !291
  call void @__io_push_string(ptr %32, ptr %6), !dbg !291
  %34 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !292
  %35 = getelementptr inbounds %__init_FunctionType.466, ptr %34, i32 0, i32 1, !dbg !292
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %35, i64 16, i1 false), !dbg !292
  call void @llvm.dbg.declare(metadata ptr %7, metadata !293, metadata !DIExpression()), !dbg !292
  %36 = getelementptr inbounds %slice.519, ptr %7, i32 0, i32 0, !dbg !294
  %37 = load i64, ptr %36, align 8, !dbg !294
  store i64 0, ptr %8, align 8, !dbg !294
  br label %block_5, !dbg !294

block_5:                                          ; preds = %block_7, %block_4
  %38 = load i64, ptr %8, align 8, !dbg !294
  %39 = icmp ult i64 %38, %37, !dbg !294
  br i1 %39, label %block_6, label %block_8, !dbg !294

block_6:                                          ; preds = %block_5
  %40 = load i64, ptr %8, align 8, !dbg !294
  %41 = getelementptr inbounds %slice.519, ptr %7, i32 0, i32 1, !dbg !294
  %42 = load ptr, ptr %41, align 8, !dbg !294
  %43 = getelementptr i64, ptr %42, i64 %40, !dbg !294
  %44 = load i64, ptr %43, align 8, !dbg !294
  store i64 %44, ptr %9, align 8, !dbg !294
  call void @llvm.dbg.declare(metadata ptr %9, metadata !295, metadata !DIExpression()), !dbg !294
  call void @llvm.dbg.declare(metadata ptr %8, metadata !296, metadata !DIExpression()), !dbg !294
  %45 = load ptr, ptr %2, align 8, !dbg !297
  %46 = load i64, ptr %9, align 8, !dbg !297
  %47 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !297
  %48 = getelementptr %__init_TypeInfo.474, ptr %47, i64 %46, !dbg !297
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %48, i64 48, i1 false), !dbg !297
  call void @__io_print_typetype(ptr %45, ptr %10), !dbg !297
  %49 = load i64, ptr %8, align 8, !dbg !298
  %50 = add i64 %49, 1, !dbg !298
  %51 = getelementptr inbounds %slice.519, ptr %7, i32 0, i32 0, !dbg !298
  %52 = load i64, ptr %51, align 8, !dbg !298
  %53 = icmp ne i64 %50, %52, !dbg !298
  br i1 %53, label %block_9, label %block_10, !dbg !298

block_9:                                          ; preds = %block_6
  %54 = load ptr, ptr %2, align 8, !dbg !299
  %55 = alloca %string.461, align 8, !dbg !299
  %String3 = getelementptr inbounds %string.461, ptr %55, i32 0, i32 0, !dbg !299
  %Size4 = getelementptr inbounds %string.461, ptr %55, i32 0, i32 1, !dbg !299
  store ptr @___asan_gen__anon_global.23, ptr %String3, align 8, !dbg !299
  store i64 2, ptr %Size4, align 8, !dbg !299
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %55, i64 16, i1 false), !dbg !299
  call void @__io_push_string(ptr %54, ptr %11), !dbg !299
  br label %block_11, !dbg !299

block_10:                                         ; preds = %block_6
  br label %block_11, !dbg !299

block_11:                                         ; preds = %block_10, %block_9
  br label %block_7, !dbg !299

block_7:                                          ; preds = %block_11
  %56 = load i64, ptr %8, align 8, !dbg !299
  %57 = add i64 %56, 1, !dbg !299
  store i64 %57, ptr %8, align 8, !dbg !299
  br label %block_5, !dbg !299

block_8:                                          ; preds = %block_5
  %58 = load ptr, ptr %2, align 8, !dbg !300
  %59 = alloca %string.461, align 8, !dbg !300
  %String5 = getelementptr inbounds %string.461, ptr %59, i32 0, i32 0, !dbg !300
  %Size6 = getelementptr inbounds %string.461, ptr %59, i32 0, i32 1, !dbg !300
  store ptr @___asan_gen__anon_global.25, ptr %String5, align 8, !dbg !300
  store i64 1, ptr %Size6, align 8, !dbg !300
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %59, i64 16, i1 false), !dbg !300
  call void @__io_push_string(ptr %58, ptr %12), !dbg !300
  %60 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !301
  %61 = getelementptr inbounds %__init_FunctionType.466, ptr %60, i32 0, i32 0, !dbg !301
  %62 = load i64, ptr %61, align 8, !dbg !301
  %63 = load i64, ptr @__init_INVALID_TYPE, align 8, !dbg !301
  %64 = icmp ne i64 %62, %63, !dbg !301
  br i1 %64, label %block_12, label %block_13, !dbg !301

block_12:                                         ; preds = %block_8
  %65 = load ptr, ptr %2, align 8, !dbg !302
  %66 = alloca %string.461, align 8, !dbg !302
  %String7 = getelementptr inbounds %string.461, ptr %66, i32 0, i32 0, !dbg !302
  %Size8 = getelementptr inbounds %string.461, ptr %66, i32 0, i32 1, !dbg !302
  store ptr @___asan_gen__anon_global.27, ptr %String7, align 8, !dbg !302
  store i64 4, ptr %Size8, align 8, !dbg !302
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %66, i64 16, i1 false), !dbg !302
  call void @__io_push_string(ptr %65, ptr %13), !dbg !302
  %67 = load ptr, ptr %2, align 8, !dbg !303
  %68 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !303
  %69 = getelementptr inbounds %__init_FunctionType.466, ptr %68, i32 0, i32 0, !dbg !303
  %70 = load i64, ptr %69, align 8, !dbg !303
  %71 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !303
  %72 = getelementptr %__init_TypeInfo.474, ptr %71, i64 %70, !dbg !303
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %72, i64 48, i1 false), !dbg !303
  call void @__io_print_typetype(ptr %67, ptr %14), !dbg !303
  br label %block_14, !dbg !303

block_13:                                         ; preds = %block_8
  br label %block_14, !dbg !303

block_14:                                         ; preds = %block_13, %block_12
  br label %block_1, !dbg !303

block_15:                                         ; preds = %block_0
  %73 = load ptr, ptr %2, align 8, !dbg !304
  %74 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !304
  %75 = getelementptr inbounds %__init_StructType.465, ptr %74, i32 0, i32 1, !dbg !304
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %75, i64 16, i1 false), !dbg !304
  call void @__io_push_string(ptr %73, ptr %15), !dbg !304
  br label %block_1, !dbg !304

block_16:                                         ; preds = %block_0
  %76 = load ptr, ptr %2, align 8, !dbg !305
  %77 = alloca %string.461, align 8, !dbg !305
  %String9 = getelementptr inbounds %string.461, ptr %77, i32 0, i32 0, !dbg !305
  %Size10 = getelementptr inbounds %string.461, ptr %77, i32 0, i32 1, !dbg !305
  store ptr @___asan_gen__anon_global.29, ptr %String9, align 8, !dbg !305
  store i64 1, ptr %Size10, align 8, !dbg !305
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %77, i64 16, i1 false), !dbg !305
  call void @__io_push_string(ptr %76, ptr %16), !dbg !305
  %78 = load ptr, ptr %2, align 8, !dbg !306
  %79 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !306
  %80 = getelementptr inbounds %__init_PointerType.467, ptr %79, i32 0, i32 0, !dbg !306
  %81 = load i64, ptr %80, align 8, !dbg !306
  %82 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !306
  %83 = getelementptr %__init_TypeInfo.474, ptr %82, i64 %81, !dbg !306
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %83, i64 48, i1 false), !dbg !306
  call void @__io_print_typetype(ptr %78, ptr %17), !dbg !306
  br label %block_1, !dbg !306

block_17:                                         ; preds = %block_0
  %84 = load ptr, ptr %2, align 8, !dbg !307
  %85 = alloca %string.461, align 8, !dbg !307
  %String11 = getelementptr inbounds %string.461, ptr %85, i32 0, i32 0, !dbg !307
  %Size12 = getelementptr inbounds %string.461, ptr %85, i32 0, i32 1, !dbg !307
  store ptr @___asan_gen__anon_global.31, ptr %String11, align 8, !dbg !307
  store i64 3, ptr %Size12, align 8, !dbg !307
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %85, i64 16, i1 false), !dbg !307
  call void @__io_push_string(ptr %84, ptr %18), !dbg !307
  %86 = load ptr, ptr %2, align 8, !dbg !308
  %87 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !308
  %88 = getelementptr inbounds %__init_ArrayType.468, ptr %87, i32 0, i32 0, !dbg !308
  %89 = load i64, ptr %88, align 8, !dbg !308
  %90 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !308
  %91 = getelementptr %__init_TypeInfo.474, ptr %90, i64 %89, !dbg !308
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %91, i64 48, i1 false), !dbg !308
  call void @__io_print_typetype(ptr %86, ptr %19), !dbg !308
  br label %block_1, !dbg !308

block_18:                                         ; preds = %block_0
  %92 = load ptr, ptr %2, align 8, !dbg !309
  %93 = alloca %string.461, align 8, !dbg !309
  %String13 = getelementptr inbounds %string.461, ptr %93, i32 0, i32 0, !dbg !309
  %Size14 = getelementptr inbounds %string.461, ptr %93, i32 0, i32 1, !dbg !309
  store ptr @___asan_gen__anon_global.33, ptr %String13, align 8, !dbg !309
  store i64 2, ptr %Size14, align 8, !dbg !309
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %93, i64 16, i1 false), !dbg !309
  call void @__io_push_string(ptr %92, ptr %20), !dbg !309
  %94 = load ptr, ptr %2, align 8, !dbg !310
  %95 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !310
  %96 = getelementptr inbounds %__init_SliceType.469, ptr %95, i32 0, i32 0, !dbg !310
  %97 = load i64, ptr %96, align 8, !dbg !310
  %98 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !310
  %99 = getelementptr %__init_TypeInfo.474, ptr %98, i64 %97, !dbg !310
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %99, i64 48, i1 false), !dbg !310
  call void @__io_print_typetype(ptr %94, ptr %21), !dbg !310
  br label %block_1, !dbg !310

block_19:                                         ; preds = %block_0
  %100 = load ptr, ptr %2, align 8, !dbg !311
  %101 = alloca %string.461, align 8, !dbg !311
  %String15 = getelementptr inbounds %string.461, ptr %101, i32 0, i32 0, !dbg !311
  %Size16 = getelementptr inbounds %string.461, ptr %101, i32 0, i32 1, !dbg !311
  store ptr @___asan_gen__anon_global.35, ptr %String15, align 8, !dbg !311
  store i64 2, ptr %Size16, align 8, !dbg !311
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr align 8 %101, i64 16, i1 false), !dbg !311
  call void @__io_push_string(ptr %100, ptr %22), !dbg !311
  br label %block_1, !dbg !311

block_20:                                         ; preds = %block_0
  %102 = load ptr, ptr %2, align 8, !dbg !312
  %103 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !312
  %104 = getelementptr inbounds %__init_EnumType.470, ptr %103, i32 0, i32 0, !dbg !312
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %104, i64 16, i1 false), !dbg !312
  call void @__io_push_string(ptr %102, ptr %23), !dbg !312
  br label %block_1, !dbg !312

block_21:                                         ; preds = %block_0
  %105 = load ptr, ptr %2, align 8, !dbg !313
  %106 = getelementptr inbounds %__init_TypeInfo.474, ptr %3, i32 0, i32 1, !dbg !313
  %107 = getelementptr inbounds %__init_GenericType.472, ptr %106, i32 0, i32 0, !dbg !313
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %107, i64 16, i1 false), !dbg !313
  call void @__io_push_string(ptr %105, ptr %24), !dbg !313
  br label %block_1, !dbg !313

block_1:                                          ; preds = %block_21, %block_20, %block_19, %block_18, %block_17, %block_16, %block_15, %block_14, %block_3, %block_2, %block_0
  ret void, !dbg !314
}

define void @__io_print_type(ptr %0, ptr %1) !dbg !315 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %__init_Arg.462, align 8
  %4 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 48, i1 false)
  %5 = alloca %__init_BasicType.463, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 32, i1 false)
  %6 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  %7 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  %8 = alloca %string.461, align 8
  %9 = alloca %string.461, align 8
  %10 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  %12 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  %13 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  %14 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 8, i1 false)
  %19 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 8, i1 false)
  %20 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 8, i1 false)
  %21 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %21, i8 0, i32 4, i1 false)
  %22 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %22, i8 0, i32 8, i1 false)
  %23 = alloca i64, align 8
  %24 = alloca %__init_TypeInfo.474, align 8
  %25 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %23, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %24, i8 0, i32 48, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %25, i8 0, i32 48, i1 false)
  %26 = alloca %__init_StructType.465, align 8
  %27 = alloca %string.461, align 8
  %28 = alloca %string.461, align 8
  %29 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %26, i8 0, i32 40, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %27, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %28, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %29, i8 0, i32 8, i1 false)
  %30 = alloca %__init_StructMember.464, align 8
  %31 = alloca %slice.526, align 8
  %32 = alloca [1 x %__init_Arg.462], align 8
  %33 = alloca %string.461, align 8
  %34 = alloca %string.461, align 8
  %35 = alloca %string.461, align 8
  %36 = alloca %string.461, align 8
  %37 = alloca ptr, align 8
  %38 = alloca %__init_StructType.465, align 8
  %39 = alloca i64, align 8
  %40 = alloca %__init_Arg.462, align 8
  %41 = alloca %__init_Arg.462, align 8
  %42 = alloca %__init_Arg.462, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %30, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %31, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %32, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %33, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %34, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %35, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %36, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %37, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %38, i8 0, i32 40, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %39, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %40, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %41, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %42, i8 0, i32 16, i1 false)
  %43 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %43, i8 0, i32 16, i1 false)
  %44 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %44, i8 0, i32 16, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !322
  call void @llvm.dbg.value(metadata ptr %2, metadata !323, metadata !DIExpression()), !dbg !322
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !322
  call void @llvm.dbg.value(metadata ptr %3, metadata !324, metadata !DIExpression()), !dbg !322
  %45 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 0, !dbg !325
  %46 = load i64, ptr %45, align 8, !dbg !325
  %47 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !325
  %48 = getelementptr %__init_TypeInfo.474, ptr %47, i64 %46, !dbg !325
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %48, i64 48, i1 false), !dbg !325
  call void @llvm.dbg.declare(metadata ptr %4, metadata !326, metadata !DIExpression()), !dbg !325
  %49 = getelementptr inbounds %__init_TypeInfo.474, ptr %4, i32 0, i32 0, !dbg !327
  %50 = load i64, ptr %49, align 8, !dbg !327
  switch i64 %50, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_52
    i64 3, label %block_53
    i64 4, label %block_61
    i64 5, label %block_62
    i64 6, label %block_63
    i64 7, label %block_64
    i64 8, label %block_65
    i64 9, label %block_66
  ], !dbg !327

block_2:                                          ; preds = %block_0
  br label %block_1, !dbg !327

block_3:                                          ; preds = %block_0
  %51 = getelementptr inbounds %__init_TypeInfo.474, ptr %4, i32 0, i32 1, !dbg !328
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %51, i64 32, i1 false), !dbg !328
  call void @llvm.dbg.declare(metadata ptr %5, metadata !329, metadata !DIExpression()), !dbg !328
  %52 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !330
  %53 = load i64, ptr %52, align 8, !dbg !330
  %54 = icmp eq i64 %53, 0, !dbg !330
  br i1 %54, label %block_4, label %block_5, !dbg !330

block_4:                                          ; preds = %block_3
  %55 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !331
  %56 = load ptr, ptr %55, align 8, !dbg !331
  %57 = load i1, ptr %56, align 1, !dbg !331
  br i1 %57, label %block_7, label %block_8, !dbg !331

block_7:                                          ; preds = %block_4
  %58 = load ptr, ptr %2, align 8, !dbg !332
  %59 = alloca %string.461, align 8, !dbg !332
  %String = getelementptr inbounds %string.461, ptr %59, i32 0, i32 0, !dbg !332
  %Size = getelementptr inbounds %string.461, ptr %59, i32 0, i32 1, !dbg !332
  store ptr @___asan_gen__anon_global.37, ptr %String, align 8, !dbg !332
  store i64 4, ptr %Size, align 8, !dbg !332
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %59, i64 16, i1 false), !dbg !332
  call void @__io_push_string(ptr %58, ptr %6), !dbg !332
  br label %block_9, !dbg !332

block_8:                                          ; preds = %block_4
  %60 = load ptr, ptr %2, align 8, !dbg !333
  %61 = alloca %string.461, align 8, !dbg !333
  %String1 = getelementptr inbounds %string.461, ptr %61, i32 0, i32 0, !dbg !333
  %Size2 = getelementptr inbounds %string.461, ptr %61, i32 0, i32 1, !dbg !333
  store ptr @___asan_gen__anon_global.39, ptr %String1, align 8, !dbg !333
  store i64 5, ptr %Size2, align 8, !dbg !333
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %61, i64 16, i1 false), !dbg !333
  call void @__io_push_string(ptr %60, ptr %7), !dbg !333
  br label %block_9, !dbg !333

block_9:                                          ; preds = %block_8, %block_7
  br label %block_6, !dbg !333

block_5:                                          ; preds = %block_3
  %62 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !334
  %63 = load i64, ptr %62, align 8, !dbg !334
  %64 = icmp eq i64 %63, 1, !dbg !334
  br i1 %64, label %block_10, label %block_11, !dbg !334

block_10:                                         ; preds = %block_5
  %65 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !335
  %66 = load ptr, ptr %65, align 8, !dbg !335
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %66, i64 16, i1 false), !dbg !335
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !335
  call void @llvm.dbg.declare(metadata ptr %9, metadata !336, metadata !DIExpression()), !dbg !335
  %67 = load ptr, ptr %2, align 8, !dbg !337
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %9, i64 16, i1 false), !dbg !337
  call void @__io_push_string(ptr %67, ptr %10), !dbg !337
  br label %block_12, !dbg !337

block_11:                                         ; preds = %block_5
  %68 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !338
  %69 = load i64, ptr %68, align 8, !dbg !338
  %70 = icmp eq i64 %69, 2, !dbg !338
  br i1 %70, label %block_13, label %block_14, !dbg !338

block_13:                                         ; preds = %block_11
  %71 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !339
  %72 = load ptr, ptr %71, align 8, !dbg !339
  %73 = load i8, ptr %72, align 1, !dbg !339
  %74 = zext i8 %73 to i64, !dbg !339
  store i64 %74, ptr %11, align 8, !dbg !339
  call void @llvm.dbg.declare(metadata ptr %11, metadata !340, metadata !DIExpression()), !dbg !339
  %75 = load ptr, ptr %2, align 8, !dbg !341
  %76 = load i64, ptr %11, align 8, !dbg !341
  call void @__io_format_uint(ptr %75, i64 %76), !dbg !341
  br label %block_15, !dbg !341

block_14:                                         ; preds = %block_11
  %77 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !342
  %78 = load i64, ptr %77, align 8, !dbg !342
  %79 = icmp eq i64 %78, 3, !dbg !342
  br i1 %79, label %block_16, label %block_17, !dbg !342

block_16:                                         ; preds = %block_14
  %80 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !343
  %81 = load ptr, ptr %80, align 8, !dbg !343
  %82 = load i16, ptr %81, align 2, !dbg !343
  %83 = zext i16 %82 to i64, !dbg !343
  store i64 %83, ptr %12, align 8, !dbg !343
  call void @llvm.dbg.declare(metadata ptr %12, metadata !344, metadata !DIExpression()), !dbg !343
  %84 = load ptr, ptr %2, align 8, !dbg !345
  %85 = load i64, ptr %12, align 8, !dbg !345
  call void @__io_format_uint(ptr %84, i64 %85), !dbg !345
  br label %block_18, !dbg !345

block_17:                                         ; preds = %block_14
  %86 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !346
  %87 = load i64, ptr %86, align 8, !dbg !346
  %88 = icmp eq i64 %87, 4, !dbg !346
  br i1 %88, label %block_19, label %block_20, !dbg !346

block_19:                                         ; preds = %block_17
  %89 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !347
  %90 = load ptr, ptr %89, align 8, !dbg !347
  %91 = load i32, ptr %90, align 4, !dbg !347
  %92 = zext i32 %91 to i64, !dbg !347
  store i64 %92, ptr %13, align 8, !dbg !347
  call void @llvm.dbg.declare(metadata ptr %13, metadata !348, metadata !DIExpression()), !dbg !347
  %93 = load ptr, ptr %2, align 8, !dbg !349
  %94 = load i64, ptr %13, align 8, !dbg !349
  call void @__io_format_uint(ptr %93, i64 %94), !dbg !349
  br label %block_21, !dbg !349

block_20:                                         ; preds = %block_17
  %95 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !350
  %96 = load i64, ptr %95, align 8, !dbg !350
  %97 = icmp eq i64 %96, 5, !dbg !350
  br i1 %97, label %block_22, label %block_23, !dbg !350

block_22:                                         ; preds = %block_20
  %98 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !351
  %99 = load ptr, ptr %98, align 8, !dbg !351
  %100 = load i64, ptr %99, align 8, !dbg !351
  store i64 %100, ptr %14, align 8, !dbg !351
  call void @llvm.dbg.declare(metadata ptr %14, metadata !352, metadata !DIExpression()), !dbg !351
  %101 = load ptr, ptr %2, align 8, !dbg !353
  %102 = load i64, ptr %14, align 8, !dbg !353
  call void @__io_format_uint(ptr %101, i64 %102), !dbg !353
  br label %block_24, !dbg !353

block_23:                                         ; preds = %block_20
  %103 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !354
  %104 = load i64, ptr %103, align 8, !dbg !354
  %105 = icmp eq i64 %104, 6, !dbg !354
  br i1 %105, label %block_25, label %block_26, !dbg !354

block_25:                                         ; preds = %block_23
  %106 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !355
  %107 = load ptr, ptr %106, align 8, !dbg !355
  %108 = load i8, ptr %107, align 1, !dbg !355
  %109 = sext i8 %108 to i64, !dbg !355
  store i64 %109, ptr %15, align 8, !dbg !355
  call void @llvm.dbg.declare(metadata ptr %15, metadata !356, metadata !DIExpression()), !dbg !355
  %110 = load ptr, ptr %2, align 8, !dbg !357
  %111 = load i64, ptr %15, align 8, !dbg !357
  call void @__io_format_int(ptr %110, i64 %111), !dbg !357
  br label %block_27, !dbg !357

block_26:                                         ; preds = %block_23
  %112 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !358
  %113 = load i64, ptr %112, align 8, !dbg !358
  %114 = icmp eq i64 %113, 7, !dbg !358
  br i1 %114, label %block_28, label %block_29, !dbg !358

block_28:                                         ; preds = %block_26
  %115 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !359
  %116 = load ptr, ptr %115, align 8, !dbg !359
  %117 = load i16, ptr %116, align 2, !dbg !359
  %118 = sext i16 %117 to i64, !dbg !359
  store i64 %118, ptr %16, align 8, !dbg !359
  call void @llvm.dbg.declare(metadata ptr %16, metadata !360, metadata !DIExpression()), !dbg !359
  %119 = load ptr, ptr %2, align 8, !dbg !361
  %120 = load i64, ptr %16, align 8, !dbg !361
  call void @__io_format_int(ptr %119, i64 %120), !dbg !361
  br label %block_30, !dbg !361

block_29:                                         ; preds = %block_26
  %121 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !362
  %122 = load i64, ptr %121, align 8, !dbg !362
  %123 = icmp eq i64 %122, 8, !dbg !362
  br i1 %123, label %block_31, label %block_32, !dbg !362

block_31:                                         ; preds = %block_29
  %124 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !363
  %125 = load ptr, ptr %124, align 8, !dbg !363
  %126 = load i32, ptr %125, align 4, !dbg !363
  %127 = sext i32 %126 to i64, !dbg !363
  store i64 %127, ptr %17, align 8, !dbg !363
  call void @llvm.dbg.declare(metadata ptr %17, metadata !364, metadata !DIExpression()), !dbg !363
  %128 = load ptr, ptr %2, align 8, !dbg !365
  %129 = load i64, ptr %17, align 8, !dbg !365
  call void @__io_format_int(ptr %128, i64 %129), !dbg !365
  br label %block_33, !dbg !365

block_32:                                         ; preds = %block_29
  %130 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !366
  %131 = load i64, ptr %130, align 8, !dbg !366
  %132 = icmp eq i64 %131, 9, !dbg !366
  br i1 %132, label %block_34, label %block_35, !dbg !366

block_34:                                         ; preds = %block_32
  %133 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !367
  %134 = load ptr, ptr %133, align 8, !dbg !367
  %135 = load i64, ptr %134, align 8, !dbg !367
  store i64 %135, ptr %18, align 8, !dbg !367
  call void @llvm.dbg.declare(metadata ptr %18, metadata !368, metadata !DIExpression()), !dbg !367
  %136 = load ptr, ptr %2, align 8, !dbg !369
  %137 = load i64, ptr %18, align 8, !dbg !369
  call void @__io_format_int(ptr %136, i64 %137), !dbg !369
  br label %block_36, !dbg !369

block_35:                                         ; preds = %block_32
  %138 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !370
  %139 = load i64, ptr %138, align 8, !dbg !370
  %140 = icmp eq i64 %139, 14, !dbg !370
  br i1 %140, label %block_37, label %block_38, !dbg !370

block_37:                                         ; preds = %block_35
  %141 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !371
  %142 = load ptr, ptr %141, align 8, !dbg !371
  %143 = load i64, ptr %142, align 8, !dbg !371
  store i64 %143, ptr %19, align 8, !dbg !371
  call void @llvm.dbg.declare(metadata ptr %19, metadata !372, metadata !DIExpression()), !dbg !371
  %144 = load ptr, ptr %2, align 8, !dbg !373
  %145 = load i64, ptr %19, align 8, !dbg !373
  call void @__io_format_int(ptr %144, i64 %145), !dbg !373
  br label %block_39, !dbg !373

block_38:                                         ; preds = %block_35
  %146 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !374
  %147 = load i64, ptr %146, align 8, !dbg !374
  %148 = icmp eq i64 %147, 15, !dbg !374
  br i1 %148, label %block_40, label %block_41, !dbg !374

block_40:                                         ; preds = %block_38
  %149 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !375
  %150 = load ptr, ptr %149, align 8, !dbg !375
  %151 = load i64, ptr %150, align 8, !dbg !375
  store i64 %151, ptr %20, align 8, !dbg !375
  call void @llvm.dbg.declare(metadata ptr %20, metadata !376, metadata !DIExpression()), !dbg !375
  %152 = load ptr, ptr %2, align 8, !dbg !377
  %153 = load i64, ptr %20, align 8, !dbg !377
  call void @__io_format_uint(ptr %152, i64 %153), !dbg !377
  br label %block_42, !dbg !377

block_41:                                         ; preds = %block_38
  %154 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !378
  %155 = load i64, ptr %154, align 8, !dbg !378
  %156 = icmp eq i64 %155, 10, !dbg !378
  br i1 %156, label %block_43, label %block_44, !dbg !378

block_43:                                         ; preds = %block_41
  %157 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !379
  %158 = load ptr, ptr %157, align 8, !dbg !379
  %159 = load float, ptr %158, align 4, !dbg !379
  store float %159, ptr %21, align 4, !dbg !379
  call void @llvm.dbg.declare(metadata ptr %21, metadata !380, metadata !DIExpression()), !dbg !379
  %160 = load ptr, ptr %2, align 8, !dbg !382
  %161 = load float, ptr %21, align 4, !dbg !382
  call void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64 10, ptr %160, float %161, i32 100), !dbg !382
  br label %block_45, !dbg !382

block_44:                                         ; preds = %block_41
  %162 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !383
  %163 = load i64, ptr %162, align 8, !dbg !383
  %164 = icmp eq i64 %163, 11, !dbg !383
  br i1 %164, label %block_46, label %block_47, !dbg !383

block_46:                                         ; preds = %block_44
  %165 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !384
  %166 = load ptr, ptr %165, align 8, !dbg !384
  %167 = load double, ptr %166, align 8, !dbg !384
  store double %167, ptr %22, align 8, !dbg !384
  call void @llvm.dbg.declare(metadata ptr %22, metadata !385, metadata !DIExpression()), !dbg !384
  %168 = load ptr, ptr %2, align 8, !dbg !387
  %169 = load double, ptr %22, align 8, !dbg !387
  call void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64 11, ptr %168, double %169, i32 100), !dbg !387
  br label %block_48, !dbg !387

block_47:                                         ; preds = %block_44
  %170 = getelementptr inbounds %__init_BasicType.463, ptr %5, i32 0, i32 0, !dbg !388
  %171 = load i64, ptr %170, align 8, !dbg !388
  %172 = icmp eq i64 %171, 16, !dbg !388
  br i1 %172, label %block_49, label %block_50, !dbg !388

block_49:                                         ; preds = %block_47
  %173 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !389
  %174 = load ptr, ptr %173, align 8, !dbg !389
  %175 = load i64, ptr %174, align 8, !dbg !389
  store i64 %175, ptr %23, align 8, !dbg !389
  call void @llvm.dbg.declare(metadata ptr %23, metadata !390, metadata !DIExpression()), !dbg !389
  %176 = load i64, ptr %23, align 8, !dbg !391
  %177 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !391
  %178 = getelementptr %__init_TypeInfo.474, ptr %177, i64 %176, !dbg !391
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %178, i64 48, i1 false), !dbg !391
  call void @llvm.dbg.declare(metadata ptr %24, metadata !392, metadata !DIExpression()), !dbg !391
  %179 = load ptr, ptr %2, align 8, !dbg !393
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %24, i64 48, i1 false), !dbg !393
  call void @__io_print_typetype(ptr %179, ptr %25), !dbg !393
  br label %block_51, !dbg !393

block_50:                                         ; preds = %block_47
  %180 = load ptr, ptr %2, align 8, !dbg !394
  call void @"__array_add@*[]u32_u32_@void"(ptr %180, i32 37), !dbg !394
  br label %block_51, !dbg !394

block_51:                                         ; preds = %block_50, %block_49
  br label %block_48, !dbg !394

block_48:                                         ; preds = %block_51, %block_46
  br label %block_45, !dbg !394

block_45:                                         ; preds = %block_48, %block_43
  br label %block_42, !dbg !394

block_42:                                         ; preds = %block_45, %block_40
  br label %block_39, !dbg !394

block_39:                                         ; preds = %block_42, %block_37
  br label %block_36, !dbg !394

block_36:                                         ; preds = %block_39, %block_34
  br label %block_33, !dbg !394

block_33:                                         ; preds = %block_36, %block_31
  br label %block_30, !dbg !394

block_30:                                         ; preds = %block_33, %block_28
  br label %block_27, !dbg !394

block_27:                                         ; preds = %block_30, %block_25
  br label %block_24, !dbg !394

block_24:                                         ; preds = %block_27, %block_22
  br label %block_21, !dbg !394

block_21:                                         ; preds = %block_24, %block_19
  br label %block_18, !dbg !394

block_18:                                         ; preds = %block_21, %block_16
  br label %block_15, !dbg !394

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !394

block_12:                                         ; preds = %block_15, %block_10
  br label %block_6, !dbg !394

block_6:                                          ; preds = %block_12, %block_9
  br label %block_1, !dbg !394

block_52:                                         ; preds = %block_0
  br label %block_1, !dbg !394

block_53:                                         ; preds = %block_0
  %181 = getelementptr inbounds %__init_TypeInfo.474, ptr %4, i32 0, i32 1, !dbg !395
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %181, i64 40, i1 false), !dbg !395
  call void @llvm.dbg.declare(metadata ptr %26, metadata !396, metadata !DIExpression()), !dbg !395
  %182 = load ptr, ptr %2, align 8, !dbg !397
  %183 = getelementptr inbounds %__init_StructType.465, ptr %26, i32 0, i32 1, !dbg !397
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %183, i64 16, i1 false), !dbg !397
  call void @__io_push_string(ptr %182, ptr %27), !dbg !397
  %184 = load ptr, ptr %2, align 8, !dbg !398
  %185 = alloca %string.461, align 8, !dbg !398
  %String3 = getelementptr inbounds %string.461, ptr %185, i32 0, i32 0, !dbg !398
  %Size4 = getelementptr inbounds %string.461, ptr %185, i32 0, i32 1, !dbg !398
  store ptr @___asan_gen__anon_global.41, ptr %String3, align 8, !dbg !398
  store i64 3, ptr %Size4, align 8, !dbg !398
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %185, i64 16, i1 false), !dbg !398
  call void @__io_push_string(ptr %184, ptr %28), !dbg !398
  %186 = getelementptr inbounds %__init_StructType.465, ptr %26, i32 0, i32 0, !dbg !399
  %187 = getelementptr inbounds %slice.518, ptr %186, i32 0, i32 0, !dbg !399
  %188 = load i64, ptr %187, align 8, !dbg !399
  store i64 0, ptr %29, align 8, !dbg !399
  br label %block_54, !dbg !399

block_54:                                         ; preds = %block_56, %block_53
  %189 = load i64, ptr %29, align 8, !dbg !399
  %190 = icmp ult i64 %189, %188, !dbg !399
  br i1 %190, label %block_55, label %block_57, !dbg !399

block_55:                                         ; preds = %block_54
  call void @llvm.dbg.declare(metadata ptr %29, metadata !400, metadata !DIExpression()), !dbg !399
  %191 = getelementptr inbounds %__init_StructType.465, ptr %26, i32 0, i32 0, !dbg !401
  %192 = load i64, ptr %29, align 8, !dbg !401
  %193 = getelementptr inbounds %slice.518, ptr %191, i32 0, i32 1, !dbg !401
  %194 = load ptr, ptr %193, align 8, !dbg !401
  %195 = getelementptr %__init_StructMember.464, ptr %194, i64 %192, !dbg !401
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %195, i64 24, i1 false), !dbg !401
  call void @llvm.dbg.declare(metadata ptr %30, metadata !402, metadata !DIExpression()), !dbg !401
  %196 = getelementptr inbounds %slice.526, ptr %31, i32 0, i32 0, !dbg !406
  %197 = getelementptr inbounds %slice.526, ptr %31, i32 0, i32 1, !dbg !406
  store i64 1, ptr %196, align 8, !dbg !406
  store ptr %32, ptr %197, align 8, !dbg !406
  %198 = alloca %string.461, align 8, !dbg !406
  %String5 = getelementptr inbounds %string.461, ptr %198, i32 0, i32 0, !dbg !406
  %Size6 = getelementptr inbounds %string.461, ptr %198, i32 0, i32 1, !dbg !406
  store ptr @___asan_gen__anon_global.43, ptr %String5, align 8, !dbg !406
  store i64 7, ptr %Size6, align 8, !dbg !406
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %198, i64 16, i1 false), !dbg !406
  %199 = getelementptr inbounds %__init_StructMember.464, ptr %30, i32 0, i32 0, !dbg !406
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %199, i64 16, i1 false), !dbg !406
  %200 = getelementptr [1 x %__init_Arg.462], ptr %32, i64 0, i64 0, !dbg !406
  %201 = getelementptr inbounds %__init_Arg.462, ptr %200, i32 0, i32 0, !dbg !406
  %202 = getelementptr inbounds %__init_Arg.462, ptr %200, i32 0, i32 1, !dbg !406
  store i64 1, ptr %201, align 8, !dbg !406
  store ptr %34, ptr %202, align 8, !dbg !406
  call void @__io_print(ptr %33, ptr %31), !dbg !406
  %203 = load ptr, ptr %2, align 8, !dbg !407
  %204 = getelementptr inbounds %__init_StructMember.464, ptr %30, i32 0, i32 0, !dbg !407
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %204, i64 16, i1 false), !dbg !407
  call void @__io_push_string(ptr %203, ptr %35), !dbg !407
  %205 = load ptr, ptr %2, align 8, !dbg !408
  %206 = alloca %string.461, align 8, !dbg !408
  %String7 = getelementptr inbounds %string.461, ptr %206, i32 0, i32 0, !dbg !408
  %Size8 = getelementptr inbounds %string.461, ptr %206, i32 0, i32 1, !dbg !408
  store ptr @___asan_gen__anon_global.45, ptr %String7, align 8, !dbg !408
  store i64 3, ptr %Size8, align 8, !dbg !408
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %206, i64 16, i1 false), !dbg !408
  call void @__io_push_string(ptr %205, ptr %36), !dbg !408
  %207 = getelementptr inbounds %__init_Arg.462, ptr %3, i32 0, i32 1, !dbg !409
  %208 = load ptr, ptr %207, align 8, !dbg !409
  store ptr %208, ptr %37, align 8, !dbg !409
  call void @llvm.dbg.declare(metadata ptr %37, metadata !410, metadata !DIExpression()), !dbg !409
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %26, i64 40, i1 false), !dbg !411
  %209 = load i64, ptr %29, align 8, !dbg !411
  %210 = call i64 @__init_get_struct_member_offset(ptr %38, i64 %209), !dbg !411
  store i64 %210, ptr %39, align 8, !dbg !411
  call void @llvm.dbg.declare(metadata ptr %39, metadata !412, metadata !DIExpression()), !dbg !411
  %211 = getelementptr inbounds %__init_StructMember.464, ptr %30, i32 0, i32 1, !dbg !413
  %212 = load i64, ptr %211, align 8, !dbg !413
  %213 = getelementptr inbounds %__init_Arg.462, ptr %40, i32 0, i32 0, !dbg !413
  store i64 %212, ptr %213, align 8, !dbg !413
  %214 = load ptr, ptr %37, align 8, !dbg !413
  %215 = load i64, ptr %39, align 8, !dbg !413
  %216 = getelementptr i8, ptr %214, i64 %215, !dbg !413
  %217 = getelementptr inbounds %__init_Arg.462, ptr %40, i32 0, i32 1, !dbg !413
  store ptr %216, ptr %217, align 8, !dbg !413
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %40, i64 16, i1 false), !dbg !413
  call void @llvm.dbg.declare(metadata ptr %41, metadata !414, metadata !DIExpression()), !dbg !413
  %218 = getelementptr inbounds %__init_Arg.462, ptr %41, i32 0, i32 0, !dbg !415
  %219 = getelementptr inbounds %__init_StructMember.464, ptr %30, i32 0, i32 1, !dbg !415
  %220 = load i64, ptr %219, align 8, !dbg !415
  store i64 %220, ptr %218, align 8, !dbg !415
  %221 = load ptr, ptr %2, align 8, !dbg !416
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %41, i64 16, i1 false), !dbg !416
  call void @__io_print_type(ptr %221, ptr %42), !dbg !416
  %222 = load i64, ptr %29, align 8, !dbg !417
  %223 = add i64 %222, 1, !dbg !417
  %224 = getelementptr inbounds %__init_StructType.465, ptr %26, i32 0, i32 0, !dbg !417
  %225 = getelementptr inbounds %slice.518, ptr %224, i32 0, i32 0, !dbg !417
  %226 = load i64, ptr %225, align 8, !dbg !417
  %227 = icmp ne i64 %223, %226, !dbg !417
  br i1 %227, label %block_58, label %block_59, !dbg !417

block_58:                                         ; preds = %block_55
  %228 = load ptr, ptr %2, align 8, !dbg !418
  %229 = alloca %string.461, align 8, !dbg !418
  %String9 = getelementptr inbounds %string.461, ptr %229, i32 0, i32 0, !dbg !418
  %Size10 = getelementptr inbounds %string.461, ptr %229, i32 0, i32 1, !dbg !418
  store ptr @___asan_gen__anon_global.47, ptr %String9, align 8, !dbg !418
  store i64 2, ptr %Size10, align 8, !dbg !418
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %43, ptr align 8 %229, i64 16, i1 false), !dbg !418
  call void @__io_push_string(ptr %228, ptr %43), !dbg !418
  br label %block_60, !dbg !418

block_59:                                         ; preds = %block_55
  br label %block_60, !dbg !418

block_60:                                         ; preds = %block_59, %block_58
  br label %block_56, !dbg !418

block_56:                                         ; preds = %block_60
  %230 = load i64, ptr %29, align 8, !dbg !418
  %231 = add i64 %230, 1, !dbg !418
  store i64 %231, ptr %29, align 8, !dbg !418
  br label %block_54, !dbg !418

block_57:                                         ; preds = %block_54
  %232 = load ptr, ptr %2, align 8, !dbg !419
  %233 = alloca %string.461, align 8, !dbg !419
  %String11 = getelementptr inbounds %string.461, ptr %233, i32 0, i32 0, !dbg !419
  %Size12 = getelementptr inbounds %string.461, ptr %233, i32 0, i32 1, !dbg !419
  store ptr @___asan_gen__anon_global.49, ptr %String11, align 8, !dbg !419
  store i64 2, ptr %Size12, align 8, !dbg !419
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %44, ptr align 8 %233, i64 16, i1 false), !dbg !419
  call void @__io_push_string(ptr %232, ptr %44), !dbg !419
  br label %block_1, !dbg !419

block_61:                                         ; preds = %block_0
  br label %block_1, !dbg !419

block_62:                                         ; preds = %block_0
  br label %block_1, !dbg !419

block_63:                                         ; preds = %block_0
  br label %block_1, !dbg !419

block_64:                                         ; preds = %block_0
  br label %block_1, !dbg !419

block_65:                                         ; preds = %block_0
  br label %block_1, !dbg !419

block_66:                                         ; preds = %block_0
  br label %block_1, !dbg !419

block_1:                                          ; preds = %block_66, %block_65, %block_64, %block_63, %block_62, %block_61, %block_57, %block_52, %block_6, %block_2, %block_0
  ret void, !dbg !420
}

define void @__io_builder_to_string(ptr %0, ptr %1) !dbg !421 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca %__mem_Allocator.476, align 8
  %5 = alloca %__mem_Allocator.476, align 8
  %6 = alloca %slice.525, align 8
  %7 = alloca %slice.525, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  store ptr %1, ptr %2, align 8, !dbg !427
  call void @llvm.dbg.value(metadata ptr %2, metadata !428, metadata !DIExpression()), !dbg !427
  %12 = load ptr, ptr %2, align 8, !dbg !429
  store ptr %12, ptr %3, align 8, !dbg !429
  call void @llvm.dbg.declare(metadata ptr %3, metadata !430, metadata !DIExpression()), !dbg !429
  call void @__mem_create_generic_allocator(ptr %4), !dbg !431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %4, i64 24, i1 false), !dbg !431
  call void @llvm.dbg.declare(metadata ptr %5, metadata !432, metadata !DIExpression()), !dbg !431
  call void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr %6, i64 2, ptr %5), !dbg !446
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %6, i64 16, i1 false), !dbg !446
  call void @llvm.dbg.declare(metadata ptr %7, metadata !447, metadata !DIExpression()), !dbg !446
  %13 = load ptr, ptr %3, align 8, !dbg !448
  %14 = getelementptr inbounds %slice.524, ptr %13, i32 0, i32 0, !dbg !448
  %15 = load i64, ptr %14, align 8, !dbg !448
  store i64 0, ptr %8, align 8, !dbg !448
  br label %block_1, !dbg !448

block_1:                                          ; preds = %block_3, %block_0
  %16 = load i64, ptr %8, align 8, !dbg !448
  %17 = icmp ult i64 %16, %15, !dbg !448
  br i1 %17, label %block_2, label %block_4, !dbg !448

block_2:                                          ; preds = %block_1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !449, metadata !DIExpression()), !dbg !448
  %18 = load ptr, ptr %3, align 8, !dbg !450
  %19 = getelementptr inbounds %slice.524, ptr %18, i32 0, i32 1, !dbg !450
  %20 = load ptr, ptr %19, align 8, !dbg !450
  %21 = load i64, ptr %8, align 8, !dbg !450
  %22 = getelementptr i32, ptr %20, i64 %21, !dbg !450
  store ptr %22, ptr %9, align 8, !dbg !450
  call void @llvm.dbg.declare(metadata ptr %9, metadata !451, metadata !DIExpression()), !dbg !450
  %23 = load ptr, ptr %9, align 8, !dbg !452
  %24 = getelementptr i8, ptr %23, i64 3, !dbg !452
  store ptr %24, ptr %9, align 8, !dbg !452
  br label %block_5, !dbg !453

block_5:                                          ; preds = %block_6, %block_2
  %25 = load ptr, ptr %9, align 8, !dbg !453
  %26 = load i8, ptr %25, align 1, !dbg !453
  %27 = icmp eq i8 %26, 0, !dbg !453
  br i1 %27, label %block_6, label %block_7, !dbg !453

block_6:                                          ; preds = %block_5
  %28 = load ptr, ptr %9, align 8, !dbg !454
  %29 = getelementptr i8, ptr %28, i64 -1, !dbg !454
  store ptr %29, ptr %9, align 8, !dbg !454
  br label %block_5, !dbg !454

block_7:                                          ; preds = %block_5
  %30 = load ptr, ptr %9, align 8, !dbg !455
  %31 = call i64 @__str_get_codepoint_size(ptr %30), !dbg !455
  store i64 %31, ptr %10, align 8, !dbg !455
  call void @llvm.dbg.declare(metadata ptr %10, metadata !456, metadata !DIExpression()), !dbg !455
  %32 = load i64, ptr %10, align 8, !dbg !457
  store i64 0, ptr %11, align 8, !dbg !457
  br label %block_8, !dbg !457

block_8:                                          ; preds = %block_10, %block_7
  %33 = load i64, ptr %11, align 8, !dbg !457
  %34 = icmp ult i64 %33, %32, !dbg !457
  br i1 %34, label %block_9, label %block_11, !dbg !457

block_9:                                          ; preds = %block_8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !458, metadata !DIExpression()), !dbg !457
  %35 = load ptr, ptr %9, align 8, !dbg !459
  %36 = load i64, ptr %11, align 8, !dbg !459
  %37 = sub i64 0, %36, !dbg !459
  %38 = getelementptr i8, ptr %35, i64 %37, !dbg !459
  %39 = load i8, ptr %38, align 1, !dbg !459
  call void @"__array_add@*[]u8_u8_@void"(ptr %7, i8 %39), !dbg !459
  br label %block_10, !dbg !459

block_10:                                         ; preds = %block_9
  %40 = load i64, ptr %11, align 8, !dbg !459
  %41 = add i64 %40, 1, !dbg !459
  store i64 %41, ptr %11, align 8, !dbg !459
  br label %block_8, !dbg !459

block_11:                                         ; preds = %block_8
  br label %block_3, !dbg !459

block_3:                                          ; preds = %block_11
  %42 = load i64, ptr %8, align 8, !dbg !459
  %43 = add i64 %42, 1, !dbg !459
  store i64 %43, ptr %8, align 8, !dbg !459
  br label %block_1, !dbg !459

block_4:                                          ; preds = %block_1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !460
  ret void, !dbg !460
}

define void @__io_print_type_with_formatter(ptr %0, i32 %1, ptr %2) !dbg !461 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %__init_Arg.462, align 8
  %6 = alloca %__init_TypeInfo.474, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 48, i1 false)
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca %__init_Arg.462, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  store ptr %0, ptr %3, align 8, !dbg !464
  call void @llvm.dbg.value(metadata ptr %3, metadata !465, metadata !DIExpression()), !dbg !464
  store i32 %1, ptr %4, align 4, !dbg !464
  call void @llvm.dbg.value(metadata ptr %4, metadata !466, metadata !DIExpression()), !dbg !464
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !464
  call void @llvm.dbg.value(metadata ptr %5, metadata !467, metadata !DIExpression()), !dbg !464
  %10 = getelementptr inbounds %__init_Arg.462, ptr %5, i32 0, i32 0, !dbg !468
  %11 = load i64, ptr %10, align 8, !dbg !468
  %12 = load ptr, ptr getelementptr inbounds (%slice.523, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !468
  %13 = getelementptr %__init_TypeInfo.474, ptr %12, i64 %11, !dbg !468
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %13, i64 48, i1 false), !dbg !468
  call void @llvm.dbg.declare(metadata ptr %6, metadata !469, metadata !DIExpression()), !dbg !468
  %14 = load i32, ptr %4, align 4, !dbg !470
  %15 = icmp eq i32 %14, 115, !dbg !470
  %16 = getelementptr inbounds %__init_TypeInfo.474, ptr %6, i32 0, i32 0, !dbg !470
  %17 = load i64, ptr %16, align 8, !dbg !470
  %18 = icmp eq i64 %17, 4, !dbg !470
  %19 = icmp ne i1 %15, false, !dbg !470
  %20 = icmp ne i1 %18, false, !dbg !470
  %21 = and i1 %19, %20, !dbg !470
  %22 = getelementptr inbounds %__init_TypeInfo.474, ptr %6, i32 0, i32 1, !dbg !470
  %23 = getelementptr inbounds %__init_PointerType.467, ptr %22, i32 0, i32 0, !dbg !470
  %24 = load i64, ptr %23, align 8, !dbg !470
  %25 = icmp eq i64 %24, 2, !dbg !470
  %26 = icmp ne i1 %21, false, !dbg !470
  %27 = icmp ne i1 %25, false, !dbg !470
  %28 = and i1 %26, %27, !dbg !470
  br i1 %28, label %block_1, label %block_2, !dbg !470

block_1:                                          ; preds = %block_0
  %29 = getelementptr inbounds %__init_Arg.462, ptr %5, i32 0, i32 1, !dbg !471
  %30 = load ptr, ptr %29, align 8, !dbg !471
  %31 = load ptr, ptr %30, align 8, !dbg !471
  store ptr %31, ptr %7, align 8, !dbg !471
  call void @llvm.dbg.declare(metadata ptr %7, metadata !472, metadata !DIExpression()), !dbg !471
  store i64 0, ptr %8, align 8, !dbg !473
  call void @llvm.dbg.declare(metadata ptr %8, metadata !474, metadata !DIExpression()), !dbg !473
  br label %block_4, !dbg !473

block_4:                                          ; preds = %block_6, %block_1
  %32 = load ptr, ptr %7, align 8, !dbg !473
  %33 = load i64, ptr %8, align 8, !dbg !473
  %34 = getelementptr i8, ptr %32, i64 %33, !dbg !473
  %35 = load i8, ptr %34, align 1, !dbg !473
  %36 = zext i8 %35 to i32, !dbg !473
  %37 = icmp ne i32 %36, 0, !dbg !473
  br i1 %37, label %block_5, label %block_7, !dbg !473

block_5:                                          ; preds = %block_4
  %38 = load ptr, ptr %3, align 8, !dbg !475
  %39 = load ptr, ptr %7, align 8, !dbg !475
  %40 = load i64, ptr %8, align 8, !dbg !475
  %41 = getelementptr i8, ptr %39, i64 %40, !dbg !475
  %42 = load i8, ptr %41, align 1, !dbg !475
  %43 = zext i8 %42 to i32, !dbg !475
  call void @"__array_add@*[]u32_u32_@void"(ptr %38, i32 %43), !dbg !475
  br label %block_6, !dbg !475

block_6:                                          ; preds = %block_5
  %44 = load i64, ptr %8, align 8, !dbg !475
  %45 = add i64 %44, 1, !dbg !475
  store i64 %45, ptr %8, align 8, !dbg !475
  %46 = load i64, ptr %8, align 8, !dbg !475
  br label %block_4, !dbg !475

block_7:                                          ; preds = %block_4
  br label %block_3, !dbg !475

block_2:                                          ; preds = %block_0
  %47 = load ptr, ptr %3, align 8, !dbg !476
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %5, i64 16, i1 false), !dbg !476
  call void @__io_print_type(ptr %47, ptr %9), !dbg !476
  %48 = load ptr, ptr %3, align 8, !dbg !477
  %49 = load i32, ptr %4, align 4, !dbg !477
  call void @"__array_add@*[]u32_u32_@void"(ptr %48, i32 %49), !dbg !477
  br label %block_3, !dbg !477

block_3:                                          ; preds = %block_2, %block_7
  ret void, !dbg !478
}

define void @__io___internal_print(ptr %0, ptr %1, ptr %2) !dbg !479 {
block_0:
  %3 = alloca %string.461, align 8
  %4 = alloca %slice.526, align 8
  %5 = alloca %__mem_Allocator.476, align 8
  %6 = alloca %__mem_Allocator.476, align 8
  %7 = alloca %slice.524, align 8
  %8 = alloca %slice.524, align 8
  %9 = alloca i64, align 8
  %10 = alloca i1, align 1
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 1, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  %13 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca %__init_Arg.462, align 8
  %15 = alloca %__init_Arg.462, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  %16 = alloca %__init_Arg.462, align 8
  %17 = alloca %__init_Arg.462, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !486
  call void @llvm.dbg.value(metadata ptr %3, metadata !487, metadata !DIExpression()), !dbg !486
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !486
  call void @llvm.dbg.value(metadata ptr %4, metadata !488, metadata !DIExpression()), !dbg !486
  call void @__mem_create_generic_allocator(ptr %5), !dbg !489
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %5, i64 24, i1 false), !dbg !489
  call void @llvm.dbg.declare(metadata ptr %6, metadata !490, metadata !DIExpression()), !dbg !489
  call void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr %7, i64 4, ptr %6), !dbg !491
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !491
  call void @llvm.dbg.declare(metadata ptr %8, metadata !492, metadata !DIExpression()), !dbg !491
  store i64 0, ptr %9, align 8, !dbg !493
  call void @llvm.dbg.declare(metadata ptr %9, metadata !494, metadata !DIExpression()), !dbg !493
  store i1 false, ptr %10, align 1, !dbg !495
  call void @llvm.dbg.declare(metadata ptr %10, metadata !496, metadata !DIExpression()), !dbg !495
  %18 = getelementptr inbounds %string.461, ptr %3, i32 0, i32 1, !dbg !497
  %19 = load i64, ptr %18, align 8, !dbg !497
  %20 = getelementptr inbounds %string.461, ptr %3, i32 0, i32 0, !dbg !497
  %21 = load ptr, ptr %20, align 8, !dbg !497
  store ptr %21, ptr %11, align 8, !dbg !497
  store i64 0, ptr %12, align 8, !dbg !497
  br label %block_1, !dbg !497

block_1:                                          ; preds = %block_3, %block_0
  %22 = load i64, ptr %12, align 8, !dbg !497
  %23 = icmp ult i64 %22, %19, !dbg !497
  br i1 %23, label %block_2, label %block_4, !dbg !497

block_2:                                          ; preds = %block_1
  %24 = load ptr, ptr %11, align 8, !dbg !497
  %25 = call i32 @__str_deref(ptr %24), !dbg !497
  store i32 %25, ptr %13, align 4, !dbg !497
  call void @llvm.dbg.declare(metadata ptr %13, metadata !498, metadata !DIExpression()), !dbg !497
  call void @llvm.dbg.declare(metadata ptr %12, metadata !499, metadata !DIExpression()), !dbg !497
  %26 = load i32, ptr %13, align 4, !dbg !500
  %27 = icmp eq i32 %26, 37, !dbg !500
  br i1 %27, label %block_5, label %block_6, !dbg !500

block_5:                                          ; preds = %block_2
  store i1 true, ptr %10, align 1, !dbg !501
  br label %block_7, !dbg !501

block_6:                                          ; preds = %block_2
  %28 = load i1, ptr %10, align 1, !dbg !502
  br i1 %28, label %block_8, label %block_9, !dbg !502

block_8:                                          ; preds = %block_6
  %29 = load i64, ptr %9, align 8, !dbg !503
  %30 = getelementptr inbounds %slice.526, ptr %4, i32 0, i32 1, !dbg !503
  %31 = load ptr, ptr %30, align 8, !dbg !503
  %32 = getelementptr %__init_Arg.462, ptr %31, i64 %29, !dbg !503
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %32, i64 16, i1 false), !dbg !503
  call void @llvm.dbg.declare(metadata ptr %14, metadata !504, metadata !DIExpression()), !dbg !503
  %33 = load i64, ptr %9, align 8, !dbg !505
  %34 = add i64 %33, 1, !dbg !505
  store i64 %34, ptr %9, align 8, !dbg !505
  %35 = load i32, ptr %13, align 4, !dbg !506
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %14, i64 16, i1 false), !dbg !506
  call void @__io_print_type_with_formatter(ptr %8, i32 %35, ptr %15), !dbg !506
  store i1 false, ptr %10, align 1, !dbg !507
  br label %block_10, !dbg !507

block_9:                                          ; preds = %block_6
  %36 = load i32, ptr %13, align 4, !dbg !508
  call void @"__array_add@*[]u32_u32_@void"(ptr %8, i32 %36), !dbg !508
  br label %block_10, !dbg !508

block_10:                                         ; preds = %block_9, %block_8
  br label %block_7, !dbg !508

block_7:                                          ; preds = %block_10, %block_5
  br label %block_3, !dbg !508

block_3:                                          ; preds = %block_7
  %37 = load i64, ptr %12, align 8, !dbg !508
  %38 = add i64 %37, 1, !dbg !508
  store i64 %38, ptr %12, align 8, !dbg !508
  %39 = load ptr, ptr %11, align 8, !dbg !508
  %40 = call ptr @__str__it_advance(ptr %39, i64 %19, i64 %37), !dbg !508
  store ptr %40, ptr %11, align 8, !dbg !508
  br label %block_1, !dbg !508

block_4:                                          ; preds = %block_1
  %41 = load i1, ptr %10, align 1, !dbg !509
  br i1 %41, label %block_11, label %block_12, !dbg !509

block_11:                                         ; preds = %block_4
  %42 = load i64, ptr %9, align 8, !dbg !510
  %43 = getelementptr inbounds %slice.526, ptr %4, i32 0, i32 1, !dbg !510
  %44 = load ptr, ptr %43, align 8, !dbg !510
  %45 = getelementptr %__init_Arg.462, ptr %44, i64 %42, !dbg !510
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %45, i64 16, i1 false), !dbg !510
  call void @llvm.dbg.declare(metadata ptr %16, metadata !511, metadata !DIExpression()), !dbg !510
  %46 = load i64, ptr %9, align 8, !dbg !512
  %47 = add i64 %46, 1, !dbg !512
  store i64 %47, ptr %9, align 8, !dbg !512
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %16, i64 16, i1 false), !dbg !513
  call void @__io_print_type_with_formatter(ptr %8, i32 0, ptr %17), !dbg !513
  store i1 false, ptr %10, align 1, !dbg !514
  br label %block_13, !dbg !514

block_12:                                         ; preds = %block_4
  br label %block_13, !dbg !514

block_13:                                         ; preds = %block_12, %block_11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !515
  ret void, !dbg !515
}

define void @__io_print(ptr %0, ptr %1) !dbg !516 {
block_0:
  %2 = alloca %string.461, align 8
  %3 = alloca %slice.526, align 8
  %4 = alloca %slice.524, align 8
  %5 = alloca %string.461, align 8
  %6 = alloca %slice.524, align 8
  %7 = alloca %slice.525, align 8
  %8 = alloca %slice.525, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !519
  call void @llvm.dbg.value(metadata ptr %2, metadata !520, metadata !DIExpression()), !dbg !519
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !519
  call void @llvm.dbg.value(metadata ptr %3, metadata !521, metadata !DIExpression()), !dbg !519
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !522
  call void @__io___internal_print(ptr %4, ptr %5, ptr %3), !dbg !522
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !522
  call void @llvm.dbg.declare(metadata ptr %6, metadata !523, metadata !DIExpression()), !dbg !522
  call void @__io_builder_to_string(ptr %7, ptr %6), !dbg !524
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !524
  call void @llvm.dbg.declare(metadata ptr %8, metadata !525, metadata !DIExpression()), !dbg !524
  %9 = getelementptr inbounds %slice.525, ptr %8, i32 0, i32 1, !dbg !526
  %10 = load ptr, ptr %9, align 8, !dbg !526
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !526
  %12 = getelementptr inbounds %slice.525, ptr %8, i32 0, i32 0, !dbg !526
  %13 = load i64, ptr %12, align 8, !dbg !526
  %14 = trunc i64 %13 to i32, !dbg !526
  call void @__os_print(ptr %11, i32 %14), !dbg !526
  call void @"__array_free@*[]u32_@void"(ptr %6), !dbg !527
  call void @"__array_free@*[]u8_@void"(ptr %8), !dbg !528
  ret void, !dbg !529
}

define void @__io_println(ptr %0, ptr %1) !dbg !530 {
block_0:
  %2 = alloca %string.461, align 8
  %3 = alloca %slice.526, align 8
  %4 = alloca %slice.524, align 8
  %5 = alloca %string.461, align 8
  %6 = alloca %slice.524, align 8
  %7 = alloca %slice.525, align 8
  %8 = alloca %slice.525, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !531
  call void @llvm.dbg.value(metadata ptr %2, metadata !532, metadata !DIExpression()), !dbg !531
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !531
  call void @llvm.dbg.value(metadata ptr %3, metadata !533, metadata !DIExpression()), !dbg !531
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !534
  call void @__io___internal_print(ptr %4, ptr %5, ptr %3), !dbg !534
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !534
  call void @llvm.dbg.declare(metadata ptr %6, metadata !535, metadata !DIExpression()), !dbg !534
  call void @"__array_add@*[]u32_u32_@void"(ptr %6, i32 10), !dbg !536
  call void @__io_builder_to_string(ptr %7, ptr %6), !dbg !537
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !537
  call void @llvm.dbg.declare(metadata ptr %8, metadata !538, metadata !DIExpression()), !dbg !537
  %9 = getelementptr inbounds %slice.525, ptr %8, i32 0, i32 1, !dbg !539
  %10 = load ptr, ptr %9, align 8, !dbg !539
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !539
  %12 = getelementptr inbounds %slice.525, ptr %8, i32 0, i32 0, !dbg !539
  %13 = load i64, ptr %12, align 8, !dbg !539
  %14 = trunc i64 %13 to i32, !dbg !539
  call void @__os_print(ptr %11, i32 %14), !dbg !539
  call void @"__array_free@*[]u32_@void"(ptr %6), !dbg !540
  call void @"__array_free@*[]u8_@void"(ptr %8), !dbg !541
  ret void, !dbg !542
}

define void @__io_readln(ptr %0, ptr %1, i32 %2) !dbg !543 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  %8 = alloca %string.461, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  store ptr %1, ptr %3, align 8, !dbg !546
  call void @llvm.dbg.value(metadata ptr %3, metadata !547, metadata !DIExpression()), !dbg !546
  store i32 %2, ptr %4, align 4, !dbg !546
  call void @llvm.dbg.value(metadata ptr %4, metadata !548, metadata !DIExpression()), !dbg !546
  %9 = load ptr, ptr %3, align 8, !dbg !549
  %10 = getelementptr inbounds %__mem_Allocator.476, ptr %9, i32 0, i32 0, !dbg !549
  %11 = load ptr, ptr %10, align 8, !dbg !549
  %12 = load i32, ptr %4, align 4, !dbg !549
  %13 = zext i32 %12 to i64, !dbg !549
  %14 = load ptr, ptr %3, align 8, !dbg !549
  %15 = call ptr %11(i64 %13, ptr %14), !dbg !549
  store ptr %15, ptr %5, align 8, !dbg !549
  call void @llvm.dbg.declare(metadata ptr %5, metadata !550, metadata !DIExpression()), !dbg !549
  %16 = load ptr, ptr %5, align 8, !dbg !551
  %17 = icmp eq ptr %16, null, !dbg !551
  br i1 %17, label %block_1, label %block_2, !dbg !551

block_1:                                          ; preds = %block_0
  %18 = alloca %string.461, align 8, !dbg !552
  %String = getelementptr inbounds %string.461, ptr %18, i32 0, i32 0, !dbg !552
  %Size = getelementptr inbounds %string.461, ptr %18, i32 0, i32 1, !dbg !552
  store ptr @___asan_gen__anon_global.51, ptr %String, align 8, !dbg !552
  store i64 0, ptr %Size, align 8, !dbg !552
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %18, i64 16, i1 false), !dbg !552
  ret void, !dbg !552

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !552

block_3:                                          ; preds = %block_2
  %19 = load ptr, ptr %5, align 8, !dbg !553
  store ptr %19, ptr %6, align 8, !dbg !553
  call void @llvm.dbg.declare(metadata ptr %6, metadata !554, metadata !DIExpression()), !dbg !553
  %20 = load ptr, ptr %6, align 8, !dbg !555
  %21 = load i32, ptr %4, align 4, !dbg !555
  %22 = call i32 @__os_read_stdin_line(ptr %20, i32 %21), !dbg !555
  store i32 %22, ptr %7, align 4, !dbg !555
  call void @llvm.dbg.declare(metadata ptr %7, metadata !556, metadata !DIExpression()), !dbg !555
  %23 = load i32, ptr %7, align 4, !dbg !557
  %24 = icmp eq i32 %23, 0, !dbg !557
  br i1 %24, label %block_4, label %block_5, !dbg !557

block_4:                                          ; preds = %block_3
  %25 = alloca %string.461, align 8, !dbg !558
  %String1 = getelementptr inbounds %string.461, ptr %25, i32 0, i32 0, !dbg !558
  %Size2 = getelementptr inbounds %string.461, ptr %25, i32 0, i32 1, !dbg !558
  store ptr @___asan_gen__anon_global.53, ptr %String1, align 8, !dbg !558
  store i64 0, ptr %Size2, align 8, !dbg !558
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %25, i64 16, i1 false), !dbg !558
  ret void, !dbg !558

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !558

block_6:                                          ; preds = %block_5
  call void @llvm.dbg.declare(metadata ptr %8, metadata !559, metadata !DIExpression()), !dbg !560
  %26 = getelementptr inbounds %string.461, ptr %8, i32 0, i32 0, !dbg !561
  %27 = load ptr, ptr %6, align 8, !dbg !561
  store ptr %27, ptr %26, align 8, !dbg !561
  %28 = getelementptr inbounds %string.461, ptr %8, i32 0, i32 1, !dbg !562
  %29 = load i32, ptr %7, align 4, !dbg !562
  %30 = zext i32 %29 to i64, !dbg !562
  store i64 %30, ptr %28, align 8, !dbg !562
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !563
  ret void, !dbg !563
}

define i32 @__io_get_next(ptr %0) !dbg !564 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !567
  call void @llvm.dbg.value(metadata ptr %1, metadata !568, metadata !DIExpression()), !dbg !567
  %4 = load ptr, ptr %1, align 8, !dbg !569
  store ptr %4, ptr %2, align 8, !dbg !569
  call void @llvm.dbg.declare(metadata ptr %2, metadata !570, metadata !DIExpression()), !dbg !569
  %5 = load ptr, ptr %2, align 8, !dbg !571
  %6 = load i8, ptr %5, align 1, !dbg !571
  %7 = zext i8 %6 to i32, !dbg !571
  store i32 %7, ptr %3, align 4, !dbg !571
  call void @llvm.dbg.declare(metadata ptr %3, metadata !572, metadata !DIExpression()), !dbg !571
  br label %block_1, !dbg !573

block_1:                                          ; preds = %block_6, %block_0
  br label %block_2, !dbg !573

block_2:                                          ; preds = %block_1
  %8 = load ptr, ptr %2, align 8, !dbg !574
  %9 = load i8, ptr %8, align 1, !dbg !574
  %10 = and i8 %9, -128, !dbg !574
  %11 = icmp ne i8 %10, 0, !dbg !574
  br i1 %11, label %block_4, label %block_5, !dbg !574

block_4:                                          ; preds = %block_2
  %12 = load ptr, ptr %2, align 8, !dbg !575
  %13 = getelementptr i8, ptr %12, i64 1, !dbg !575
  store ptr %13, ptr %2, align 8, !dbg !575
  %14 = load i32, ptr %3, align 4, !dbg !576
  %15 = shl i32 %14, 8, !dbg !576
  %16 = load ptr, ptr %2, align 8, !dbg !576
  %17 = load i8, ptr %16, align 1, !dbg !576
  %18 = zext i8 %17 to i32, !dbg !576
  %19 = or i32 %15, %18, !dbg !576
  store i32 %19, ptr %3, align 4, !dbg !576
  br label %block_6, !dbg !576

block_5:                                          ; preds = %block_2
  %20 = load i32, ptr %3, align 4, !dbg !577
  ret i32 %20, !dbg !577

block_6:                                          ; preds = %block_4
  br label %block_1, !dbg !577

block_3:                                          ; No predecessors!
  %21 = load i32, ptr %3, align 4, !dbg !578
  ret i32 %21, !dbg !578
}

define void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64 %0, ptr %1, float %2, i32 %3) !dbg !579 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %11, i8 0, i32 4, i1 false)
  %12 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %12, i8 0, i32 1, i1 false)
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %14, i8 0, i32 4, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store i64 %0, ptr %4, align 8, !dbg !583
  call void @llvm.dbg.value(metadata ptr %4, metadata !584, metadata !DIExpression()), !dbg !583
  store ptr %1, ptr %5, align 8, !dbg !583
  call void @llvm.dbg.value(metadata ptr %5, metadata !585, metadata !DIExpression()), !dbg !583
  store float %2, ptr %6, align 4, !dbg !583
  call void @llvm.dbg.value(metadata ptr %6, metadata !586, metadata !DIExpression()), !dbg !583
  store i32 %3, ptr %7, align 4, !dbg !583
  call void @llvm.dbg.value(metadata ptr %7, metadata !587, metadata !DIExpression()), !dbg !583
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !588
  call void @llvm.dbg.declare(metadata ptr %9, metadata !589, metadata !DIExpression()), !dbg !588
  store i64 0, ptr %10, align 8, !dbg !590
  call void @llvm.dbg.declare(metadata ptr %10, metadata !591, metadata !DIExpression()), !dbg !590
  %16 = load float, ptr %6, align 4, !dbg !592
  store float %16, ptr %11, align 4, !dbg !592
  call void @llvm.dbg.declare(metadata ptr %11, metadata !593, metadata !DIExpression()), !dbg !592
  %17 = load i64, ptr %4, align 8, !dbg !594
  %18 = icmp ne i64 %17, 10, !dbg !594
  %19 = load i64, ptr %4, align 8, !dbg !594
  %20 = icmp ne i64 %19, 11, !dbg !594
  %21 = icmp ne i1 %18, false, !dbg !594
  %22 = icmp ne i1 %20, false, !dbg !594
  %23 = and i1 %21, %22, !dbg !594
  br i1 %23, label %block_1, label %block_2, !dbg !594

block_1:                                          ; preds = %block_0
  ret void, !dbg !595

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !595

block_3:                                          ; preds = %block_2
  %24 = load float, ptr %11, align 4, !dbg !596
  %25 = fcmp oeq float %24, 0.000000e+00, !dbg !596
  br i1 %25, label %block_4, label %block_5, !dbg !596

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !597
  call void @"__array_add@*[]u32_u32_@void"(ptr %26, i32 48), !dbg !597
  ret void, !dbg !598

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !598

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !599
  call void @llvm.dbg.declare(metadata ptr %12, metadata !600, metadata !DIExpression()), !dbg !599
  %27 = load float, ptr %11, align 4, !dbg !601
  %28 = fcmp olt float %27, 0.000000e+00, !dbg !601
  br i1 %28, label %block_7, label %block_8, !dbg !601

block_7:                                          ; preds = %block_6
  %29 = load float, ptr %11, align 4, !dbg !602
  %30 = fsub float 0.000000e+00, %29, !dbg !602
  store float %30, ptr %11, align 4, !dbg !602
  store i1 true, ptr %12, align 1, !dbg !603
  br label %block_9, !dbg !603

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !603

block_9:                                          ; preds = %block_8, %block_7
  %31 = load float, ptr %11, align 4, !dbg !604
  %32 = fadd float %31, 0x3F747AE140000000, !dbg !604
  store float %32, ptr %11, align 4, !dbg !604
  %33 = load float, ptr %11, align 4, !dbg !605
  %34 = fptosi float %33 to i32, !dbg !605
  store i32 %34, ptr %13, align 4, !dbg !605
  call void @llvm.dbg.declare(metadata ptr %13, metadata !606, metadata !DIExpression()), !dbg !605
  %35 = load float, ptr %11, align 4, !dbg !607
  %36 = load i32, ptr %7, align 4, !dbg !607
  %37 = sitofp i32 %36 to float, !dbg !607
  %38 = fmul float %35, %37, !dbg !607
  %39 = fptosi float %38 to i32, !dbg !607
  %40 = load i32, ptr %7, align 4, !dbg !607
  %41 = srem i32 %39, %40, !dbg !607
  store i32 %41, ptr %14, align 4, !dbg !607
  call void @llvm.dbg.declare(metadata ptr %14, metadata !608, metadata !DIExpression()), !dbg !607
  %42 = load i32, ptr %14, align 4, !dbg !609
  %43 = icmp eq i32 %42, 0, !dbg !609
  br i1 %43, label %block_10, label %block_11, !dbg !609

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !610
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !610
  store i32 48, ptr %45, align 4, !dbg !610
  %46 = load i64, ptr %10, align 8, !dbg !611
  %47 = add i64 %46, 1, !dbg !611
  store i64 %47, ptr %10, align 8, !dbg !611
  br label %block_12, !dbg !611

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !612

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !612
  %49 = icmp sgt i32 %48, 0, !dbg !612
  br i1 %49, label %block_14, label %block_15, !dbg !612

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !613
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !613
  %52 = load i32, ptr %14, align 4, !dbg !613
  %53 = srem i32 %52, 10, !dbg !613
  %54 = trunc i32 %53 to i8, !dbg !613
  %55 = zext i8 %54 to i32, !dbg !613
  %56 = add i32 48, %55, !dbg !613
  store i32 %56, ptr %51, align 4, !dbg !613
  %57 = load i64, ptr %10, align 8, !dbg !614
  %58 = add i64 %57, 1, !dbg !614
  store i64 %58, ptr %10, align 8, !dbg !614
  %59 = load i32, ptr %14, align 4, !dbg !615
  %60 = sdiv i32 %59, 10, !dbg !615
  store i32 %60, ptr %14, align 4, !dbg !615
  br label %block_13, !dbg !615

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !615

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !616
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !616
  store i32 46, ptr %62, align 4, !dbg !616
  %63 = load i64, ptr %10, align 8, !dbg !617
  %64 = add i64 %63, 1, !dbg !617
  store i64 %64, ptr %10, align 8, !dbg !617
  %65 = load i32, ptr %13, align 4, !dbg !618
  %66 = icmp eq i32 %65, 0, !dbg !618
  br i1 %66, label %block_16, label %block_17, !dbg !618

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !619
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !619
  store i32 48, ptr %68, align 4, !dbg !619
  %69 = load i64, ptr %10, align 8, !dbg !620
  %70 = add i64 %69, 1, !dbg !620
  store i64 %70, ptr %10, align 8, !dbg !620
  br label %block_18, !dbg !620

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !621

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !621
  %72 = icmp sgt i32 %71, 0, !dbg !621
  br i1 %72, label %block_20, label %block_21, !dbg !621

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !622
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !622
  %75 = load i32, ptr %13, align 4, !dbg !622
  %76 = srem i32 %75, 10, !dbg !622
  %77 = add i32 48, %76, !dbg !622
  store i32 %77, ptr %74, align 4, !dbg !622
  %78 = load i64, ptr %10, align 8, !dbg !623
  %79 = add i64 %78, 1, !dbg !623
  store i64 %79, ptr %10, align 8, !dbg !623
  %80 = load i32, ptr %13, align 4, !dbg !624
  %81 = sdiv i32 %80, 10, !dbg !624
  store i32 %81, ptr %13, align 4, !dbg !624
  br label %block_19, !dbg !624

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !624

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !625
  br i1 %82, label %block_22, label %block_23, !dbg !625

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !626
  call void @"__array_add@*[]u32_u32_@void"(ptr %83, i32 45), !dbg !626
  br label %block_24, !dbg !626

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !626

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !627
  store i64 0, ptr %15, align 8, !dbg !627
  br label %block_25, !dbg !627

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !627
  %86 = icmp ult i64 %85, %84, !dbg !627
  br i1 %86, label %block_26, label %block_28, !dbg !627

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !628, metadata !DIExpression()), !dbg !627
  %87 = load ptr, ptr %5, align 8, !dbg !629
  %88 = load i64, ptr %10, align 8, !dbg !629
  %89 = load i64, ptr %15, align 8, !dbg !629
  %90 = sub i64 %88, %89, !dbg !629
  %91 = sub i64 %90, 1, !dbg !629
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !629
  %93 = load i32, ptr %92, align 4, !dbg !629
  call void @"__array_add@*[]u32_u32_@void"(ptr %87, i32 %93), !dbg !629
  br label %block_27, !dbg !629

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !629
  %95 = add i64 %94, 1, !dbg !629
  store i64 %95, ptr %15, align 8, !dbg !629
  br label %block_25, !dbg !629

block_28:                                         ; preds = %block_25
  ret void, !dbg !630
}

define void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64 %0, ptr %1, double %2, i32 %3) !dbg !631 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  %12 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %12, i8 0, i32 1, i1 false)
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %14, i8 0, i32 4, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store i64 %0, ptr %4, align 8, !dbg !634
  call void @llvm.dbg.value(metadata ptr %4, metadata !635, metadata !DIExpression()), !dbg !634
  store ptr %1, ptr %5, align 8, !dbg !634
  call void @llvm.dbg.value(metadata ptr %5, metadata !636, metadata !DIExpression()), !dbg !634
  store double %2, ptr %6, align 8, !dbg !634
  call void @llvm.dbg.value(metadata ptr %6, metadata !637, metadata !DIExpression()), !dbg !634
  store i32 %3, ptr %7, align 4, !dbg !634
  call void @llvm.dbg.value(metadata ptr %7, metadata !638, metadata !DIExpression()), !dbg !634
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !639
  call void @llvm.dbg.declare(metadata ptr %9, metadata !640, metadata !DIExpression()), !dbg !639
  store i64 0, ptr %10, align 8, !dbg !641
  call void @llvm.dbg.declare(metadata ptr %10, metadata !642, metadata !DIExpression()), !dbg !641
  %16 = load double, ptr %6, align 8, !dbg !643
  store double %16, ptr %11, align 8, !dbg !643
  call void @llvm.dbg.declare(metadata ptr %11, metadata !644, metadata !DIExpression()), !dbg !643
  %17 = load i64, ptr %4, align 8, !dbg !645
  %18 = icmp ne i64 %17, 10, !dbg !645
  %19 = load i64, ptr %4, align 8, !dbg !645
  %20 = icmp ne i64 %19, 11, !dbg !645
  %21 = icmp ne i1 %18, false, !dbg !645
  %22 = icmp ne i1 %20, false, !dbg !645
  %23 = and i1 %21, %22, !dbg !645
  br i1 %23, label %block_1, label %block_2, !dbg !645

block_1:                                          ; preds = %block_0
  ret void, !dbg !646

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !646

block_3:                                          ; preds = %block_2
  %24 = load double, ptr %11, align 8, !dbg !647
  %25 = fcmp oeq double %24, 0.000000e+00, !dbg !647
  br i1 %25, label %block_4, label %block_5, !dbg !647

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !648
  call void @"__array_add@*[]u32_u32_@void"(ptr %26, i32 48), !dbg !648
  ret void, !dbg !649

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !649

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !650
  call void @llvm.dbg.declare(metadata ptr %12, metadata !651, metadata !DIExpression()), !dbg !650
  %27 = load double, ptr %11, align 8, !dbg !652
  %28 = fcmp olt double %27, 0.000000e+00, !dbg !652
  br i1 %28, label %block_7, label %block_8, !dbg !652

block_7:                                          ; preds = %block_6
  %29 = load double, ptr %11, align 8, !dbg !653
  %30 = fsub double 0.000000e+00, %29, !dbg !653
  store double %30, ptr %11, align 8, !dbg !653
  store i1 true, ptr %12, align 1, !dbg !654
  br label %block_9, !dbg !654

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !654

block_9:                                          ; preds = %block_8, %block_7
  %31 = load double, ptr %11, align 8, !dbg !655
  %32 = fadd double %31, 0x3F747AE140000000, !dbg !655
  store double %32, ptr %11, align 8, !dbg !655
  %33 = load double, ptr %11, align 8, !dbg !656
  %34 = fptosi double %33 to i32, !dbg !656
  store i32 %34, ptr %13, align 4, !dbg !656
  call void @llvm.dbg.declare(metadata ptr %13, metadata !657, metadata !DIExpression()), !dbg !656
  %35 = load double, ptr %11, align 8, !dbg !658
  %36 = load i32, ptr %7, align 4, !dbg !658
  %37 = sitofp i32 %36 to double, !dbg !658
  %38 = fmul double %35, %37, !dbg !658
  %39 = fptosi double %38 to i32, !dbg !658
  %40 = load i32, ptr %7, align 4, !dbg !658
  %41 = srem i32 %39, %40, !dbg !658
  store i32 %41, ptr %14, align 4, !dbg !658
  call void @llvm.dbg.declare(metadata ptr %14, metadata !659, metadata !DIExpression()), !dbg !658
  %42 = load i32, ptr %14, align 4, !dbg !660
  %43 = icmp eq i32 %42, 0, !dbg !660
  br i1 %43, label %block_10, label %block_11, !dbg !660

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !661
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !661
  store i32 48, ptr %45, align 4, !dbg !661
  %46 = load i64, ptr %10, align 8, !dbg !662
  %47 = add i64 %46, 1, !dbg !662
  store i64 %47, ptr %10, align 8, !dbg !662
  br label %block_12, !dbg !662

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !663

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !663
  %49 = icmp sgt i32 %48, 0, !dbg !663
  br i1 %49, label %block_14, label %block_15, !dbg !663

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !664
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !664
  %52 = load i32, ptr %14, align 4, !dbg !664
  %53 = srem i32 %52, 10, !dbg !664
  %54 = trunc i32 %53 to i8, !dbg !664
  %55 = zext i8 %54 to i32, !dbg !664
  %56 = add i32 48, %55, !dbg !664
  store i32 %56, ptr %51, align 4, !dbg !664
  %57 = load i64, ptr %10, align 8, !dbg !665
  %58 = add i64 %57, 1, !dbg !665
  store i64 %58, ptr %10, align 8, !dbg !665
  %59 = load i32, ptr %14, align 4, !dbg !666
  %60 = sdiv i32 %59, 10, !dbg !666
  store i32 %60, ptr %14, align 4, !dbg !666
  br label %block_13, !dbg !666

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !666

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !667
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !667
  store i32 46, ptr %62, align 4, !dbg !667
  %63 = load i64, ptr %10, align 8, !dbg !668
  %64 = add i64 %63, 1, !dbg !668
  store i64 %64, ptr %10, align 8, !dbg !668
  %65 = load i32, ptr %13, align 4, !dbg !669
  %66 = icmp eq i32 %65, 0, !dbg !669
  br i1 %66, label %block_16, label %block_17, !dbg !669

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !670
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !670
  store i32 48, ptr %68, align 4, !dbg !670
  %69 = load i64, ptr %10, align 8, !dbg !671
  %70 = add i64 %69, 1, !dbg !671
  store i64 %70, ptr %10, align 8, !dbg !671
  br label %block_18, !dbg !671

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !672

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !672
  %72 = icmp sgt i32 %71, 0, !dbg !672
  br i1 %72, label %block_20, label %block_21, !dbg !672

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !673
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !673
  %75 = load i32, ptr %13, align 4, !dbg !673
  %76 = srem i32 %75, 10, !dbg !673
  %77 = add i32 48, %76, !dbg !673
  store i32 %77, ptr %74, align 4, !dbg !673
  %78 = load i64, ptr %10, align 8, !dbg !674
  %79 = add i64 %78, 1, !dbg !674
  store i64 %79, ptr %10, align 8, !dbg !674
  %80 = load i32, ptr %13, align 4, !dbg !675
  %81 = sdiv i32 %80, 10, !dbg !675
  store i32 %81, ptr %13, align 4, !dbg !675
  br label %block_19, !dbg !675

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !675

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !676
  br i1 %82, label %block_22, label %block_23, !dbg !676

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !677
  call void @"__array_add@*[]u32_u32_@void"(ptr %83, i32 45), !dbg !677
  br label %block_24, !dbg !677

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !677

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !678
  store i64 0, ptr %15, align 8, !dbg !678
  br label %block_25, !dbg !678

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !678
  %86 = icmp ult i64 %85, %84, !dbg !678
  br i1 %86, label %block_26, label %block_28, !dbg !678

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !679, metadata !DIExpression()), !dbg !678
  %87 = load ptr, ptr %5, align 8, !dbg !680
  %88 = load i64, ptr %10, align 8, !dbg !680
  %89 = load i64, ptr %15, align 8, !dbg !680
  %90 = sub i64 %88, %89, !dbg !680
  %91 = sub i64 %90, 1, !dbg !680
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !680
  %93 = load i32, ptr %92, align 4, !dbg !680
  call void @"__array_add@*[]u32_u32_@void"(ptr %87, i32 %93), !dbg !680
  br label %block_27, !dbg !680

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !680
  %95 = add i64 %94, 1, !dbg !680
  store i64 %95, ptr %15, align 8, !dbg !680
  br label %block_25, !dbg !680

block_28:                                         ; preds = %block_25
  ret void, !dbg !681
}

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @__mem_arena_alloc(i64, ptr)

declare void @__mem_no_free(ptr, ptr)

declare void @__mem_create_scratch(ptr, i64)

declare void @__mem_destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_create@type_*__mem_Allocator_@[]__math_v3"(ptr, i64, ptr)

declare void @"__array_add@@@f32_f32_f32_@@*[]__math_v3_@@f32_f32_f32_@@__math_v3_@void"(ptr, ptr)

declare void @"__array_add@*[]u32_u32_@void"(ptr, i32)

declare void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr, i64, ptr)

declare void @"__array_add@*[]u8_u8_@void"(ptr, i8)

declare void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr, i64, ptr)

declare void @"__array_free@*[]u32_@void"(ptr)

declare void @"__array_free@*[]u8_@void"(ptr)

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @__asan_before_dynamic_init(i64)

declare void @__asan_after_dynamic_init()

declare void @__asan_register_globals(i64, i64)

declare void @__asan_unregister_globals(i64, i64)

declare void @__asan_register_image_globals(i64)

declare void @__asan_unregister_image_globals(i64)

declare void @__asan_register_elf_globals(i64, i64, i64)

declare void @__asan_unregister_elf_globals(i64, i64, i64)

declare void @__asan_init()

; Function Attrs: nounwind
define internal void @asan.module_ctor() #3 {
  call void @__asan_init()
  call void @__asan_version_mismatch_check_v8()
  ret void
}

declare void @__asan_version_mismatch_check_v8()

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!18}
!llvm.module.flags = !{!117, !118}

!0 = !{ptr @___asan_gen__anon_global}
!1 = !{ptr @___asan_gen__anon_global.21}
!2 = !{ptr @___asan_gen__anon_global.23}
!3 = !{ptr @___asan_gen__anon_global.25}
!4 = !{ptr @___asan_gen__anon_global.27}
!5 = !{ptr @___asan_gen__anon_global.29}
!6 = !{ptr @___asan_gen__anon_global.31}
!7 = !{ptr @___asan_gen__anon_global.33}
!8 = !{ptr @___asan_gen__anon_global.35}
!9 = !{ptr @___asan_gen__anon_global.37}
!10 = !{ptr @___asan_gen__anon_global.39}
!11 = !{ptr @___asan_gen__anon_global.41}
!12 = !{ptr @___asan_gen__anon_global.43}
!13 = !{ptr @___asan_gen__anon_global.45}
!14 = !{ptr @___asan_gen__anon_global.47}
!15 = !{ptr @___asan_gen__anon_global.49}
!16 = !{ptr @___asan_gen__anon_global.51}
!17 = !{ptr @___asan_gen__anon_global.53}
!18 = distinct !DICompileUnit(language: DW_LANG_C99, file: !19, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !20, splitDebugInlining: false)
!19 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!20 = !{!21, !33, !54, !63, !68, !72, !80, !87, !21, !33, !54, !63, !68, !72}
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !19, file: !19, size: 64, align: 64, elements: !22)
!22 = !{!23, !24, !25, !26, !27, !28, !29, !30, !31, !32}
!23 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!28 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!29 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!30 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!31 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!32 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !19, file: !19, size: 64, align: 64, elements: !34)
!34 = !{!35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53}
!35 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!40 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!41 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!42 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!43 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!44 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!45 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!46 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!47 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!48 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!49 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!50 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!51 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!52 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!53 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !19, file: !19, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62}
!56 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!61 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!62 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !19, file: !19, size: 32, align: 32, elements: !64)
!64 = !{!65, !66, !67}
!65 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !19, file: !19, size: 64, align: 64, elements: !69)
!69 = !{!70, !71}
!70 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !19, file: !19, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79}
!74 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!78 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!79 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_EventType", scope: !19, file: !19, size: 32, align: 32, elements: !81)
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "FIRST", value: 0)
!83 = !DIEnumerator(name: "QUIT", value: 256, isUnsigned: true)
!84 = !DIEnumerator(name: "MOUSE_MOTION", value: 1024, isUnsigned: true)
!85 = !DIEnumerator(name: "MOUSE_BUTTON_DOWN", value: 1025, isUnsigned: true)
!86 = !DIEnumerator(name: "MOUSE_BUTTON_UP", value: 1026, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_GLattr", scope: !19, file: !19, size: 32, align: 32, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116}
!89 = !DIEnumerator(name: "RED_SIZE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "GREEN_SIZE", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "BLUE_SIZE", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "ALPHA_SIZE", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "BUFFER_SIZE", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "DOUBLEBUFFER", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "DEPTH_SIZE", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "STENCIL_SIZE", value: 7, isUnsigned: true)
!97 = !DIEnumerator(name: "ACCUM_RED_SIZE", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "ACCUM_GREEN_SIZE", value: 9, isUnsigned: true)
!99 = !DIEnumerator(name: "ACCUM_BLUE_SIZE", value: 10, isUnsigned: true)
!100 = !DIEnumerator(name: "ACCUM_ALPHA_SIZE", value: 11, isUnsigned: true)
!101 = !DIEnumerator(name: "STEREO", value: 12, isUnsigned: true)
!102 = !DIEnumerator(name: "MULTISAMPLEBUFFERS", value: 13, isUnsigned: true)
!103 = !DIEnumerator(name: "MULTISAMPLESAMPLES", value: 14, isUnsigned: true)
!104 = !DIEnumerator(name: "ACCELERATED_VISUAL", value: 15, isUnsigned: true)
!105 = !DIEnumerator(name: "RETAINED_BACKING", value: 16, isUnsigned: true)
!106 = !DIEnumerator(name: "CONTEXT_MAJOR_VERSION", value: 17, isUnsigned: true)
!107 = !DIEnumerator(name: "CONTEXT_MINOR_VERSION", value: 18, isUnsigned: true)
!108 = !DIEnumerator(name: "CONTEXT_FLAGS", value: 19, isUnsigned: true)
!109 = !DIEnumerator(name: "CONTEXT_PROFILE_MASK", value: 20, isUnsigned: true)
!110 = !DIEnumerator(name: "SHARE_WITH_CURRENT_CONTEXT", value: 21, isUnsigned: true)
!111 = !DIEnumerator(name: "FRAMEBUFFER_SRGB_CAPABLE", value: 22, isUnsigned: true)
!112 = !DIEnumerator(name: "CONTEXT_RELEASE_BEHAVIOR", value: 23, isUnsigned: true)
!113 = !DIEnumerator(name: "CONTEXT_RESET_NOTIFICATION", value: 24, isUnsigned: true)
!114 = !DIEnumerator(name: "CONTEXT_NO_ERROR", value: 25, isUnsigned: true)
!115 = !DIEnumerator(name: "FLOATBUFFERS", value: 26, isUnsigned: true)
!116 = !DIEnumerator(name: "EGL_PLATFORM", value: 27, isUnsigned: true)
!117 = !{i32 2, !"CodeView", i32 1}
!118 = !{i32 2, !"Debug Info Version", i32 3}
!119 = distinct !DISubprogram(name: "push_string", linkageName: "__io_push_string", scope: !19, file: !19, line: 9, type: !120, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!120 = !DISubroutineType(types: !121)
!121 = !{null, !122, !130}
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u32", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DICompositeType(tag: DW_TAG_structure_type, scope: !19, file: !19, size: 128, align: 64, elements: !124)
!124 = !{!125, !127}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !19, file: !19, baseType: !126, size: 64, align: 64)
!126 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !19, file: !19, baseType: !128, size: 64, align: 64, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u32", baseType: !129, size: 64, align: 64, dwarfAddressSpace: 0)
!129 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!130 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !131, file: !131, size: 128, elements: !132)
!131 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!132 = !{!133, !136}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !131, file: !131, baseType: !134, size: 64, align: 64)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !135, size: 64, align: 64, dwarfAddressSpace: 0)
!135 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !131, file: !131, baseType: !126, size: 64, align: 64, offset: 64)
!137 = !{}
!138 = !DILocation(line: 9, scope: !119)
!139 = !DILocalVariable(name: "b", scope: !119, file: !19, line: 9, type: !122)
!140 = !DILocalVariable(name: "to_push", arg: 1, scope: !119, file: !19, line: 9, type: !130)
!141 = !DILocation(line: 10, scope: !119)
!142 = !DILocalVariable(name: "c", scope: !119, file: !19, line: 10, type: !129)
!143 = !DILocalVariable(name: "i", scope: !119, file: !19, line: 10, type: !126)
!144 = !DILocation(line: 11, scope: !119)
!145 = !DILocation(line: 13, scope: !119)
!146 = distinct !DISubprogram(name: "format_uint", linkageName: "__io_format_uint", scope: !19, file: !19, line: 15, type: !147, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !122, !149}
!149 = !DIBasicType(name: "uint", size: 64, encoding: DW_ATE_unsigned)
!150 = !DILocation(line: 15, scope: !146)
!151 = !DILocalVariable(name: "b", scope: !146, file: !19, line: 15, type: !122)
!152 = !DILocalVariable(name: "num_in", arg: 1, scope: !146, file: !19, line: 15, type: !149)
!153 = !DILocation(line: 16, scope: !146)
!154 = !DILocalVariable(name: "temp", scope: !146, file: !19, line: 16, type: !155)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 8192, align: 32, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 256, lowerBound: 0)
!158 = !DILocation(line: 17, scope: !146)
!159 = !DILocalVariable(name: "num", scope: !146, file: !19, line: 17, type: !149)
!160 = !DILocation(line: 18, scope: !146)
!161 = !DILocation(line: 19, scope: !146)
!162 = !DILocation(line: 20, scope: !146)
!163 = !DILocation(line: 23, scope: !146)
!164 = !DILocalVariable(name: "count", scope: !146, file: !19, line: 23, type: !126)
!165 = !DILocation(line: 24, scope: !146)
!166 = !DILocation(line: 25, scope: !146)
!167 = !DILocalVariable(name: "digit", scope: !146, file: !19, line: 25, type: !149)
!168 = !DILocation(line: 26, scope: !146)
!169 = !DILocation(line: 27, scope: !146)
!170 = !DILocalVariable(name: "c", scope: !146, file: !19, line: 27, type: !149)
!171 = !DILocation(line: 28, scope: !146)
!172 = !DILocation(line: 29, scope: !146)
!173 = !DILocation(line: 32, scope: !146)
!174 = !DILocalVariable(name: "i", scope: !146, file: !19, line: 32, type: !126)
!175 = !DILocation(line: 33, scope: !146)
!176 = !DILocation(line: 35, scope: !146)
!177 = distinct !DISubprogram(name: "format_int", linkageName: "__io_format_int", scope: !19, file: !19, line: 37, type: !178, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!178 = !DISubroutineType(types: !179)
!179 = !{null, !122, !126}
!180 = !DILocation(line: 37, scope: !177)
!181 = !DILocalVariable(name: "b", scope: !177, file: !19, line: 37, type: !122)
!182 = !DILocalVariable(name: "num_in", arg: 1, scope: !177, file: !19, line: 37, type: !126)
!183 = !DILocation(line: 38, scope: !177)
!184 = !DILocalVariable(name: "temp", scope: !177, file: !19, line: 38, type: !155)
!185 = !DILocation(line: 39, scope: !177)
!186 = !DILocalVariable(name: "num", scope: !177, file: !19, line: 39, type: !126)
!187 = !DILocation(line: 40, scope: !177)
!188 = !DILocation(line: 41, scope: !177)
!189 = !DILocation(line: 42, scope: !177)
!190 = !DILocation(line: 45, scope: !177)
!191 = !DILocalVariable(name: "is_neg", scope: !177, file: !19, line: 45, type: !192)
!192 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!193 = !DILocation(line: 46, scope: !177)
!194 = !DILocation(line: 47, scope: !177)
!195 = !DILocation(line: 48, scope: !177)
!196 = !DILocation(line: 51, scope: !177)
!197 = !DILocalVariable(name: "count", scope: !177, file: !19, line: 51, type: !126)
!198 = !DILocation(line: 52, scope: !177)
!199 = !DILocation(line: 53, scope: !177)
!200 = !DILocalVariable(name: "digit", scope: !177, file: !19, line: 53, type: !126)
!201 = !DILocation(line: 54, scope: !177)
!202 = !DILocation(line: 55, scope: !177)
!203 = !DILocalVariable(name: "c", scope: !177, file: !19, line: 55, type: !129)
!204 = !DILocation(line: 56, scope: !177)
!205 = !DILocation(line: 57, scope: !177)
!206 = !DILocation(line: 60, scope: !177)
!207 = !DILocation(line: 62, scope: !177)
!208 = !DILocalVariable(name: "i", scope: !177, file: !19, line: 62, type: !126)
!209 = !DILocation(line: 63, scope: !177)
!210 = !DILocation(line: 65, scope: !177)
!211 = distinct !DISubprogram(name: "print_typetype", linkageName: "__io_print_typetype", scope: !19, file: !19, line: 127, type: !212, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!212 = !DISubroutineType(types: !213)
!213 = !{null, !122, !214}
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_TypeInfo", scope: !19, file: !19, size: 384, elements: !215)
!215 = !{!216, !218}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !19, file: !19, baseType: !217, size: 64, align: 64)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !131, file: !131, size: 64, align: 64, elements: !22)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !19, file: !19, baseType: !219, size: 320, align: 64, offset: 64)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_TypeUnion", scope: !19, file: !19, size: 320, elements: !220)
!220 = !{!221, !229, !244, !253, !258, !263, !266, !276, !282}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !19, file: !19, baseType: !222, size: 256, align: 64)
!222 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_BasicType", scope: !19, file: !19, size: 256, elements: !223)
!223 = !{!224, !226, !227, !228}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !19, file: !19, baseType: !225, size: 64, align: 64)
!225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !131, file: !131, size: 64, align: 64, elements: !34)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19, file: !19, baseType: !129, size: 32, align: 32, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !19, file: !19, baseType: !129, size: 32, align: 32, offset: 96)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19, file: !19, baseType: !130, size: 128, align: 64, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "struct_", scope: !19, file: !19, baseType: !230, size: 320, align: 64)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructType", scope: !19, file: !19, size: 320, elements: !231)
!231 = !{!232, !228, !243}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !19, file: !19, baseType: !233, size: 128, align: 64)
!233 = !DICompositeType(tag: DW_TAG_structure_type, scope: !131, file: !131, size: 128, align: 64, elements: !234)
!234 = !{!235, !236}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !131, file: !131, baseType: !126, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !131, file: !131, baseType: !237, size: 64, align: 64, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init_StructMember", baseType: !238, size: 64, align: 64, dwarfAddressSpace: 0)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructMember", scope: !131, file: !131, size: 192, elements: !239)
!239 = !{!240, !241}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !131, file: !131, baseType: !130, size: 128, align: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !131, file: !131, baseType: !242, size: 64, align: 64, offset: 128)
!242 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19, file: !19, baseType: !129, size: 32, align: 32, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !19, file: !19, baseType: !245, size: 192, align: 64)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_FunctionType", scope: !19, file: !19, size: 192, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "return_", scope: !19, file: !19, baseType: !242, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "args_t", scope: !19, file: !19, baseType: !249, size: 128, align: 64, offset: 64)
!249 = !DICompositeType(tag: DW_TAG_structure_type, scope: !131, file: !131, size: 128, align: 64, elements: !250)
!250 = !{!235, !251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !131, file: !131, baseType: !252, size: 64, align: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*type", baseType: !242, size: 64, align: 64, dwarfAddressSpace: 0)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !19, file: !19, baseType: !254, size: 128, align: 64)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_PointerType", scope: !19, file: !19, size: 128, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "pointee", scope: !19, file: !19, baseType: !242, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "is_optional", scope: !19, file: !19, baseType: !192, size: 8, align: 8, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !19, file: !19, baseType: !259, size: 128, align: 64)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_ArrayType", scope: !19, file: !19, size: 128, elements: !260)
!260 = !{!261, !262}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !19, file: !19, baseType: !242, size: 64, align: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "member_count", scope: !19, file: !19, baseType: !129, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !19, file: !19, baseType: !264, size: 64, align: 64)
!264 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_SliceType", scope: !19, file: !19, size: 64, elements: !265)
!265 = !{!261}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enum_", scope: !19, file: !19, baseType: !267, size: 320, align: 64)
!267 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_EnumType", scope: !19, file: !19, size: 320, elements: !268)
!268 = !{!269, !270, !275}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19, file: !19, baseType: !130, size: 128, align: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "member_names", scope: !19, file: !19, baseType: !271, size: 128, align: 64, offset: 128)
!271 = !DICompositeType(tag: DW_TAG_structure_type, scope: !131, file: !131, size: 128, align: 64, elements: !272)
!272 = !{!235, !273}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !131, file: !131, baseType: !274, size: 64, align: 64, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*string", baseType: !130, size: 64, align: 64, dwarfAddressSpace: 0)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !19, file: !19, baseType: !242, size: 64, align: 64, offset: 256)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !19, file: !19, baseType: !277, size: 128, align: 64)
!277 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_VectorType", scope: !19, file: !19, size: 128, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !19, file: !19, baseType: !280, size: 64, align: 64)
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !131, file: !131, size: 64, align: 64, elements: !69)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count", scope: !19, file: !19, baseType: !129, size: 32, align: 32, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !19, file: !19, baseType: !283, size: 128, align: 64)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_GenericType", scope: !19, file: !19, size: 128, elements: !284)
!284 = !{!269}
!285 = !DILocation(line: 127, scope: !211)
!286 = !DILocalVariable(name: "b", scope: !211, file: !19, line: 127, type: !122)
!287 = !DILocalVariable(name: "info", arg: 1, scope: !211, file: !19, line: 127, type: !214)
!288 = !DILocation(line: 128, scope: !211)
!289 = !DILocation(line: 130, scope: !211)
!290 = !DILocation(line: 133, scope: !211)
!291 = !DILocation(line: 136, scope: !211)
!292 = !DILocation(line: 137, scope: !211)
!293 = !DILocalVariable(name: "args", scope: !211, file: !19, line: 137, type: !249)
!294 = !DILocation(line: 138, scope: !211)
!295 = !DILocalVariable(name: "arg", scope: !211, file: !19, line: 138, type: !242)
!296 = !DILocalVariable(name: "i", scope: !211, file: !19, line: 138, type: !126)
!297 = !DILocation(line: 139, scope: !211)
!298 = !DILocation(line: 140, scope: !211)
!299 = !DILocation(line: 141, scope: !211)
!300 = !DILocation(line: 144, scope: !211)
!301 = !DILocation(line: 145, scope: !211)
!302 = !DILocation(line: 146, scope: !211)
!303 = !DILocation(line: 147, scope: !211)
!304 = !DILocation(line: 151, scope: !211)
!305 = !DILocation(line: 154, scope: !211)
!306 = !DILocation(line: 155, scope: !211)
!307 = !DILocation(line: 158, scope: !211)
!308 = !DILocation(line: 159, scope: !211)
!309 = !DILocation(line: 162, scope: !211)
!310 = !DILocation(line: 163, scope: !211)
!311 = !DILocation(line: 166, scope: !211)
!312 = !DILocation(line: 169, scope: !211)
!313 = !DILocation(line: 172, scope: !211)
!314 = !DILocation(line: 176, scope: !211)
!315 = distinct !DISubprogram(name: "print_type", linkageName: "__io_print_type", scope: !19, file: !19, line: 178, type: !316, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !122, !318}
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_Arg", scope: !19, file: !19, size: 128, elements: !319)
!319 = !{!261, !320}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !19, file: !19, baseType: !321, size: 64, align: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!322 = !DILocation(line: 178, scope: !315)
!323 = !DILocalVariable(name: "b", scope: !315, file: !19, line: 178, type: !122)
!324 = !DILocalVariable(name: "arg", arg: 1, scope: !315, file: !19, line: 178, type: !318)
!325 = !DILocation(line: 179, scope: !315)
!326 = !DILocalVariable(name: "t", scope: !315, file: !19, line: 179, type: !214)
!327 = !DILocation(line: 180, scope: !315)
!328 = !DILocation(line: 184, scope: !315)
!329 = !DILocalVariable(name: "basic", scope: !315, file: !19, line: 184, type: !222)
!330 = !DILocation(line: 185, scope: !315)
!331 = !DILocation(line: 186, scope: !315)
!332 = !DILocation(line: 187, scope: !315)
!333 = !DILocation(line: 189, scope: !315)
!334 = !DILocation(line: 192, scope: !315)
!335 = !DILocation(line: 193, scope: !315)
!336 = !DILocalVariable(name: "str", scope: !315, file: !19, line: 193, type: !130)
!337 = !DILocation(line: 194, scope: !315)
!338 = !DILocation(line: 203, scope: !315)
!339 = !DILocation(line: 204, scope: !315)
!340 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 204, type: !149)
!341 = !DILocation(line: 205, scope: !315)
!342 = !DILocation(line: 207, scope: !315)
!343 = !DILocation(line: 208, scope: !315)
!344 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 208, type: !149)
!345 = !DILocation(line: 209, scope: !315)
!346 = !DILocation(line: 211, scope: !315)
!347 = !DILocation(line: 212, scope: !315)
!348 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 212, type: !149)
!349 = !DILocation(line: 213, scope: !315)
!350 = !DILocation(line: 215, scope: !315)
!351 = !DILocation(line: 216, scope: !315)
!352 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 216, type: !149)
!353 = !DILocation(line: 217, scope: !315)
!354 = !DILocation(line: 219, scope: !315)
!355 = !DILocation(line: 220, scope: !315)
!356 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 220, type: !126)
!357 = !DILocation(line: 221, scope: !315)
!358 = !DILocation(line: 223, scope: !315)
!359 = !DILocation(line: 224, scope: !315)
!360 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 224, type: !126)
!361 = !DILocation(line: 225, scope: !315)
!362 = !DILocation(line: 227, scope: !315)
!363 = !DILocation(line: 228, scope: !315)
!364 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 228, type: !126)
!365 = !DILocation(line: 229, scope: !315)
!366 = !DILocation(line: 231, scope: !315)
!367 = !DILocation(line: 232, scope: !315)
!368 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 232, type: !126)
!369 = !DILocation(line: 233, scope: !315)
!370 = !DILocation(line: 235, scope: !315)
!371 = !DILocation(line: 236, scope: !315)
!372 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 236, type: !126)
!373 = !DILocation(line: 237, scope: !315)
!374 = !DILocation(line: 239, scope: !315)
!375 = !DILocation(line: 240, scope: !315)
!376 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 240, type: !149)
!377 = !DILocation(line: 241, scope: !315)
!378 = !DILocation(line: 243, scope: !315)
!379 = !DILocation(line: 244, scope: !315)
!380 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 244, type: !381)
!381 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!382 = !DILocation(line: 245, scope: !315)
!383 = !DILocation(line: 247, scope: !315)
!384 = !DILocation(line: 248, scope: !315)
!385 = !DILocalVariable(name: "num", scope: !315, file: !19, line: 248, type: !386)
!386 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!387 = !DILocation(line: 249, scope: !315)
!388 = !DILocation(line: 251, scope: !315)
!389 = !DILocation(line: 252, scope: !315)
!390 = !DILocalVariable(name: "pt", scope: !315, file: !19, line: 252, type: !242)
!391 = !DILocation(line: 253, scope: !315)
!392 = !DILocalVariable(name: "info", scope: !315, file: !19, line: 253, type: !214)
!393 = !DILocation(line: 254, scope: !315)
!394 = !DILocation(line: 257, scope: !315)
!395 = !DILocation(line: 263, scope: !315)
!396 = !DILocalVariable(name: "st", scope: !315, file: !19, line: 263, type: !230)
!397 = !DILocation(line: 264, scope: !315)
!398 = !DILocation(line: 265, scope: !315)
!399 = !DILocation(line: 266, scope: !315)
!400 = !DILocalVariable(name: "n", scope: !315, file: !19, line: 266, type: !126)
!401 = !DILocation(line: 267, scope: !315)
!402 = !DILocalVariable(name: "m", scope: !315, file: !19, line: 267, type: !403)
!403 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructMember", scope: !19, file: !19, size: 192, elements: !404)
!404 = !{!269, !405}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !19, file: !19, baseType: !242, size: 64, align: 64, offset: 128)
!406 = !DILocation(line: 268, scope: !315)
!407 = !DILocation(line: 269, scope: !315)
!408 = !DILocation(line: 270, scope: !315)
!409 = !DILocation(line: 271, scope: !315)
!410 = !DILocalVariable(name: "ptr", scope: !315, file: !19, line: 271, type: !134)
!411 = !DILocation(line: 272, scope: !315)
!412 = !DILocalVariable(name: "offset", scope: !315, file: !19, line: 272, type: !126)
!413 = !DILocation(line: 273, scope: !315)
!414 = !DILocalVariable(name: "mem_arg", scope: !315, file: !19, line: 273, type: !318)
!415 = !DILocation(line: 277, scope: !315)
!416 = !DILocation(line: 279, scope: !315)
!417 = !DILocation(line: 280, scope: !315)
!418 = !DILocation(line: 281, scope: !315)
!419 = !DILocation(line: 284, scope: !315)
!420 = !DILocation(line: 299, scope: !315)
!421 = distinct !DISubprogram(name: "builder_to_string", linkageName: "__io_builder_to_string", scope: !19, file: !19, line: 301, type: !422, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!422 = !DISubroutineType(types: !423)
!423 = !{!424, !122}
!424 = !DICompositeType(tag: DW_TAG_structure_type, scope: !19, file: !19, size: 128, align: 64, elements: !425)
!425 = !{!125, !426}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !19, file: !19, baseType: !134, size: 64, align: 64, offset: 64)
!427 = !DILocation(line: 301, scope: !421)
!428 = !DILocalVariable(name: "b_in", scope: !421, file: !19, line: 301, type: !122)
!429 = !DILocation(line: 302, scope: !421)
!430 = !DILocalVariable(name: "b", scope: !421, file: !19, line: 302, type: !122)
!431 = !DILocation(line: 303, scope: !421)
!432 = !DILocalVariable(name: "alloc", scope: !421, file: !19, line: 303, type: !433)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !19, file: !19, size: 192, elements: !434)
!434 = !{!435, !441, !445}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !19, file: !19, baseType: !436, size: 64, align: 64)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *__mem_Allocator) -> ?*", baseType: !437, size: 64, align: 64, dwarfAddressSpace: 0)
!437 = !DISubroutineType(types: !438)
!438 = !{!321, !126, !439}
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_Allocator", baseType: !440, size: 64, align: 64, dwarfAddressSpace: 0)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !131, file: !131, size: 192, align: 64, flags: DIFlagFwdDecl)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !19, file: !19, baseType: !442, size: 64, align: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *__mem_Allocator)", baseType: !443, size: 64, align: 64, dwarfAddressSpace: 0)
!443 = !DISubroutineType(types: !444)
!444 = !{null, !321, !439}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !19, file: !19, baseType: !321, size: 64, align: 64, offset: 128)
!446 = !DILocation(line: 304, scope: !421)
!447 = !DILocalVariable(name: "res", scope: !421, file: !19, line: 304, type: !424)
!448 = !DILocation(line: 306, scope: !421)
!449 = !DILocalVariable(name: "i", scope: !421, file: !19, line: 306, type: !126)
!450 = !DILocation(line: 307, scope: !421)
!451 = !DILocalVariable(name: "ptr", scope: !421, file: !19, line: 307, type: !134)
!452 = !DILocation(line: 308, scope: !421)
!453 = !DILocation(line: 309, scope: !421)
!454 = !DILocation(line: 310, scope: !421)
!455 = !DILocation(line: 313, scope: !421)
!456 = !DILocalVariable(name: "size", scope: !421, file: !19, line: 313, type: !126)
!457 = !DILocation(line: 314, scope: !421)
!458 = !DILocalVariable(name: "j", scope: !421, file: !19, line: 314, type: !126)
!459 = !DILocation(line: 315, scope: !421)
!460 = !DILocation(line: 319, scope: !421)
!461 = distinct !DISubprogram(name: "print_type_with_formatter", linkageName: "__io_print_type_with_formatter", scope: !19, file: !19, line: 322, type: !462, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!462 = !DISubroutineType(types: !463)
!463 = !{null, !122, !129, !318}
!464 = !DILocation(line: 322, scope: !461)
!465 = !DILocalVariable(name: "b", scope: !461, file: !19, line: 322, type: !122)
!466 = !DILocalVariable(name: "c", arg: 1, scope: !461, file: !19, line: 322, type: !129)
!467 = !DILocalVariable(name: "arg", arg: 2, scope: !461, file: !19, line: 322, type: !318)
!468 = !DILocation(line: 323, scope: !461)
!469 = !DILocalVariable(name: "t", scope: !461, file: !19, line: 323, type: !214)
!470 = !DILocation(line: 324, scope: !461)
!471 = !DILocation(line: 325, scope: !461)
!472 = !DILocalVariable(name: "str", scope: !461, file: !19, line: 325, type: !134)
!473 = !DILocation(line: 326, scope: !461)
!474 = !DILocalVariable(name: "i", scope: !461, file: !19, line: 326, type: !126)
!475 = !DILocation(line: 327, scope: !461)
!476 = !DILocation(line: 330, scope: !461)
!477 = !DILocation(line: 331, scope: !461)
!478 = !DILocation(line: 333, scope: !461)
!479 = distinct !DISubprogram(name: "__internal_print", linkageName: "__io___internal_print", scope: !19, file: !19, line: 335, type: !480, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!480 = !DISubroutineType(types: !481)
!481 = !{!123, !130, !482}
!482 = !DICompositeType(tag: DW_TAG_structure_type, scope: !19, file: !19, size: 128, align: 64, elements: !483)
!483 = !{!125, !484}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !19, file: !19, baseType: !485, size: 64, align: 64, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init_Arg", baseType: !318, size: 64, align: 64, dwarfAddressSpace: 0)
!486 = !DILocation(line: 335, scope: !479)
!487 = !DILocalVariable(name: "fmt", scope: !479, file: !19, line: 335, type: !130)
!488 = !DILocalVariable(name: "args", arg: 1, scope: !479, file: !19, line: 335, type: !482)
!489 = !DILocation(line: 336, scope: !479)
!490 = !DILocalVariable(name: "alloc", scope: !479, file: !19, line: 336, type: !433)
!491 = !DILocation(line: 337, scope: !479)
!492 = !DILocalVariable(name: "builder", scope: !479, file: !19, line: 337, type: !123)
!493 = !DILocation(line: 338, scope: !479)
!494 = !DILocalVariable(name: "arg_count", scope: !479, file: !19, line: 338, type: !126)
!495 = !DILocation(line: 339, scope: !479)
!496 = !DILocalVariable(name: "need_to_print_arg", scope: !479, file: !19, line: 339, type: !192)
!497 = !DILocation(line: 340, scope: !479)
!498 = !DILocalVariable(name: "c", scope: !479, file: !19, line: 340, type: !129)
!499 = !DILocalVariable(name: "i", scope: !479, file: !19, line: 340, type: !126)
!500 = !DILocation(line: 341, scope: !479)
!501 = !DILocation(line: 342, scope: !479)
!502 = !DILocation(line: 344, scope: !479)
!503 = !DILocation(line: 345, scope: !479)
!504 = !DILocalVariable(name: "arg", scope: !479, file: !19, line: 345, type: !318)
!505 = !DILocation(line: 346, scope: !479)
!506 = !DILocation(line: 347, scope: !479)
!507 = !DILocation(line: 348, scope: !479)
!508 = !DILocation(line: 350, scope: !479)
!509 = !DILocation(line: 355, scope: !479)
!510 = !DILocation(line: 356, scope: !479)
!511 = !DILocalVariable(name: "arg", scope: !479, file: !19, line: 356, type: !318)
!512 = !DILocation(line: 357, scope: !479)
!513 = !DILocation(line: 358, scope: !479)
!514 = !DILocation(line: 359, scope: !479)
!515 = !DILocation(line: 362, scope: !479)
!516 = distinct !DISubprogram(name: "print", linkageName: "__io_print", scope: !19, file: !19, line: 365, type: !517, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!517 = !DISubroutineType(types: !518)
!518 = !{null, !130}
!519 = !DILocation(line: 365, scope: !516)
!520 = !DILocalVariable(name: "str", scope: !516, file: !19, line: 365, type: !130)
!521 = !DILocalVariable(name: "args", arg: 1, scope: !516, file: !19, line: 365, type: !482)
!522 = !DILocation(line: 366, scope: !516)
!523 = !DILocalVariable(name: "builder", scope: !516, file: !19, line: 366, type: !123)
!524 = !DILocation(line: 367, scope: !516)
!525 = !DILocalVariable(name: "res", scope: !516, file: !19, line: 367, type: !424)
!526 = !DILocation(line: 368, scope: !516)
!527 = !DILocation(line: 369, scope: !516)
!528 = !DILocation(line: 370, scope: !516)
!529 = !DILocation(line: 371, scope: !516)
!530 = distinct !DISubprogram(name: "println", linkageName: "__io_println", scope: !19, file: !19, line: 373, type: !517, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!531 = !DILocation(line: 373, scope: !530)
!532 = !DILocalVariable(name: "str", scope: !530, file: !19, line: 373, type: !130)
!533 = !DILocalVariable(name: "args", arg: 1, scope: !530, file: !19, line: 373, type: !482)
!534 = !DILocation(line: 374, scope: !530)
!535 = !DILocalVariable(name: "builder", scope: !530, file: !19, line: 374, type: !123)
!536 = !DILocation(line: 375, scope: !530)
!537 = !DILocation(line: 376, scope: !530)
!538 = !DILocalVariable(name: "res", scope: !530, file: !19, line: 376, type: !424)
!539 = !DILocation(line: 377, scope: !530)
!540 = !DILocation(line: 378, scope: !530)
!541 = !DILocation(line: 379, scope: !530)
!542 = !DILocation(line: 381, scope: !530)
!543 = distinct !DISubprogram(name: "readln", linkageName: "__io_readln", scope: !19, file: !19, line: 383, type: !544, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!544 = !DISubroutineType(types: !545)
!545 = !{!130, !439, !129}
!546 = !DILocation(line: 383, scope: !543)
!547 = !DILocalVariable(name: "alloc", scope: !543, file: !19, line: 383, type: !439)
!548 = !DILocalVariable(name: "max", arg: 1, scope: !543, file: !19, line: 383, type: !129)
!549 = !DILocation(line: 384, scope: !543)
!550 = !DILocalVariable(name: "mem", scope: !543, file: !19, line: 384, type: !321)
!551 = !DILocation(line: 385, scope: !543)
!552 = !DILocation(line: 386, scope: !543)
!553 = !DILocation(line: 389, scope: !543)
!554 = !DILocalVariable(name: "buf", scope: !543, file: !19, line: 389, type: !134)
!555 = !DILocation(line: 390, scope: !543)
!556 = !DILocalVariable(name: "count", scope: !543, file: !19, line: 390, type: !129)
!557 = !DILocation(line: 391, scope: !543)
!558 = !DILocation(line: 392, scope: !543)
!559 = !DILocalVariable(name: "res", scope: !543, file: !19, line: 395, type: !130)
!560 = !DILocation(line: 395, scope: !543)
!561 = !DILocation(line: 396, scope: !543)
!562 = !DILocation(line: 397, scope: !543)
!563 = !DILocation(line: 399, scope: !543)
!564 = distinct !DISubprogram(name: "get_next", linkageName: "__io_get_next", scope: !19, file: !19, line: 402, type: !565, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!565 = !DISubroutineType(types: !566)
!566 = !{!129, !134}
!567 = !DILocation(line: 402, scope: !564)
!568 = !DILocalVariable(name: "curr", scope: !564, file: !19, line: 402, type: !134)
!569 = !DILocation(line: 403, scope: !564)
!570 = !DILocalVariable(name: "scan", scope: !564, file: !19, line: 403, type: !134)
!571 = !DILocation(line: 404, scope: !564)
!572 = !DILocalVariable(name: "codepoint", scope: !564, file: !19, line: 404, type: !129)
!573 = !DILocation(line: 405, scope: !564)
!574 = !DILocation(line: 406, scope: !564)
!575 = !DILocation(line: 407, scope: !564)
!576 = !DILocation(line: 408, scope: !564)
!577 = !DILocation(line: 410, scope: !564)
!578 = !DILocation(line: 413, scope: !564)
!579 = distinct !DISubprogram(name: "format_float@type_*[]u32_f32_i32_@void", linkageName: "__io_format_float@type_*[]u32_f32_i32_@void", scope: !19, file: !19, line: 67, type: !580, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!580 = !DISubroutineType(types: !581)
!581 = !{null, !242, !122, !381, !582}
!582 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!583 = !DILocation(line: 67, scope: !579)
!584 = !DILocalVariable(name: "ft", scope: !579, file: !19, line: 67, type: !242)
!585 = !DILocalVariable(name: "b", arg: 1, scope: !579, file: !19, line: 67, type: !122)
!586 = !DILocalVariable(name: "num_in", arg: 2, scope: !579, file: !19, line: 67, type: !381)
!587 = !DILocalVariable(name: "round_at", arg: 3, scope: !579, file: !19, line: 67, type: !582)
!588 = !DILocation(line: 68, scope: !579)
!589 = !DILocalVariable(name: "temp", scope: !579, file: !19, line: 68, type: !155)
!590 = !DILocation(line: 69, scope: !579)
!591 = !DILocalVariable(name: "count", scope: !579, file: !19, line: 69, type: !126)
!592 = !DILocation(line: 70, scope: !579)
!593 = !DILocalVariable(name: "num", scope: !579, file: !19, line: 70, type: !381)
!594 = !DILocation(line: 72, scope: !579)
!595 = !DILocation(line: 73, scope: !579)
!596 = !DILocation(line: 76, scope: !579)
!597 = !DILocation(line: 77, scope: !579)
!598 = !DILocation(line: 78, scope: !579)
!599 = !DILocation(line: 81, scope: !579)
!600 = !DILocalVariable(name: "is_neg", scope: !579, file: !19, line: 81, type: !192)
!601 = !DILocation(line: 82, scope: !579)
!602 = !DILocation(line: 83, scope: !579)
!603 = !DILocation(line: 84, scope: !579)
!604 = !DILocation(line: 87, scope: !579)
!605 = !DILocation(line: 88, scope: !579)
!606 = !DILocalVariable(name: "int_val", scope: !579, file: !19, line: 88, type: !582)
!607 = !DILocation(line: 89, scope: !579)
!608 = !DILocalVariable(name: "dec", scope: !579, file: !19, line: 89, type: !582)
!609 = !DILocation(line: 91, scope: !579)
!610 = !DILocation(line: 92, scope: !579)
!611 = !DILocation(line: 93, scope: !579)
!612 = !DILocation(line: 96, scope: !579)
!613 = !DILocation(line: 97, scope: !579)
!614 = !DILocation(line: 98, scope: !579)
!615 = !DILocation(line: 99, scope: !579)
!616 = !DILocation(line: 103, scope: !579)
!617 = !DILocation(line: 104, scope: !579)
!618 = !DILocation(line: 106, scope: !579)
!619 = !DILocation(line: 107, scope: !579)
!620 = !DILocation(line: 108, scope: !579)
!621 = !DILocation(line: 110, scope: !579)
!622 = !DILocation(line: 111, scope: !579)
!623 = !DILocation(line: 112, scope: !579)
!624 = !DILocation(line: 113, scope: !579)
!625 = !DILocation(line: 118, scope: !579)
!626 = !DILocation(line: 119, scope: !579)
!627 = !DILocation(line: 122, scope: !579)
!628 = !DILocalVariable(name: "i", scope: !579, file: !19, line: 122, type: !126)
!629 = !DILocation(line: 123, scope: !579)
!630 = !DILocation(line: 125, scope: !579)
!631 = distinct !DISubprogram(name: "format_float@type_*[]u32_f64_i32_@void", linkageName: "__io_format_float@type_*[]u32_f64_i32_@void", scope: !19, file: !19, line: 67, type: !632, spFlags: DISPFlagDefinition, unit: !18, retainedNodes: !137)
!632 = !DISubroutineType(types: !633)
!633 = !{null, !242, !122, !386, !582}
!634 = !DILocation(line: 67, scope: !631)
!635 = !DILocalVariable(name: "ft", scope: !631, file: !19, line: 67, type: !242)
!636 = !DILocalVariable(name: "b", arg: 1, scope: !631, file: !19, line: 67, type: !122)
!637 = !DILocalVariable(name: "num_in", arg: 2, scope: !631, file: !19, line: 67, type: !386)
!638 = !DILocalVariable(name: "round_at", arg: 3, scope: !631, file: !19, line: 67, type: !582)
!639 = !DILocation(line: 68, scope: !631)
!640 = !DILocalVariable(name: "temp", scope: !631, file: !19, line: 68, type: !155)
!641 = !DILocation(line: 69, scope: !631)
!642 = !DILocalVariable(name: "count", scope: !631, file: !19, line: 69, type: !126)
!643 = !DILocation(line: 70, scope: !631)
!644 = !DILocalVariable(name: "num", scope: !631, file: !19, line: 70, type: !386)
!645 = !DILocation(line: 72, scope: !631)
!646 = !DILocation(line: 73, scope: !631)
!647 = !DILocation(line: 76, scope: !631)
!648 = !DILocation(line: 77, scope: !631)
!649 = !DILocation(line: 78, scope: !631)
!650 = !DILocation(line: 81, scope: !631)
!651 = !DILocalVariable(name: "is_neg", scope: !631, file: !19, line: 81, type: !192)
!652 = !DILocation(line: 82, scope: !631)
!653 = !DILocation(line: 83, scope: !631)
!654 = !DILocation(line: 84, scope: !631)
!655 = !DILocation(line: 87, scope: !631)
!656 = !DILocation(line: 88, scope: !631)
!657 = !DILocalVariable(name: "int_val", scope: !631, file: !19, line: 88, type: !582)
!658 = !DILocation(line: 89, scope: !631)
!659 = !DILocalVariable(name: "dec", scope: !631, file: !19, line: 89, type: !582)
!660 = !DILocation(line: 91, scope: !631)
!661 = !DILocation(line: 92, scope: !631)
!662 = !DILocation(line: 93, scope: !631)
!663 = !DILocation(line: 96, scope: !631)
!664 = !DILocation(line: 97, scope: !631)
!665 = !DILocation(line: 98, scope: !631)
!666 = !DILocation(line: 99, scope: !631)
!667 = !DILocation(line: 103, scope: !631)
!668 = !DILocation(line: 104, scope: !631)
!669 = !DILocation(line: 106, scope: !631)
!670 = !DILocation(line: 107, scope: !631)
!671 = !DILocation(line: 108, scope: !631)
!672 = !DILocation(line: 110, scope: !631)
!673 = !DILocation(line: 111, scope: !631)
!674 = !DILocation(line: 112, scope: !631)
!675 = !DILocation(line: 113, scope: !631)
!676 = !DILocation(line: 118, scope: !631)
!677 = !DILocation(line: 119, scope: !631)
!678 = !DILocation(line: 122, scope: !631)
!679 = !DILocalVariable(name: "i", scope: !631, file: !19, line: 122, type: !126)
!680 = !DILocation(line: 123, scope: !631)
!681 = !DILocation(line: 125, scope: !631)
