; ModuleID = 'os'
source_filename = "os.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%slice.209 = type { i64, ptr }
%string.164 = type { ptr, i64 }

$__os_STD_INPUT_HANDLE = comdat nodeduplicate

$__os_STD_OUTPUT_HANDLE = comdat nodeduplicate

$__os_STD_ERROR_HANDLE = comdat nodeduplicate

$__os_INVALID_HANDLE_VALUE = comdat nodeduplicate

$__os_CP_UTF7 = comdat nodeduplicate

$__os_CP_UTF8 = comdat nodeduplicate

$__os_MEM_COMMIT = comdat nodeduplicate

$__os_MEM_RESERVE = comdat nodeduplicate

$__os_MEM_RELEASE = comdat nodeduplicate

$__os_PAGE_NOACCESS = comdat nodeduplicate

$__os_PAGE_READONLY = comdat nodeduplicate

$__os_PAGE_READWRITE = comdat nodeduplicate

$__os_PAGE_WRITECOPY = comdat nodeduplicate

$__os_PAGE_EXECUTE = comdat nodeduplicate

$__os_PAGE_EXECUTE_READ = comdat nodeduplicate

$__os_PAGE_EXECUTE_READWRITE = comdat nodeduplicate

$__os_PAGE_EXECUTE_WRITECOPY = comdat nodeduplicate

$__os_PAGE_GUARD = comdat nodeduplicate

$__os_PAGE_NOCACHE = comdat nodeduplicate

$__os_PAGE_WRITECOMBINE = comdat nodeduplicate

$___asan_gen__anon_global = comdat nodeduplicate

@__sdl_INIT_AUDIO = external global i64
@__sdl_INIT_VIDEO = external global i64
@__sdl_INIT_JOYSTICK = external global i64
@__sdl_INIT_HAPTIC = external global i64
@__sdl_INIT_GAMEPAD = external global i64
@__sdl_INIT_EVENTS = external global i64
@__sdl_INIT_SENSOR = external global i64
@__sdl_INIT_CAMERA = external global i64
@__sdl_WINDOW_FULLSCREEN = external global i64
@__sdl_WINDOW_OPENGL = external global i64
@__sdl_WINDOW_OCCLUDED = external global i64
@__sdl_WINDOW_HIDDEN = external global i64
@__sdl_WINDOW_BORDERLESS = external global i64
@__sdl_WINDOW_RESIZABLE = external global i64
@__sdl_WINDOW_MINIMIZED = external global i64
@__sdl_WINDOW_MAXIMIZED = external global i64
@__sdl_WINDOW_MOUSE_GRABBED = external global i64
@__sdl_WINDOW_INPUT_FOCUS = external global i64
@__sdl_WINDOW_MOUSE_FOCUS = external global i64
@__sdl_WINDOW_EXTERNAL = external global i64
@__sdl_WINDOW_MODAL = external global i64
@__sdl_WINDOW_HIGH_PIXEL_DENSITY = external global i64
@__sdl_WINDOW_MOUSE_CAPTURE = external global i64
@__sdl_WINDOW_MOUSE_RELATIVE_MODE = external global i64
@__sdl_WINDOW_ALWAYS_ON_TOP = external global i64
@__sdl_WINDOW_UTILITY = external global i64
@__sdl_WINDOW_TOOLTIP = external global i64
@__sdl_WINDOW_POPUP_MENU = external global i64
@__sdl_WINDOW_KEYBOARD_GRABBED = external global i64
@__sdl_WINDOW_VULKAN = external global i64
@__sdl_WINDOW_METAL = external global i64
@__sdl_WINDOW_TRANSPARENT = external global i64
@__sdl_WINDOW_NOT_FOCUSABLE = external global i64
@__gl_dll_module = external global ptr
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.209
@__os_STD_INPUT_HANDLE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_STD_OUTPUT_HANDLE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_STD_ERROR_HANDLE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_INVALID_HANDLE_VALUE = global { ptr, [24 x i8] } zeroinitializer, comdat, align 32
@__os_CP_UTF7 = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_CP_UTF8 = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_MEM_COMMIT = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_MEM_RESERVE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_MEM_RELEASE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_NOACCESS = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_READONLY = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_READWRITE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_WRITECOPY = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_EXECUTE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_EXECUTE_READ = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_EXECUTE_READWRITE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_EXECUTE_WRITECOPY = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_GUARD = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_NOCACHE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__os_PAGE_WRITECOMBINE = global { i32, [28 x i8] } zeroinitializer, comdat, align 32
@__str_CONTINUE_BIT = external global i8
@___asan_gen__anon_global = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Assert Failed!\0A\00", [16 x i8] zeroinitializer }, comdat, align 32
@llvm.used = appending global [1 x ptr] [ptr @asan.module_ctor], section "llvm.metadata"
@___asan_gen_ = private constant [3 x i8] c"os\00", align 1
@___asan_gen_.2 = private unnamed_addr constant [22 x i8] c"__os_STD_INPUT_HANDLE\00", align 1
@__odr_asan_gen___os_STD_INPUT_HANDLE = global i8 0, align 1
@___asan_gen_.3 = private unnamed_addr constant [23 x i8] c"__os_STD_OUTPUT_HANDLE\00", align 1
@__odr_asan_gen___os_STD_OUTPUT_HANDLE = global i8 0, align 1
@___asan_gen_.4 = private unnamed_addr constant [22 x i8] c"__os_STD_ERROR_HANDLE\00", align 1
@__odr_asan_gen___os_STD_ERROR_HANDLE = global i8 0, align 1
@___asan_gen_.5 = private unnamed_addr constant [26 x i8] c"__os_INVALID_HANDLE_VALUE\00", align 1
@__odr_asan_gen___os_INVALID_HANDLE_VALUE = global i8 0, align 1
@___asan_gen_.6 = private unnamed_addr constant [13 x i8] c"__os_CP_UTF7\00", align 1
@__odr_asan_gen___os_CP_UTF7 = global i8 0, align 1
@___asan_gen_.7 = private unnamed_addr constant [13 x i8] c"__os_CP_UTF8\00", align 1
@__odr_asan_gen___os_CP_UTF8 = global i8 0, align 1
@___asan_gen_.8 = private unnamed_addr constant [16 x i8] c"__os_MEM_COMMIT\00", align 1
@__odr_asan_gen___os_MEM_COMMIT = global i8 0, align 1
@___asan_gen_.9 = private unnamed_addr constant [17 x i8] c"__os_MEM_RESERVE\00", align 1
@__odr_asan_gen___os_MEM_RESERVE = global i8 0, align 1
@___asan_gen_.10 = private unnamed_addr constant [17 x i8] c"__os_MEM_RELEASE\00", align 1
@__odr_asan_gen___os_MEM_RELEASE = global i8 0, align 1
@___asan_gen_.11 = private unnamed_addr constant [19 x i8] c"__os_PAGE_NOACCESS\00", align 1
@__odr_asan_gen___os_PAGE_NOACCESS = global i8 0, align 1
@___asan_gen_.12 = private unnamed_addr constant [19 x i8] c"__os_PAGE_READONLY\00", align 1
@__odr_asan_gen___os_PAGE_READONLY = global i8 0, align 1
@___asan_gen_.13 = private unnamed_addr constant [20 x i8] c"__os_PAGE_READWRITE\00", align 1
@__odr_asan_gen___os_PAGE_READWRITE = global i8 0, align 1
@___asan_gen_.14 = private unnamed_addr constant [20 x i8] c"__os_PAGE_WRITECOPY\00", align 1
@__odr_asan_gen___os_PAGE_WRITECOPY = global i8 0, align 1
@___asan_gen_.15 = private unnamed_addr constant [18 x i8] c"__os_PAGE_EXECUTE\00", align 1
@__odr_asan_gen___os_PAGE_EXECUTE = global i8 0, align 1
@___asan_gen_.16 = private unnamed_addr constant [23 x i8] c"__os_PAGE_EXECUTE_READ\00", align 1
@__odr_asan_gen___os_PAGE_EXECUTE_READ = global i8 0, align 1
@___asan_gen_.17 = private unnamed_addr constant [28 x i8] c"__os_PAGE_EXECUTE_READWRITE\00", align 1
@__odr_asan_gen___os_PAGE_EXECUTE_READWRITE = global i8 0, align 1
@___asan_gen_.18 = private unnamed_addr constant [28 x i8] c"__os_PAGE_EXECUTE_WRITECOPY\00", align 1
@__odr_asan_gen___os_PAGE_EXECUTE_WRITECOPY = global i8 0, align 1
@___asan_gen_.19 = private unnamed_addr constant [16 x i8] c"__os_PAGE_GUARD\00", align 1
@__odr_asan_gen___os_PAGE_GUARD = global i8 0, align 1
@___asan_gen_.20 = private unnamed_addr constant [18 x i8] c"__os_PAGE_NOCACHE\00", align 1
@__odr_asan_gen___os_PAGE_NOCACHE = global i8 0, align 1
@___asan_gen_.21 = private unnamed_addr constant [23 x i8] c"__os_PAGE_WRITECOMBINE\00", align 1
@__odr_asan_gen___os_PAGE_WRITECOMBINE = global i8 0, align 1
@___asan_gen_.22 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__asan_global___os_STD_INPUT_HANDLE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_STD_INPUT_HANDLE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.2 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_STD_INPUT_HANDLE to i64) }, section ".ASAN$GL", comdat($__os_STD_INPUT_HANDLE), align 64, !associated !0
@__asan_global___os_STD_OUTPUT_HANDLE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_STD_OUTPUT_HANDLE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.3 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_STD_OUTPUT_HANDLE to i64) }, section ".ASAN$GL", comdat($__os_STD_OUTPUT_HANDLE), align 64, !associated !1
@__asan_global___os_STD_ERROR_HANDLE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_STD_ERROR_HANDLE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.4 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_STD_ERROR_HANDLE to i64) }, section ".ASAN$GL", comdat($__os_STD_ERROR_HANDLE), align 64, !associated !2
@__asan_global___os_INVALID_HANDLE_VALUE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_INVALID_HANDLE_VALUE to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.5 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_INVALID_HANDLE_VALUE to i64) }, section ".ASAN$GL", comdat($__os_INVALID_HANDLE_VALUE), align 64, !associated !3
@__asan_global___os_CP_UTF7 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_CP_UTF7 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.6 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_CP_UTF7 to i64) }, section ".ASAN$GL", comdat($__os_CP_UTF7), align 64, !associated !4
@__asan_global___os_CP_UTF8 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_CP_UTF8 to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.7 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_CP_UTF8 to i64) }, section ".ASAN$GL", comdat($__os_CP_UTF8), align 64, !associated !5
@__asan_global___os_MEM_COMMIT = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_MEM_COMMIT to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.8 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_MEM_COMMIT to i64) }, section ".ASAN$GL", comdat($__os_MEM_COMMIT), align 64, !associated !6
@__asan_global___os_MEM_RESERVE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_MEM_RESERVE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.9 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_MEM_RESERVE to i64) }, section ".ASAN$GL", comdat($__os_MEM_RESERVE), align 64, !associated !7
@__asan_global___os_MEM_RELEASE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_MEM_RELEASE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.10 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_MEM_RELEASE to i64) }, section ".ASAN$GL", comdat($__os_MEM_RELEASE), align 64, !associated !8
@__asan_global___os_PAGE_NOACCESS = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_NOACCESS to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.11 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_NOACCESS to i64) }, section ".ASAN$GL", comdat($__os_PAGE_NOACCESS), align 64, !associated !9
@__asan_global___os_PAGE_READONLY = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_READONLY to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.12 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_READONLY to i64) }, section ".ASAN$GL", comdat($__os_PAGE_READONLY), align 64, !associated !10
@__asan_global___os_PAGE_READWRITE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_READWRITE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.13 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_READWRITE to i64) }, section ".ASAN$GL", comdat($__os_PAGE_READWRITE), align 64, !associated !11
@__asan_global___os_PAGE_WRITECOPY = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_WRITECOPY to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.14 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_WRITECOPY to i64) }, section ".ASAN$GL", comdat($__os_PAGE_WRITECOPY), align 64, !associated !12
@__asan_global___os_PAGE_EXECUTE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_EXECUTE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.15 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_EXECUTE to i64) }, section ".ASAN$GL", comdat($__os_PAGE_EXECUTE), align 64, !associated !13
@__asan_global___os_PAGE_EXECUTE_READ = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_EXECUTE_READ to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.16 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_EXECUTE_READ to i64) }, section ".ASAN$GL", comdat($__os_PAGE_EXECUTE_READ), align 64, !associated !14
@__asan_global___os_PAGE_EXECUTE_READWRITE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_EXECUTE_READWRITE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.17 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_EXECUTE_READWRITE to i64) }, section ".ASAN$GL", comdat($__os_PAGE_EXECUTE_READWRITE), align 64, !associated !15
@__asan_global___os_PAGE_EXECUTE_WRITECOPY = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_EXECUTE_WRITECOPY to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.18 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_EXECUTE_WRITECOPY to i64) }, section ".ASAN$GL", comdat($__os_PAGE_EXECUTE_WRITECOPY), align 64, !associated !16
@__asan_global___os_PAGE_GUARD = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_GUARD to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.19 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_GUARD to i64) }, section ".ASAN$GL", comdat($__os_PAGE_GUARD), align 64, !associated !17
@__asan_global___os_PAGE_NOCACHE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_NOCACHE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.20 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_NOCACHE to i64) }, section ".ASAN$GL", comdat($__os_PAGE_NOCACHE), align 64, !associated !18
@__asan_global___os_PAGE_WRITECOMBINE = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__os_PAGE_WRITECOMBINE to i64), i64 4, i64 32, i64 ptrtoint (ptr @___asan_gen_.21 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___os_PAGE_WRITECOMBINE to i64) }, section ".ASAN$GL", comdat($__os_PAGE_WRITECOMBINE), align 64, !associated !19
@__asan_global_ = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global to i64), i64 16, i64 32, i64 ptrtoint (ptr @___asan_gen_.22 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global), align 64, !associated !20
@llvm.compiler.used = appending global [41 x ptr] [ptr @__os_STD_INPUT_HANDLE, ptr @__os_STD_OUTPUT_HANDLE, ptr @__os_STD_ERROR_HANDLE, ptr @__os_INVALID_HANDLE_VALUE, ptr @__os_CP_UTF7, ptr @__os_CP_UTF8, ptr @__os_MEM_COMMIT, ptr @__os_MEM_RESERVE, ptr @__os_MEM_RELEASE, ptr @__os_PAGE_NOACCESS, ptr @__os_PAGE_READONLY, ptr @__os_PAGE_READWRITE, ptr @__os_PAGE_WRITECOPY, ptr @__os_PAGE_EXECUTE, ptr @__os_PAGE_EXECUTE_READ, ptr @__os_PAGE_EXECUTE_READWRITE, ptr @__os_PAGE_EXECUTE_WRITECOPY, ptr @__os_PAGE_GUARD, ptr @__os_PAGE_NOCACHE, ptr @__os_PAGE_WRITECOMBINE, ptr @__asan_global___os_STD_INPUT_HANDLE, ptr @__asan_global___os_STD_OUTPUT_HANDLE, ptr @__asan_global___os_STD_ERROR_HANDLE, ptr @__asan_global___os_INVALID_HANDLE_VALUE, ptr @__asan_global___os_CP_UTF7, ptr @__asan_global___os_CP_UTF8, ptr @__asan_global___os_MEM_COMMIT, ptr @__asan_global___os_MEM_RESERVE, ptr @__asan_global___os_MEM_RELEASE, ptr @__asan_global___os_PAGE_NOACCESS, ptr @__asan_global___os_PAGE_READONLY, ptr @__asan_global___os_PAGE_READWRITE, ptr @__asan_global___os_PAGE_WRITECOPY, ptr @__asan_global___os_PAGE_EXECUTE, ptr @__asan_global___os_PAGE_EXECUTE_READ, ptr @__asan_global___os_PAGE_EXECUTE_READWRITE, ptr @__asan_global___os_PAGE_EXECUTE_WRITECOPY, ptr @__asan_global___os_PAGE_GUARD, ptr @__asan_global___os_PAGE_NOCACHE, ptr @__asan_global___os_PAGE_WRITECOMBINE, ptr @__asan_global_], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]

define void @__os___GlobalInitializerFunction.0() {
block_0:
  store i32 -10, ptr @__os_STD_INPUT_HANDLE, align 4
  store i32 -11, ptr @__os_STD_OUTPUT_HANDLE, align 4
  store i32 -12, ptr @__os_STD_ERROR_HANDLE, align 4
  store ptr inttoptr (i64 -1 to ptr), ptr @__os_INVALID_HANDLE_VALUE, align 8
  store i32 65000, ptr @__os_CP_UTF7, align 4
  store i32 65001, ptr @__os_CP_UTF8, align 4
  store i32 4096, ptr @__os_MEM_COMMIT, align 4
  store i32 8192, ptr @__os_MEM_RESERVE, align 4
  store i32 32768, ptr @__os_MEM_RELEASE, align 4
  store i32 1, ptr @__os_PAGE_NOACCESS, align 4
  store i32 2, ptr @__os_PAGE_READONLY, align 4
  store i32 4, ptr @__os_PAGE_READWRITE, align 4
  store i32 8, ptr @__os_PAGE_WRITECOPY, align 4
  store i32 16, ptr @__os_PAGE_EXECUTE, align 4
  store i32 32, ptr @__os_PAGE_EXECUTE_READ, align 4
  store i32 64, ptr @__os_PAGE_EXECUTE_READWRITE, align 4
  store i32 128, ptr @__os_PAGE_EXECUTE_WRITECOPY, align 4
  store i32 256, ptr @__os_PAGE_GUARD, align 4
  store i32 512, ptr @__os_PAGE_NOCACHE, align 4
  store i32 1024, ptr @__os_PAGE_WRITECOMBINE, align 4
  ret void
}

declare i32 @__main_main()

declare i1 @SDL_Init(i32)

declare ptr @SDL_CreateWindow(ptr, i32, i32, i64)

declare void @SDL_GL_CreateContext(ptr, ptr)

declare i1 @SDL_GL_SwapWindow(ptr)

declare i1 @SDL_PollEvent(ptr)

declare ptr @SDL_GetError()

declare ptr @wglGetProcAddress(ptr)

declare ptr @GetProcAddress(ptr, ptr)

declare ptr @LoadLibraryA(ptr)

declare ptr @__gl_load_gl_fn(ptr)

declare i1 @__gl_load()

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

define void @__os_abort() !dbg !89 {
block_0:
  call void @ExitProcess(i32 1), !dbg !92
  ret void, !dbg !93
}

define void @__os_assert(i1 %0, ptr %1) !dbg !94 {
block_0:
  %2 = alloca i1, align 1
  %3 = alloca %string.164, align 8
  call void @llvm.memset.p0.i32(ptr align 1 %2, i8 0, i32 1, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  %4 = alloca %string.164, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  store i1 %0, ptr %2, align 1, !dbg !107
  call void @llvm.dbg.value(metadata ptr %2, metadata !108, metadata !DIExpression()), !dbg !107
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !107
  call void @llvm.dbg.value(metadata ptr %3, metadata !109, metadata !DIExpression()), !dbg !107
  %5 = load i1, ptr %2, align 1, !dbg !110
  %6 = icmp eq i1 %5, false, !dbg !110
  br i1 %6, label %block_1, label %block_2, !dbg !110

block_1:                                          ; preds = %block_0
  %7 = alloca %string.164, align 8, !dbg !111
  %String = getelementptr inbounds %string.164, ptr %7, i32 0, i32 0, !dbg !111
  %Size = getelementptr inbounds %string.164, ptr %7, i32 0, i32 1, !dbg !111
  store ptr @___asan_gen__anon_global, ptr %String, align 8, !dbg !111
  store i64 15, ptr %Size, align 8, !dbg !111
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %7, i64 16, i1 false), !dbg !111
  call void @llvm.dbg.declare(metadata ptr %4, metadata !112, metadata !DIExpression()), !dbg !111
  %8 = getelementptr inbounds %string.164, ptr %4, i32 0, i32 0, !dbg !113
  %9 = load i64, ptr %8, align 8, !dbg !113
  %10 = getelementptr inbounds %string.164, ptr %4, i32 0, i32 1, !dbg !113
  %11 = load i64, ptr %10, align 8, !dbg !113
  %12 = trunc i64 %11 to i32, !dbg !113
  call void @__os_print(i64 %9, i32 %12), !dbg !113
  %13 = getelementptr inbounds %string.164, ptr %3, i32 0, i32 0, !dbg !114
  %14 = load i64, ptr %13, align 8, !dbg !114
  %15 = getelementptr inbounds %string.164, ptr %3, i32 0, i32 1, !dbg !114
  %16 = load i64, ptr %15, align 8, !dbg !114
  %17 = trunc i64 %16 to i32, !dbg !114
  call void @__os_print(i64 %14, i32 %17), !dbg !114
  call void @__os_abort(), !dbg !115
  br label %block_3, !dbg !115

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !115

block_3:                                          ; preds = %block_2, %block_1
  ret void, !dbg !116
}

define void @__os_print(ptr %0, i32 %1) !dbg !117 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 4, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !121
  call void @llvm.dbg.value(metadata ptr %2, metadata !122, metadata !DIExpression()), !dbg !121
  store i32 %1, ptr %3, align 4, !dbg !121
  call void @llvm.dbg.value(metadata ptr %3, metadata !123, metadata !DIExpression()), !dbg !121
  %6 = load i32, ptr @__os_CP_UTF8, align 4, !dbg !124
  %7 = call i32 @SetConsoleOutputCP(i32 %6), !dbg !124
  %8 = load i32, ptr @__os_STD_OUTPUT_HANDLE, align 4, !dbg !125
  %9 = call ptr @GetStdHandle(i32 %8), !dbg !125
  store ptr %9, ptr %4, align 8, !dbg !125
  call void @llvm.dbg.declare(metadata ptr %4, metadata !126, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.declare(metadata ptr %5, metadata !128, metadata !DIExpression()), !dbg !129
  %10 = load ptr, ptr %4, align 8, !dbg !130
  %11 = icmp ne ptr %10, null, !dbg !130
  %12 = load ptr, ptr %4, align 8, !dbg !130
  %13 = load ptr, ptr @__os_INVALID_HANDLE_VALUE, align 8, !dbg !130
  %14 = icmp ne ptr %12, %13, !dbg !130
  %15 = icmp ne i1 %11, false, !dbg !130
  %16 = icmp ne i1 %14, false, !dbg !130
  %17 = and i1 %15, %16, !dbg !130
  br i1 %17, label %block_1, label %block_2, !dbg !130

block_1:                                          ; preds = %block_0
  %18 = load ptr, ptr %4, align 8, !dbg !131
  %19 = load ptr, ptr %2, align 8, !dbg !131
  %20 = load i32, ptr %3, align 4, !dbg !131
  %21 = call i1 @WriteFile(ptr %18, ptr %19, i32 %20, ptr %5, ptr null), !dbg !131
  br label %block_3, !dbg !131

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !131

block_3:                                          ; preds = %block_2, %block_1
  ret void, !dbg !132
}

define ptr @__os_alloc(i64 %0) !dbg !133 {
block_0:
  %1 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  store i64 %0, ptr %1, align 8, !dbg !136
  call void @llvm.dbg.value(metadata ptr %1, metadata !137, metadata !DIExpression()), !dbg !136
  %2 = load i64, ptr %1, align 8, !dbg !138
  %3 = load i32, ptr @__os_MEM_RESERVE, align 4, !dbg !138
  %4 = load i32, ptr @__os_MEM_COMMIT, align 4, !dbg !138
  %5 = or i32 %3, %4, !dbg !138
  %6 = load i32, ptr @__os_PAGE_READWRITE, align 4, !dbg !138
  %7 = call ptr @VirtualAlloc(ptr null, i64 %2, i32 %5, i32 %6), !dbg !138
  ret ptr %7, !dbg !138
}

define void @__os_free(ptr %0) !dbg !139 {
block_0:
  %1 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !142
  call void @llvm.dbg.value(metadata ptr %1, metadata !143, metadata !DIExpression()), !dbg !142
  %2 = load ptr, ptr %1, align 8, !dbg !144
  %3 = load i32, ptr @__os_MEM_RELEASE, align 4, !dbg !144
  %4 = call i1 @VirtualFree(ptr %2, i64 0, i32 %3), !dbg !144
  ret void, !dbg !145
}

declare void @__io_push_string(ptr, ptr)

declare void @__io_format_uint(ptr, i64)

declare void @__io_format_int(ptr, i64)

declare void @__io_print_typetype(ptr, ptr)

declare void @__io_print_type(ptr, ptr)

declare void @__io_builder_to_string(ptr, ptr)

declare void @__io___internal_print(ptr, ptr, ptr)

declare void @__io_print(ptr, ptr)

declare void @__io_println(ptr, ptr)

declare i32 @__io_get_next(ptr)

declare void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64, ptr, float, i32)

declare void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64, ptr, double, i32)

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_add@*[]u32_u32_@void"(ptr, i32)

declare void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr, i64, ptr)

declare void @"__array_add@*[]u8_u8_@void"(ptr, i8)

declare void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr, i64, ptr)

declare void @"__array_free@*[]u32_@void"(ptr)

declare void @"__array_free@*[]u8_@void"(ptr)

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @__asan_before_dynamic_init(i64)

declare void @__asan_after_dynamic_init()

declare void @__asan_register_globals(i64, i64)

declare void @__asan_unregister_globals(i64, i64)

declare void @__asan_register_image_globals(i64)

declare void @__asan_unregister_image_globals(i64)

declare void @__asan_register_elf_globals(i64, i64, i64)

declare void @__asan_unregister_elf_globals(i64, i64, i64)

declare void @__asan_init()

; Function Attrs: nounwind
define internal void @asan.module_ctor() #3 {
  call void @__asan_init()
  call void @__asan_version_mismatch_check_v8()
  ret void
}

declare void @__asan_version_mismatch_check_v8()

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!21}
!llvm.module.flags = !{!87, !88}

!0 = !{ptr @__os_STD_INPUT_HANDLE}
!1 = !{ptr @__os_STD_OUTPUT_HANDLE}
!2 = !{ptr @__os_STD_ERROR_HANDLE}
!3 = !{ptr @__os_INVALID_HANDLE_VALUE}
!4 = !{ptr @__os_CP_UTF7}
!5 = !{ptr @__os_CP_UTF8}
!6 = !{ptr @__os_MEM_COMMIT}
!7 = !{ptr @__os_MEM_RESERVE}
!8 = !{ptr @__os_MEM_RELEASE}
!9 = !{ptr @__os_PAGE_NOACCESS}
!10 = !{ptr @__os_PAGE_READONLY}
!11 = !{ptr @__os_PAGE_READWRITE}
!12 = !{ptr @__os_PAGE_WRITECOPY}
!13 = !{ptr @__os_PAGE_EXECUTE}
!14 = !{ptr @__os_PAGE_EXECUTE_READ}
!15 = !{ptr @__os_PAGE_EXECUTE_READWRITE}
!16 = !{ptr @__os_PAGE_EXECUTE_WRITECOPY}
!17 = !{ptr @__os_PAGE_GUARD}
!18 = !{ptr @__os_PAGE_NOCACHE}
!19 = !{ptr @__os_PAGE_WRITECOMBINE}
!20 = !{ptr @___asan_gen__anon_global}
!21 = distinct !DICompileUnit(language: DW_LANG_C99, file: !22, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !23, splitDebugInlining: false)
!22 = !DIFile(filename: "os.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!23 = !{!24, !36, !57, !66, !71, !75, !83, !24, !36, !57, !66, !71, !75}
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !22, file: !22, size: 64, align: 64, elements: !25)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!26 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!29 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!30 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!31 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!32 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!33 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!34 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!35 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !22, file: !22, size: 64, align: 64, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!38 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!48 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!49 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!50 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!51 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!52 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!53 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!54 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!55 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!56 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !22, file: !22, size: 32, align: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63, !64, !65}
!59 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!62 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!64 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!65 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !22, file: !22, size: 32, align: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !22, file: !22, size: 64, align: 64, elements: !72)
!72 = !{!73, !74}
!73 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !22, file: !22, size: 32, align: 32, elements: !76)
!76 = !{!77, !78, !79, !80, !81, !82}
!77 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!82 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_EventType", scope: !22, file: !22, size: 32, align: 32, elements: !84)
!84 = !{!85, !86}
!85 = !DIEnumerator(name: "FIRST", value: 0)
!86 = !DIEnumerator(name: "QUIT", value: 256, isUnsigned: true)
!87 = !{i32 2, !"CodeView", i32 1}
!88 = !{i32 2, !"Debug Info Version", i32 3}
!89 = distinct !DISubprogram(name: "abort", linkageName: "__os_abort", scope: !22, file: !22, line: 37, type: !90, spFlags: DISPFlagDefinition, unit: !21)
!90 = !DISubroutineType(types: !91)
!91 = !{null}
!92 = !DILocation(line: 38, scope: !89)
!93 = !DILocation(line: 39, scope: !89)
!94 = distinct !DISubprogram(name: "assert", linkageName: "__os_assert", scope: !22, file: !22, line: 42, type: !95, spFlags: DISPFlagDefinition, unit: !21, retainedNodes: !106)
!95 = !DISubroutineType(types: !96)
!96 = !{null, !97, !98}
!97 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!98 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !99, file: !99, size: 128, elements: !100)
!99 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!100 = !{!101, !104}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !99, file: !99, baseType: !102, size: 64, align: 64)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !103, size: 64, align: 64, dwarfAddressSpace: 0)
!103 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !99, file: !99, baseType: !105, size: 64, align: 64, offset: 64)
!105 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!106 = !{}
!107 = !DILocation(line: 42, scope: !94)
!108 = !DILocalVariable(name: "cond", scope: !94, file: !22, line: 42, type: !97)
!109 = !DILocalVariable(name: "reason", arg: 1, scope: !94, file: !22, line: 42, type: !98)
!110 = !DILocation(line: 43, scope: !94)
!111 = !DILocation(line: 44, scope: !94)
!112 = !DILocalVariable(name: "header", scope: !94, file: !22, line: 44, type: !98)
!113 = !DILocation(line: 45, scope: !94)
!114 = !DILocation(line: 46, scope: !94)
!115 = !DILocation(line: 47, scope: !94)
!116 = !DILocation(line: 49, scope: !94)
!117 = distinct !DISubprogram(name: "print", linkageName: "__os_print", scope: !22, file: !22, line: 51, type: !118, spFlags: DISPFlagDefinition, unit: !21, retainedNodes: !106)
!118 = !DISubroutineType(types: !119)
!119 = !{null, !102, !120}
!120 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!121 = !DILocation(line: 51, scope: !117)
!122 = !DILocalVariable(name: "data", scope: !117, file: !22, line: 51, type: !102)
!123 = !DILocalVariable(name: "count", arg: 1, scope: !117, file: !22, line: 51, type: !120)
!124 = !DILocation(line: 52, scope: !117)
!125 = !DILocation(line: 53, scope: !117)
!126 = !DILocalVariable(name: "handle", scope: !117, file: !22, line: 53, type: !127)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!128 = !DILocalVariable(name: "written", scope: !117, file: !22, line: 54, type: !120)
!129 = !DILocation(line: 54, scope: !117)
!130 = !DILocation(line: 55, scope: !117)
!131 = !DILocation(line: 56, scope: !117)
!132 = !DILocation(line: 58, scope: !117)
!133 = distinct !DISubprogram(name: "alloc", linkageName: "__os_alloc", scope: !22, file: !22, line: 60, type: !134, spFlags: DISPFlagDefinition, unit: !21, retainedNodes: !106)
!134 = !DISubroutineType(types: !135)
!135 = !{!127, !105}
!136 = !DILocation(line: 60, scope: !133)
!137 = !DILocalVariable(name: "size", scope: !133, file: !22, line: 60, type: !105)
!138 = !DILocation(line: 61, scope: !133)
!139 = distinct !DISubprogram(name: "free", linkageName: "__os_free", scope: !22, file: !22, line: 64, type: !140, spFlags: DISPFlagDefinition, unit: !21, retainedNodes: !106)
!140 = !DISubroutineType(types: !141)
!141 = !{null, !127}
!142 = !DILocation(line: 64, scope: !139)
!143 = !DILocalVariable(name: "ptr", scope: !139, file: !22, line: 64, type: !127)
!144 = !DILocation(line: 65, scope: !139)
!145 = !DILocation(line: 66, scope: !139)
