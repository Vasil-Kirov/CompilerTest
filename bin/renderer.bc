; ModuleID = 'renderer'
source_filename = "renderer.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%slice.187 = type { i64, ptr }
%string.135 = type { ptr, i64 }
%slice.190 = type { i64, ptr }
%__init_Arg.136 = type { i64, ptr }
%__renderer_ctx.158 = type { i32, i32, i32 }
%slice.185 = type { i64, ptr }

$__renderer_vert_shader = comdat nodeduplicate

$__renderer_frag_shader = comdat nodeduplicate

$___asan_gen__anon_global = comdat nodeduplicate

$___asan_gen__anon_global.12 = comdat nodeduplicate

$___asan_gen__anon_global.14 = comdat nodeduplicate

$___asan_gen__anon_global.16 = comdat nodeduplicate

$___asan_gen__anon_global.18 = comdat nodeduplicate

$___asan_gen__anon_global.20 = comdat nodeduplicate

$___asan_gen__anon_global.22 = comdat nodeduplicate

@__main_WIDTH = external global i32
@__main_HEIGHT = external global i32
@__sdl_INIT_AUDIO = external global i32
@__sdl_INIT_VIDEO = external global i32
@__sdl_INIT_JOYSTICK = external global i32
@__sdl_INIT_HAPTIC = external global i32
@__sdl_INIT_GAMEPAD = external global i32
@__sdl_INIT_EVENTS = external global i32
@__sdl_INIT_SENSOR = external global i32
@__sdl_INIT_CAMERA = external global i32
@__sdl_WINDOW_FULLSCREEN = external global i64
@__sdl_WINDOW_OPENGL = external global i64
@__sdl_WINDOW_OCCLUDED = external global i64
@__sdl_WINDOW_HIDDEN = external global i64
@__sdl_WINDOW_BORDERLESS = external global i64
@__sdl_WINDOW_RESIZABLE = external global i64
@__sdl_WINDOW_MINIMIZED = external global i64
@__sdl_WINDOW_MAXIMIZED = external global i64
@__sdl_WINDOW_MOUSE_GRABBED = external global i64
@__sdl_WINDOW_INPUT_FOCUS = external global i64
@__sdl_WINDOW_MOUSE_FOCUS = external global i64
@__sdl_WINDOW_EXTERNAL = external global i64
@__sdl_WINDOW_MODAL = external global i64
@__sdl_WINDOW_HIGH_PIXEL_DENSITY = external global i64
@__sdl_WINDOW_MOUSE_CAPTURE = external global i64
@__sdl_WINDOW_MOUSE_RELATIVE_MODE = external global i64
@__sdl_WINDOW_ALWAYS_ON_TOP = external global i64
@__sdl_WINDOW_UTILITY = external global i64
@__sdl_WINDOW_TOOLTIP = external global i64
@__sdl_WINDOW_POPUP_MENU = external global i64
@__sdl_WINDOW_KEYBOARD_GRABBED = external global i64
@__sdl_WINDOW_VULKAN = external global i64
@__sdl_WINDOW_METAL = external global i64
@__sdl_WINDOW_TRANSPARENT = external global i64
@__sdl_WINDOW_NOT_FOCUSABLE = external global i64
@__sdl_GL_CONTEXT_PROFILE_CORE = external global i32
@__sdl_GL_CONTEXT_PROFILE_COMPATIBILITY = external global i32
@__sdl_GL_CONTEXT_PROFILE_ES = external global i32
@__sdl_GL_CONTEXT_DEBUG_FLAG = external global i32
@__sdl_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = external global i32
@__sdl_GL_CONTEXT_ROBUST_ACCESS_FLAG = external global i32
@__sdl_GL_CONTEXT_RESET_ISOLATION_FLAG = external global i32
@__gl_dll_module = external global ptr
@__gl_ClearColor = external global ptr
@__gl_Clear = external global ptr
@__gl_GenVertexArrays = external global ptr
@__gl_GenBuffers = external global ptr
@__gl_BindBuffer = external global ptr
@__gl_BufferData = external global ptr
@__gl_BufferSubData = external global ptr
@__gl_DeleteBuffers = external global ptr
@__gl_DeleteVertexArrays = external global ptr
@__gl_BindVertexArray = external global ptr
@__gl_Enable = external global ptr
@__gl_Disable = external global ptr
@__gl_EnableVertexAttribArray = external global ptr
@__gl_DisableVertexAttribArray = external global ptr
@__gl_VertexAttribPointer = external global ptr
@__gl_CreateShader = external global ptr
@__gl_ShaderSource = external global ptr
@__gl_CompileShader = external global ptr
@__gl_GetShaderiv = external global ptr
@__gl_GetProgramiv = external global ptr
@__gl_GetShaderInfoLog = external global ptr
@__gl_GetProgramInfoLog = external global ptr
@__gl_DeleteShader = external global ptr
@__gl_AttachShader = external global ptr
@__gl_LinkProgram = external global ptr
@__gl_UseProgram = external global ptr
@__gl_CreateProgram = external global ptr
@__gl_DeleteProgram = external global ptr
@__gl_GetUniformLocation = external global ptr
@__gl_Uniform1f = external global ptr
@__gl_Uniform1i = external global ptr
@__gl_UniformMatrix4fv = external global ptr
@__gl_DrawArrays = external global ptr
@__gl_DrawElements = external global ptr
@__gl_Viewport = external global ptr
@__gl_DebugMessageCallback = external global ptr
@__gl_DebugMessageControl = external global ptr
@__gl_VERSION_ES_CL_1_0 = external global i32
@__gl_VERSION_ES_CM_1_1 = external global i32
@__gl_VERSION_ES_CL_1_1 = external global i32
@__gl_DEPTH_BUFFER_BIT = external global i32
@__gl_STENCIL_BUFFER_BIT = external global i32
@__gl_COLOR_BUFFER_BIT = external global i32
@__gl_FALSE = external global i32
@__gl_TRUE = external global i32
@__gl_POINTS = external global i32
@__gl_LINES = external global i32
@__gl_LINE_LOOP = external global i32
@__gl_LINE_STRIP = external global i32
@__gl_TRIANGLES = external global i32
@__gl_TRIANGLE_STRIP = external global i32
@__gl_TRIANGLE_FAN = external global i32
@__gl_NEVER = external global i32
@__gl_LESS = external global i32
@__gl_EQUAL = external global i32
@__gl_LEQUAL = external global i32
@__gl_GREATER = external global i32
@__gl_NOTEQUAL = external global i32
@__gl_GEQUAL = external global i32
@__gl_ALWAYS = external global i32
@__gl_ZERO = external global i32
@__gl_ONE = external global i32
@__gl_SRC_COLOR = external global i32
@__gl_ONE_MINUS_SRC_COLOR = external global i32
@__gl_SRC_ALPHA = external global i32
@__gl_ONE_MINUS_SRC_ALPHA = external global i32
@__gl_DST_ALPHA = external global i32
@__gl_ONE_MINUS_DST_ALPHA = external global i32
@__gl_DST_COLOR = external global i32
@__gl_ONE_MINUS_DST_COLOR = external global i32
@__gl_SRC_ALPHA_SATURATE = external global i32
@__gl_CLIP_PLANE0 = external global i32
@__gl_CLIP_PLANE1 = external global i32
@__gl_CLIP_PLANE2 = external global i32
@__gl_CLIP_PLANE3 = external global i32
@__gl_CLIP_PLANE4 = external global i32
@__gl_CLIP_PLANE5 = external global i32
@__gl_FRONT = external global i32
@__gl_BACK = external global i32
@__gl_FRONT_AND_BACK = external global i32
@__gl_FOG = external global i32
@__gl_LIGHTING = external global i32
@__gl_TEXTURE_2D = external global i32
@__gl_CULL_FACE = external global i32
@__gl_ALPHA_TEST = external global i32
@__gl_BLEND = external global i32
@__gl_COLOR_LOGIC_OP = external global i32
@__gl_DITHER = external global i32
@__gl_STENCIL_TEST = external global i32
@__gl_DEPTH_TEST = external global i32
@__gl_POINT_SMOOTH = external global i32
@__gl_LINE_SMOOTH = external global i32
@__gl_SCISSOR_TEST = external global i32
@__gl_COLOR_MATERIAL = external global i32
@__gl_NORMALIZE = external global i32
@__gl_RESCALE_NORMAL = external global i32
@__gl_VERTEX_ARRAY = external global i32
@__gl_NORMAL_ARRAY = external global i32
@__gl_COLOR_ARRAY = external global i32
@__gl_TEXTURE_COORD_ARRAY = external global i32
@__gl_MULTISAMPLE = external global i32
@__gl_SAMPLE_ALPHA_TO_COVERAGE = external global i32
@__gl_SAMPLE_ALPHA_TO_ONE = external global i32
@__gl_SAMPLE_COVERAGE = external global i32
@__gl_NO_ERROR = external global i32
@__gl_INVALID_ENUM = external global i32
@__gl_INVALID_VALUE = external global i32
@__gl_INVALID_OPERATION = external global i32
@__gl_STACK_OVERFLOW = external global i32
@__gl_STACK_UNDERFLOW = external global i32
@__gl_OUT_OF_MEMORY = external global i32
@__gl_EXP = external global i32
@__gl_EXP2 = external global i32
@__gl_FOG_DENSITY = external global i32
@__gl_FOG_START = external global i32
@__gl_FOG_END = external global i32
@__gl_FOG_MODE = external global i32
@__gl_FOG_COLOR = external global i32
@__gl_CW = external global i32
@__gl_CCW = external global i32
@__gl_CURRENT_COLOR = external global i32
@__gl_CURRENT_NORMAL = external global i32
@__gl_CURRENT_TEXTURE_COORDS = external global i32
@__gl_POINT_SIZE = external global i32
@__gl_POINT_SIZE_MIN = external global i32
@__gl_POINT_SIZE_MAX = external global i32
@__gl_POINT_FADE_THRESHOLD_SIZE = external global i32
@__gl_POINT_DISTANCE_ATTENUATION = external global i32
@__gl_SMOOTH_POINT_SIZE_RANGE = external global i32
@__gl_LINE_WIDTH = external global i32
@__gl_SMOOTH_LINE_WIDTH_RANGE = external global i32
@__gl_ALIASED_POINT_SIZE_RANGE = external global i32
@__gl_ALIASED_LINE_WIDTH_RANGE = external global i32
@__gl_CULL_FACE_MODE = external global i32
@__gl_FRONT_FACE = external global i32
@__gl_SHADE_MODEL = external global i32
@__gl_DEPTH_RANGE = external global i32
@__gl_DEPTH_WRITEMASK = external global i32
@__gl_DEPTH_CLEAR_VALUE = external global i32
@__gl_DEPTH_FUNC = external global i32
@__gl_STENCIL_CLEAR_VALUE = external global i32
@__gl_STENCIL_FUNC = external global i32
@__gl_STENCIL_VALUE_MASK = external global i32
@__gl_STENCIL_FAIL = external global i32
@__gl_STENCIL_PASS_DEPTH_FAIL = external global i32
@__gl_STENCIL_PASS_DEPTH_PASS = external global i32
@__gl_STENCIL_REF = external global i32
@__gl_STENCIL_WRITEMASK = external global i32
@__gl_MATRIX_MODE = external global i32
@__gl_VIEWPORT = external global i32
@__gl_MODELVIEW_STACK_DEPTH = external global i32
@__gl_PROJECTION_STACK_DEPTH = external global i32
@__gl_TEXTURE_STACK_DEPTH = external global i32
@__gl_MODELVIEW_MATRIX = external global i32
@__gl_PROJECTION_MATRIX = external global i32
@__gl_TEXTURE_MATRIX = external global i32
@__gl_ALPHA_TEST_FUNC = external global i32
@__gl_ALPHA_TEST_REF = external global i32
@__gl_BLEND_DST = external global i32
@__gl_BLEND_SRC = external global i32
@__gl_LOGIC_OP_MODE = external global i32
@__gl_SCISSOR_BOX = external global i32
@__gl_COLOR_CLEAR_VALUE = external global i32
@__gl_COLOR_WRITEMASK = external global i32
@__gl_MAX_LIGHTS = external global i32
@__gl_MAX_CLIP_PLANES = external global i32
@__gl_MAX_TEXTURE_SIZE = external global i32
@__gl_MAX_MODELVIEW_STACK_DEPTH = external global i32
@__gl_MAX_PROJECTION_STACK_DEPTH = external global i32
@__gl_MAX_TEXTURE_STACK_DEPTH = external global i32
@__gl_MAX_VIEWPORT_DIMS = external global i32
@__gl_MAX_TEXTURE_UNITS = external global i32
@__gl_SUBPIXEL_BITS = external global i32
@__gl_RED_BITS = external global i32
@__gl_GREEN_BITS = external global i32
@__gl_BLUE_BITS = external global i32
@__gl_ALPHA_BITS = external global i32
@__gl_DEPTH_BITS = external global i32
@__gl_STENCIL_BITS = external global i32
@__gl_POLYGON_OFFSET_UNITS = external global i32
@__gl_POLYGON_OFFSET_FILL = external global i32
@__gl_POLYGON_OFFSET_FACTOR = external global i32
@__gl_TEXTURE_BINDING_2D = external global i32
@__gl_VERTEX_ARRAY_SIZE = external global i32
@__gl_VERTEX_ARRAY_TYPE = external global i32
@__gl_VERTEX_ARRAY_STRIDE = external global i32
@__gl_NORMAL_ARRAY_TYPE = external global i32
@__gl_NORMAL_ARRAY_STRIDE = external global i32
@__gl_COLOR_ARRAY_SIZE = external global i32
@__gl_COLOR_ARRAY_TYPE = external global i32
@__gl_COLOR_ARRAY_STRIDE = external global i32
@__gl_TEXTURE_COORD_ARRAY_SIZE = external global i32
@__gl_TEXTURE_COORD_ARRAY_TYPE = external global i32
@__gl_TEXTURE_COORD_ARRAY_STRIDE = external global i32
@__gl_VERTEX_ARRAY_POINTER = external global i32
@__gl_NORMAL_ARRAY_POINTER = external global i32
@__gl_COLOR_ARRAY_POINTER = external global i32
@__gl_TEXTURE_COORD_ARRAY_POINTER = external global i32
@__gl_SAMPLE_BUFFERS = external global i32
@__gl_SAMPLES = external global i32
@__gl_SAMPLE_COVERAGE_VALUE = external global i32
@__gl_SAMPLE_COVERAGE_INVERT = external global i32
@__gl_NUM_COMPRESSED_TEXTURE_FORMATS = external global i32
@__gl_COMPRESSED_TEXTURE_FORMATS = external global i32
@__gl_DONT_CARE = external global i32
@__gl_FASTEST = external global i32
@__gl_NICEST = external global i32
@__gl_PERSPECTIVE_CORRECTION_HINT = external global i32
@__gl_POINT_SMOOTH_HINT = external global i32
@__gl_LINE_SMOOTH_HINT = external global i32
@__gl_FOG_HINT = external global i32
@__gl_GENERATE_MIPMAP_HINT = external global i32
@__gl_LIGHT_MODEL_AMBIENT = external global i32
@__gl_LIGHT_MODEL_TWO_SIDE = external global i32
@__gl_AMBIENT = external global i32
@__gl_DIFFUSE = external global i32
@__gl_SPECULAR = external global i32
@__gl_POSITION = external global i32
@__gl_SPOT_DIRECTION = external global i32
@__gl_SPOT_EXPONENT = external global i32
@__gl_SPOT_CUTOFF = external global i32
@__gl_CONSTANT_ATTENUATION = external global i32
@__gl_LINEAR_ATTENUATION = external global i32
@__gl_QUADRATIC_ATTENUATION = external global i32
@__gl_BYTE = external global i32
@__gl_UNSIGNED_BYTE = external global i32
@__gl_SHORT = external global i32
@__gl_UNSIGNED_SHORT = external global i32
@__gl_FLOAT = external global i32
@__gl_FIXED = external global i32
@__gl_CLEAR = external global i32
@__gl_AND = external global i32
@__gl_AND_REVERSE = external global i32
@__gl_COPY = external global i32
@__gl_AND_INVERTED = external global i32
@__gl_NOOP = external global i32
@__gl_XOR = external global i32
@__gl_OR = external global i32
@__gl_NOR = external global i32
@__gl_EQUIV = external global i32
@__gl_INVERT = external global i32
@__gl_OR_REVERSE = external global i32
@__gl_COPY_INVERTED = external global i32
@__gl_OR_INVERTED = external global i32
@__gl_NAND = external global i32
@__gl_SET = external global i32
@__gl_EMISSION = external global i32
@__gl_SHININESS = external global i32
@__gl_AMBIENT_AND_DIFFUSE = external global i32
@__gl_MODELVIEW = external global i32
@__gl_PROJECTION = external global i32
@__gl_TEXTURE = external global i32
@__gl_ALPHA = external global i32
@__gl_RGB = external global i32
@__gl_RGBA = external global i32
@__gl_LUMINANCE = external global i32
@__gl_LUMINANCE_ALPHA = external global i32
@__gl_UNPACK_ALIGNMENT = external global i32
@__gl_PACK_ALIGNMENT = external global i32
@__gl_UNSIGNED_SHORT_4_4_4_4 = external global i32
@__gl_UNSIGNED_SHORT_5_5_5_1 = external global i32
@__gl_UNSIGNED_SHORT_5_6_5 = external global i32
@__gl_FLAT = external global i32
@__gl_SMOOTH = external global i32
@__gl_KEEP = external global i32
@__gl_REPLACE = external global i32
@__gl_INCR = external global i32
@__gl_DECR = external global i32
@__gl_VENDOR = external global i32
@__gl_RENDERER = external global i32
@__gl_VERSION = external global i32
@__gl_EXTENSIONS = external global i32
@__gl_MODULATE = external global i32
@__gl_DECAL = external global i32
@__gl_ADD = external global i32
@__gl_TEXTURE_ENV_MODE = external global i32
@__gl_TEXTURE_ENV_COLOR = external global i32
@__gl_TEXTURE_ENV = external global i32
@__gl_NEAREST = external global i32
@__gl_LINEAR = external global i32
@__gl_NEAREST_MIPMAP_NEAREST = external global i32
@__gl_LINEAR_MIPMAP_NEAREST = external global i32
@__gl_NEAREST_MIPMAP_LINEAR = external global i32
@__gl_LINEAR_MIPMAP_LINEAR = external global i32
@__gl_TEXTURE_MAG_FILTER = external global i32
@__gl_TEXTURE_MIN_FILTER = external global i32
@__gl_TEXTURE_WRAP_S = external global i32
@__gl_TEXTURE_WRAP_T = external global i32
@__gl_GENERATE_MIPMAP = external global i32
@__gl_TEXTURE0 = external global i32
@__gl_TEXTURE1 = external global i32
@__gl_TEXTURE2 = external global i32
@__gl_TEXTURE3 = external global i32
@__gl_TEXTURE4 = external global i32
@__gl_TEXTURE5 = external global i32
@__gl_TEXTURE6 = external global i32
@__gl_TEXTURE7 = external global i32
@__gl_TEXTURE8 = external global i32
@__gl_TEXTURE9 = external global i32
@__gl_TEXTURE10 = external global i32
@__gl_TEXTURE11 = external global i32
@__gl_TEXTURE12 = external global i32
@__gl_TEXTURE13 = external global i32
@__gl_TEXTURE14 = external global i32
@__gl_TEXTURE15 = external global i32
@__gl_TEXTURE16 = external global i32
@__gl_TEXTURE17 = external global i32
@__gl_TEXTURE18 = external global i32
@__gl_TEXTURE19 = external global i32
@__gl_TEXTURE20 = external global i32
@__gl_TEXTURE21 = external global i32
@__gl_TEXTURE22 = external global i32
@__gl_TEXTURE23 = external global i32
@__gl_TEXTURE24 = external global i32
@__gl_TEXTURE25 = external global i32
@__gl_TEXTURE26 = external global i32
@__gl_TEXTURE27 = external global i32
@__gl_TEXTURE28 = external global i32
@__gl_TEXTURE29 = external global i32
@__gl_TEXTURE30 = external global i32
@__gl_TEXTURE31 = external global i32
@__gl_ACTIVE_TEXTURE = external global i32
@__gl_CLIENT_ACTIVE_TEXTURE = external global i32
@__gl_REPEAT = external global i32
@__gl_CLAMP_TO_EDGE = external global i32
@__gl_LIGHT0 = external global i32
@__gl_LIGHT1 = external global i32
@__gl_LIGHT2 = external global i32
@__gl_LIGHT3 = external global i32
@__gl_LIGHT4 = external global i32
@__gl_LIGHT5 = external global i32
@__gl_LIGHT6 = external global i32
@__gl_LIGHT7 = external global i32
@__gl_ARRAY_BUFFER = external global i32
@__gl_ELEMENT_ARRAY_BUFFER = external global i32
@__gl_ARRAY_BUFFER_BINDING = external global i32
@__gl_ELEMENT_ARRAY_BUFFER_BINDING = external global i32
@__gl_VERTEX_ARRAY_BUFFER_BINDING = external global i32
@__gl_NORMAL_ARRAY_BUFFER_BINDING = external global i32
@__gl_COLOR_ARRAY_BUFFER_BINDING = external global i32
@__gl_TEXTURE_COORD_ARRAY_BUFFER_BIDING = external global i32
@__gl_STATIC_DRAW = external global i32
@__gl_DYNAMIC_DRAW = external global i32
@__gl_BUFFER_SIZE = external global i32
@__gl_BUFFER_USAGE = external global i32
@__gl_SUBTRACT = external global i32
@__gl_COMBINE = external global i32
@__gl_COMBINE_RGB = external global i32
@__gl_COMBINE_ALPHA = external global i32
@__gl_RGB_SCALE = external global i32
@__gl_ADD_SIGNED = external global i32
@__gl_INTERPOLATE = external global i32
@__gl_CONSTANT = external global i32
@__gl_PRIMARY_COLOR = external global i32
@__gl_PREVIOUS = external global i32
@__gl_OPERAND0_RGB = external global i32
@__gl_OPERAND1_RGB = external global i32
@__gl_OPERAND2_RGB = external global i32
@__gl_OPERAND0_ALPHA = external global i32
@__gl_OPERAND1_ALPHA = external global i32
@__gl_OPERAND2_ALPHA = external global i32
@__gl_ALPHA_SCALE = external global i32
@__gl_SRC0_RGB = external global i32
@__gl_SRC1_RGB = external global i32
@__gl_SRC2_RGB = external global i32
@__gl_SRC0_ALPHA = external global i32
@__gl_SRC1_ALPHA = external global i32
@__gl_SRC2_ALPHA = external global i32
@__gl_DOT3_RGB = external global i32
@__gl_DOT3_RGBA = external global i32
@__gl_BLEND_EQUATION_RGB = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_ENABLED = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_SIZE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_STRIDE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_TYPE = external global i32
@__gl_CURRENT_VERTEX_ATTRIB = external global i32
@__gl_VERTEX_PROGRAM_POINT_SIZE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_POINTER = external global i32
@__gl_STENCIL_BACK_FUNC = external global i32
@__gl_STENCIL_BACK_FAIL = external global i32
@__gl_STENCIL_BACK_PASS_DEPTH_FAIL = external global i32
@__gl_STENCIL_BACK_PASS_DEPTH_PASS = external global i32
@__gl_MAX_DRAW_BUFFERS = external global i32
@__gl_DRAW_BUFFER0 = external global i32
@__gl_DRAW_BUFFER1 = external global i32
@__gl_DRAW_BUFFER2 = external global i32
@__gl_DRAW_BUFFER3 = external global i32
@__gl_DRAW_BUFFER4 = external global i32
@__gl_DRAW_BUFFER5 = external global i32
@__gl_DRAW_BUFFER6 = external global i32
@__gl_DRAW_BUFFER7 = external global i32
@__gl_DRAW_BUFFER8 = external global i32
@__gl_DRAW_BUFFER9 = external global i32
@__gl_DRAW_BUFFER10 = external global i32
@__gl_DRAW_BUFFER11 = external global i32
@__gl_DRAW_BUFFER12 = external global i32
@__gl_DRAW_BUFFER13 = external global i32
@__gl_DRAW_BUFFER14 = external global i32
@__gl_DRAW_BUFFER15 = external global i32
@__gl_BLEND_EQUATION_ALPHA = external global i32
@__gl_MAX_VERTEX_ATTRIBS = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_NORMALIZED = external global i32
@__gl_MAX_TEXTURE_IMAGE_UNITS = external global i32
@__gl_FRAGMENT_SHADER = external global i32
@__gl_VERTEX_SHADER = external global i32
@__gl_MAX_FRAGMENT_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_VERTEX_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_VARYING_FLOATS = external global i32
@__gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS = external global i32
@__gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS = external global i32
@__gl_SHADER_TYPE = external global i32
@__gl_FLOAT_VEC2 = external global i32
@__gl_FLOAT_VEC3 = external global i32
@__gl_FLOAT_VEC4 = external global i32
@__gl_INT_VEC2 = external global i32
@__gl_INT_VEC3 = external global i32
@__gl_INT_VEC4 = external global i32
@__gl_BOOL = external global i32
@__gl_BOOL_VEC2 = external global i32
@__gl_BOOL_VEC3 = external global i32
@__gl_BOOL_VEC4 = external global i32
@__gl_FLOAT_MAT2 = external global i32
@__gl_FLOAT_MAT3 = external global i32
@__gl_FLOAT_MAT4 = external global i32
@__gl_SAMPLER_1D = external global i32
@__gl_SAMPLER_2D = external global i32
@__gl_SAMPLER_3D = external global i32
@__gl_SAMPLER_CUBE = external global i32
@__gl_SAMPLER_1D_SHADOW = external global i32
@__gl_SAMPLER_2D_SHADOW = external global i32
@__gl_DELETE_STATUS = external global i32
@__gl_COMPILE_STATUS = external global i32
@__gl_LINK_STATUS = external global i32
@__gl_VALIDATE_STATUS = external global i32
@__gl_INFO_LOG_LENGTH = external global i32
@__gl_ATTACHED_SHADERS = external global i32
@__gl_ACTIVE_UNIFORMS = external global i32
@__gl_ACTIVE_UNIFORM_MAX_LENGTH = external global i32
@__gl_SHADER_SOURCE_LENGTH = external global i32
@__gl_ACTIVE_ATTRIBUTES = external global i32
@__gl_ACTIVE_ATTRIBUTE_MAX_LENGTH = external global i32
@__gl_FRAGMENT_SHADER_DERIVATIVE_HINT = external global i32
@__gl_SHADING_LANGUAGE_VERSION = external global i32
@__gl_CURRENT_PROGRAM = external global i32
@__gl_POINT_SPRITE_COORD_ORIGIN = external global i32
@__gl_LOWER_LEFT = external global i32
@__gl_UPPER_LEFT = external global i32
@__gl_STENCIL_BACK_REF = external global i32
@__gl_STENCIL_BACK_VALUE_MASK = external global i32
@__gl_STENCIL_BACK_WRITEMASK = external global i32
@__gl_VERTEX_PROGRAM_TWO_SIDE = external global i32
@__gl_POINT_SPRITE = external global i32
@__gl_COORD_REPLACE = external global i32
@__gl_MAX_TEXTURE_COORDS = external global i32
@__gl_NUM_SHADING_LANGUAGE_VERSIONS = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_LONG = external global i32
@__gl_COMPRESSED_RGB8_ETC2 = external global i32
@__gl_COMPRESSED_SRGB8_ETC2 = external global i32
@__gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = external global i32
@__gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = external global i32
@__gl_COMPRESSED_RGBA8_ETC2_EAC = external global i32
@__gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = external global i32
@__gl_COMPRESSED_R11_EAC = external global i32
@__gl_COMPRESSED_SIGNED_R11_EAC = external global i32
@__gl_COMPRESSED_RG11_EAC = external global i32
@__gl_COMPRESSED_SIGNED_RG11_EAC = external global i32
@__gl_PRIMITIVE_RESTART_FIXED_INDEX = external global i32
@__gl_ANY_SAMPLES_PASSED_CONSERVATIVE = external global i32
@__gl_MAX_ELEMENT_INDEX = external global i32
@__gl_COMPUTE_SHADER = external global i32
@__gl_MAX_COMPUTE_UNIFORM_BLOCKS = external global i32
@__gl_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = external global i32
@__gl_MAX_COMPUTE_IMAGE_UNIFORMS = external global i32
@__gl_MAX_COMPUTE_SHARED_MEMORY_SIZE = external global i32
@__gl_MAX_COMPUTE_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = external global i32
@__gl_MAX_COMPUTE_ATOMIC_COUNTERS = external global i32
@__gl_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_COUNT = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_SIZE = external global i32
@__gl_COMPUTE_WORK_GROUP_SIZE = external global i32
@__gl_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_DISPATCH_INDIRECT_BUFFER = external global i32
@__gl_DISPATCH_INDIRECT_BUFFER_BINDING = external global i32
@__gl_COMPUTE_SHADER_BIT = external global i32
@__gl_DEBUG_OUTPUT_SYNCHRONOUS = external global i32
@__gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = external global i32
@__gl_DEBUG_CALLBACK_FUNCTION = external global i32
@__gl_DEBUG_CALLBACK_USER_PARAM = external global i32
@__gl_DEBUG_SOURCE_API = external global i32
@__gl_DEBUG_SOURCE_WINDOW_SYSTEM = external global i32
@__gl_DEBUG_SOURCE_SHADER_COMPILER = external global i32
@__gl_DEBUG_SOURCE_THIRD_PARTY = external global i32
@__gl_DEBUG_SOURCE_APPLICATION = external global i32
@__gl_DEBUG_SOURCE_OTHER = external global i32
@__gl_DEBUG_TYPE_ERROR = external global i32
@__gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR = external global i32
@__gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR = external global i32
@__gl_DEBUG_TYPE_PORTABILITY = external global i32
@__gl_DEBUG_TYPE_PERFORMANCE = external global i32
@__gl_DEBUG_TYPE_OTHER = external global i32
@__gl_MAX_DEBUG_MESSAGE_LENGTH = external global i32
@__gl_MAX_DEBUG_LOGGED_MESSAGES = external global i32
@__gl_DEBUG_LOGGED_MESSAGES = external global i32
@__gl_DEBUG_SEVERITY_HIGH = external global i32
@__gl_DEBUG_SEVERITY_MEDIUM = external global i32
@__gl_DEBUG_SEVERITY_LOW = external global i32
@__gl_DEBUG_TYPE_MARKER = external global i32
@__gl_DEBUG_TYPE_PUSH_GROUP = external global i32
@__gl_DEBUG_TYPE_POP_GROUP = external global i32
@__gl_DEBUG_SEVERITY_NOTIFICATION = external global i32
@__gl_MAX_DEBUG_GROUP_STACK_DEPTH = external global i32
@__gl_DEBUG_GROUP_STACK_DEPTH = external global i32
@__gl_BUFFER = external global i32
@__gl_SHADER = external global i32
@__gl_PROGRAM = external global i32
@__gl_QUERY = external global i32
@__gl_PROGRAM_PIPELINE = external global i32
@__gl_SAMPLER = external global i32
@__gl_MAX_LABEL_LENGTH = external global i32
@__gl_DEBUG_OUTPUT = external global i32
@__gl_CONTEXT_FLAG_DEBUG_BIT = external global i32
@__gl_MAX_UNIFORM_LOCATIONS = external global i32
@__gl_FRAMEBUFFER_DEFAULT_WIDTH = external global i32
@__gl_FRAMEBUFFER_DEFAULT_HEIGHT = external global i32
@__gl_FRAMEBUFFER_DEFAULT_LAYERS = external global i32
@__gl_FRAMEBUFFER_DEFAULT_SAMPLES = external global i32
@__gl_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = external global i32
@__gl_MAX_FRAMEBUFFER_WIDTH = external global i32
@__gl_MAX_FRAMEBUFFER_HEIGHT = external global i32
@__gl_MAX_FRAMEBUFFER_LAYERS = external global i32
@__gl_MAX_FRAMEBUFFER_SAMPLES = external global i32
@__gl_INTERNALFORMAT_SUPPORTED = external global i32
@__gl_INTERNALFORMAT_PREFERRED = external global i32
@__gl_INTERNALFORMAT_RED_SIZE = external global i32
@__gl_INTERNALFORMAT_GREEN_SIZE = external global i32
@__gl_INTERNALFORMAT_BLUE_SIZE = external global i32
@__gl_INTERNALFORMAT_ALPHA_SIZE = external global i32
@__gl_INTERNALFORMAT_DEPTH_SIZE = external global i32
@__gl_INTERNALFORMAT_STENCIL_SIZE = external global i32
@__gl_INTERNALFORMAT_SHARED_SIZE = external global i32
@__gl_INTERNALFORMAT_RED_TYPE = external global i32
@__gl_INTERNALFORMAT_GREEN_TYPE = external global i32
@__gl_INTERNALFORMAT_BLUE_TYPE = external global i32
@__gl_INTERNALFORMAT_ALPHA_TYPE = external global i32
@__gl_INTERNALFORMAT_DEPTH_TYPE = external global i32
@__gl_INTERNALFORMAT_STENCIL_TYPE = external global i32
@__gl_MAX_WIDTH = external global i32
@__gl_MAX_HEIGHT = external global i32
@__gl_MAX_DEPTH = external global i32
@__gl_MAX_LAYERS = external global i32
@__gl_MAX_COMBINED_DIMENSIONS = external global i32
@__gl_COLOR_COMPONENTS = external global i32
@__gl_DEPTH_COMPONENTS = external global i32
@__gl_STENCIL_COMPONENTS = external global i32
@__gl_COLOR_RENDERABLE = external global i32
@__gl_DEPTH_RENDERABLE = external global i32
@__gl_STENCIL_RENDERABLE = external global i32
@__gl_FRAMEBUFFER_RENDERABLE = external global i32
@__gl_FRAMEBUFFER_RENDERABLE_LAYERED = external global i32
@__gl_FRAMEBUFFER_BLEND = external global i32
@__gl_READ_PIXELS = external global i32
@__gl_READ_PIXELS_FORMAT = external global i32
@__gl_READ_PIXELS_TYPE = external global i32
@__gl_TEXTURE_IMAGE_FORMAT = external global i32
@__gl_TEXTURE_IMAGE_TYPE = external global i32
@__gl_GET_TEXTURE_IMAGE_FORMAT = external global i32
@__gl_GET_TEXTURE_IMAGE_TYPE = external global i32
@__gl_MIPMAP = external global i32
@__gl_MANUAL_GENERATE_MIPMAP = external global i32
@__gl_AUTO_GENERATE_MIPMAP = external global i32
@__gl_COLOR_ENCODING = external global i32
@__gl_SRGB_READ = external global i32
@__gl_SRGB_WRITE = external global i32
@__gl_FILTER = external global i32
@__gl_VERTEX_TEXTURE = external global i32
@__gl_TESS_CONTROL_TEXTURE = external global i32
@__gl_TESS_EVALUATION_TEXTURE = external global i32
@__gl_GEOMETRY_TEXTURE = external global i32
@__gl_FRAGMENT_TEXTURE = external global i32
@__gl_COMPUTE_TEXTURE = external global i32
@__gl_TEXTURE_SHADOW = external global i32
@__gl_TEXTURE_GATHER = external global i32
@__gl_TEXTURE_GATHER_SHADOW = external global i32
@__gl_SHADER_IMAGE_LOAD = external global i32
@__gl_SHADER_IMAGE_STORE = external global i32
@__gl_SHADER_IMAGE_ATOMIC = external global i32
@__gl_IMAGE_TEXEL_SIZE = external global i32
@__gl_IMAGE_COMPATIBILITY_CLASS = external global i32
@__gl_IMAGE_PIXEL_FORMAT = external global i32
@__gl_IMAGE_PIXEL_TYPE = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_WIDTH = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_HEIGHT = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_SIZE = external global i32
@__gl_CLEAR_BUFFER = external global i32
@__gl_TEXTURE_VIEW = external global i32
@__gl_VIEW_COMPATIBILITY_CLASS = external global i32
@__gl_FULL_SUPPORT = external global i32
@__gl_CAVEAT_SUPPORT = external global i32
@__gl_IMAGE_CLASS_4_X_32 = external global i32
@__gl_IMAGE_CLASS_2_X_32 = external global i32
@__gl_IMAGE_CLASS_1_X_32 = external global i32
@__gl_IMAGE_CLASS_4_X_16 = external global i32
@__gl_IMAGE_CLASS_2_X_16 = external global i32
@__gl_IMAGE_CLASS_1_X_16 = external global i32
@__gl_IMAGE_CLASS_4_X_8 = external global i32
@__gl_IMAGE_CLASS_2_X_8 = external global i32
@__gl_IMAGE_CLASS_1_X_8 = external global i32
@__gl_IMAGE_CLASS_11_11_10 = external global i32
@__gl_IMAGE_CLASS_10_10_10_2 = external global i32
@__gl_VIEW_CLASS_128_BITS = external global i32
@__gl_VIEW_CLASS_96_BITS = external global i32
@__gl_VIEW_CLASS_64_BITS = external global i32
@__gl_VIEW_CLASS_48_BITS = external global i32
@__gl_VIEW_CLASS_32_BITS = external global i32
@__gl_VIEW_CLASS_24_BITS = external global i32
@__gl_VIEW_CLASS_16_BITS = external global i32
@__gl_VIEW_CLASS_8_BITS = external global i32
@__gl_VIEW_CLASS_S3TC_DXT1_RGB = external global i32
@__gl_VIEW_CLASS_S3TC_DXT1_RGBA = external global i32
@__gl_VIEW_CLASS_S3TC_DXT3_RGBA = external global i32
@__gl_VIEW_CLASS_S3TC_DXT5_RGBA = external global i32
@__gl_VIEW_CLASS_RGTC1_RED = external global i32
@__gl_VIEW_CLASS_RGTC2_RG = external global i32
@__gl_VIEW_CLASS_BPTC_UNORM = external global i32
@__gl_VIEW_CLASS_BPTC_FLOAT = external global i32
@__gl_UNIFORM = external global i32
@__gl_UNIFORM_BLOCK = external global i32
@__gl_PROGRAM_INPUT = external global i32
@__gl_PROGRAM_OUTPUT = external global i32
@__gl_BUFFER_VARIABLE = external global i32
@__gl_SHADER_STORAGE_BLOCK = external global i32
@__gl_VERTEX_SUBROUTINE = external global i32
@__gl_TESS_CONTROL_SUBROUTINE = external global i32
@__gl_TESS_EVALUATION_SUBROUTINE = external global i32
@__gl_GEOMETRY_SUBROUTINE = external global i32
@__gl_FRAGMENT_SUBROUTINE = external global i32
@__gl_COMPUTE_SUBROUTINE = external global i32
@__gl_VERTEX_SUBROUTINE_UNIFORM = external global i32
@__gl_TESS_CONTROL_SUBROUTINE_UNIFORM = external global i32
@__gl_TESS_EVALUATION_SUBROUTINE_UNIFORM = external global i32
@__gl_GEOMETRY_SUBROUTINE_UNIFORM = external global i32
@__gl_FRAGMENT_SUBROUTINE_UNIFORM = external global i32
@__gl_COMPUTE_SUBROUTINE_UNIFORM = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYING = external global i32
@__gl_ACTIVE_RESOURCES = external global i32
@__gl_MAX_NAME_LENGTH = external global i32
@__gl_MAX_NUM_ACTIVE_VARIABLES = external global i32
@__gl_MAX_NUM_COMPATIBLE_SUBROUTINES = external global i32
@__gl_NAME_LENGTH = external global i32
@__gl_TYPE = external global i32
@__gl_ARRAY_SIZE = external global i32
@__gl_OFFSET = external global i32
@__gl_BLOCK_INDEX = external global i32
@__gl_ARRAY_STRIDE = external global i32
@__gl_MATRIX_STRIDE = external global i32
@__gl_IS_ROW_MAJOR = external global i32
@__gl_ATOMIC_COUNTER_BUFFER_INDEX = external global i32
@__gl_BUFFER_BINDING = external global i32
@__gl_BUFFER_DATA_SIZE = external global i32
@__gl_NUM_ACTIVE_VARIABLES = external global i32
@__gl_ACTIVE_VARIABLES = external global i32
@__gl_REFERENCED_BY_VERTEX_SHADER = external global i32
@__gl_REFERENCED_BY_TESS_CONTROL_SHADER = external global i32
@__gl_REFERENCED_BY_TESS_EVALUATION_SHADER = external global i32
@__gl_REFERENCED_BY_GEOMETRY_SHADER = external global i32
@__gl_REFERENCED_BY_FRAGMENT_SHADER = external global i32
@__gl_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_TOP_LEVEL_ARRAY_SIZE = external global i32
@__gl_TOP_LEVEL_ARRAY_STRIDE = external global i32
@__gl_LOCATION = external global i32
@__gl_LOCATION_INDEX = external global i32
@__gl_IS_PER_PATCH = external global i32
@__gl_SHADER_STORAGE_BUFFER = external global i32
@__gl_SHADER_STORAGE_BUFFER_BINDING = external global i32
@__gl_SHADER_STORAGE_BUFFER_START = external global i32
@__gl_SHADER_STORAGE_BUFFER_SIZE = external global i32
@__gl_MAX_VERTEX_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_COMBINED_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_SHADER_STORAGE_BUFFER_BINDINGS = external global i32
@__gl_MAX_SHADER_STORAGE_BLOCK_SIZE = external global i32
@__gl_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = external global i32
@__gl_SHADER_STORAGE_BARRIER_BIT = external global i32
@__gl_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = external global i32
@__gl_DEPTH_STENCIL_TEXTURE_MODE = external global i32
@__gl_TEXTURE_BUFFER_OFFSET = external global i32
@__gl_TEXTURE_BUFFER_SIZE = external global i32
@__gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT = external global i32
@__gl_TEXTURE_VIEW_MIN_LEVEL = external global i32
@__gl_TEXTURE_VIEW_NUM_LEVELS = external global i32
@__gl_TEXTURE_VIEW_MIN_LAYER = external global i32
@__gl_TEXTURE_VIEW_NUM_LAYERS = external global i32
@__gl_TEXTURE_IMMUTABLE_LEVELS = external global i32
@__gl_VERTEX_ATTRIB_BINDING = external global i32
@__gl_VERTEX_ATTRIB_RELATIVE_OFFSET = external global i32
@__gl_VERTEX_BINDING_DIVISOR = external global i32
@__gl_VERTEX_BINDING_OFFSET = external global i32
@__gl_VERTEX_BINDING_STRIDE = external global i32
@__gl_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = external global i32
@__gl_MAX_VERTEX_ATTRIB_BINDINGS = external global i32
@__gl_VERTEX_BINDING_BUFFER = external global i32
@__gl_DISPLAY_LIST = external global i32
@__renderer_vert_shader = global { ptr, [24 x i8] } zeroinitializer, comdat, align 32
@__renderer_frag_shader = global { ptr, [24 x i8] } zeroinitializer, comdat, align 32
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.187
@__os_STD_INPUT_HANDLE = external global i32
@__os_STD_OUTPUT_HANDLE = external global i32
@__os_STD_ERROR_HANDLE = external global i32
@__os_INVALID_HANDLE_VALUE = external global ptr
@__os_CP_UTF7 = external global i32
@__os_CP_UTF8 = external global i32
@__os_MEM_COMMIT = external global i32
@__os_MEM_RESERVE = external global i32
@__os_MEM_RELEASE = external global i32
@__os_PAGE_NOACCESS = external global i32
@__os_PAGE_READONLY = external global i32
@__os_PAGE_READWRITE = external global i32
@__os_PAGE_WRITECOPY = external global i32
@__os_PAGE_EXECUTE = external global i32
@__os_PAGE_EXECUTE_READ = external global i32
@__os_PAGE_EXECUTE_READWRITE = external global i32
@__os_PAGE_EXECUTE_WRITECOPY = external global i32
@__os_PAGE_GUARD = external global i32
@__os_PAGE_NOCACHE = external global i32
@__os_PAGE_WRITECOMBINE = external global i32
@__str_CONTINUE_BIT = external global i8
@___asan_gen__anon_global = internal constant { [127 x i8], [33 x i8] } { [127 x i8] c"#version 330 core\0D\0A\0D\0Alayout (location = 0) in vec3 pos;\0D\0A\0D\0Avoid main()\0D\0A{\0D\0A\09gl_Position = vec4(pos.x, pos.y, pos.z, 1);\0D\0A}\0D\0A\0D\0A\00", [33 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.12 = internal constant { [108 x i8], [52 x i8] } { [108 x i8] c"#version 330 core\0D\0A\0D\0Aout vec4 frag_color;\0D\0A\0D\0Avoid main()\0D\0A{\0D\0A\09frag_color = vec4(0.2, 0.5, 1.0, 1.0);\0D\0A}\0D\0A\0D\0A\00", [52 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.14 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Error compiling % shader\0A%s\00", [36 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.16 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"GL Message: %s\00", [17 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.18 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vertex\00", [25 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.20 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fragment\00", [23 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.22 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Error linking shader\0A%s\00", [40 x i8] zeroinitializer }, comdat, align 32
@llvm.used = appending global [1 x ptr] [ptr @asan.module_ctor], section "llvm.metadata"
@___asan_gen_ = private constant [9 x i8] c"renderer\00", align 1
@___asan_gen_.2 = private unnamed_addr constant [23 x i8] c"__renderer_vert_shader\00", align 1
@__odr_asan_gen___renderer_vert_shader = global i8 0, align 1
@___asan_gen_.3 = private unnamed_addr constant [23 x i8] c"__renderer_frag_shader\00", align 1
@__odr_asan_gen___renderer_frag_shader = global i8 0, align 1
@___asan_gen_.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__asan_global___renderer_vert_shader = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__renderer_vert_shader to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.2 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___renderer_vert_shader to i64) }, section ".ASAN$GL", comdat($__renderer_vert_shader), align 64, !associated !0
@__asan_global___renderer_frag_shader = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @__renderer_frag_shader to i64), i64 8, i64 32, i64 ptrtoint (ptr @___asan_gen_.3 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 ptrtoint (ptr @__odr_asan_gen___renderer_frag_shader to i64) }, section ".ASAN$GL", comdat($__renderer_frag_shader), align 64, !associated !1
@__asan_global_ = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global to i64), i64 127, i64 160, i64 ptrtoint (ptr @___asan_gen_.4 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global), align 64, !associated !2
@__asan_global_.11 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.12 to i64), i64 108, i64 160, i64 ptrtoint (ptr @___asan_gen_.5 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.12), align 64, !associated !3
@__asan_global_.13 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.14 to i64), i64 28, i64 64, i64 ptrtoint (ptr @___asan_gen_.6 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.14), align 64, !associated !4
@__asan_global_.15 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.16 to i64), i64 15, i64 32, i64 ptrtoint (ptr @___asan_gen_.7 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.16), align 64, !associated !5
@__asan_global_.17 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.18 to i64), i64 7, i64 32, i64 ptrtoint (ptr @___asan_gen_.8 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.18), align 64, !associated !6
@__asan_global_.19 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.20 to i64), i64 9, i64 32, i64 ptrtoint (ptr @___asan_gen_.9 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.20), align 64, !associated !7
@__asan_global_.21 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.22 to i64), i64 24, i64 64, i64 ptrtoint (ptr @___asan_gen_.10 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.22), align 64, !associated !8
@llvm.compiler.used = appending global [11 x ptr] [ptr @__renderer_vert_shader, ptr @__renderer_frag_shader, ptr @__asan_global___renderer_vert_shader, ptr @__asan_global___renderer_frag_shader, ptr @__asan_global_, ptr @__asan_global_.11, ptr @__asan_global_.13, ptr @__asan_global_.15, ptr @__asan_global_.17, ptr @__asan_global_.19, ptr @__asan_global_.21], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]

define void @__renderer___GlobalInitializerFunction.0() {
block_0:
  store ptr @___asan_gen__anon_global, ptr @__renderer_vert_shader, align 8
  store ptr @___asan_gen__anon_global.12, ptr @__renderer_frag_shader, align 8
  ret void
}

declare i32 @__main_main()

declare i1 @SDL_Init(i32)

declare ptr @SDL_CreateWindow(ptr, i32, i32, i64)

declare ptr @SDL_GL_CreateContext(ptr)

declare i1 @SDL_GL_SwapWindow(ptr)

declare i1 @SDL_GL_SetAttribute(i32, i32)

declare i1 @SDL_PollEvent(ptr)

declare ptr @SDL_GetError()

declare i1 @SDL_GL_SetSwapInterval(i32)

declare ptr @wglGetProcAddress(ptr)

declare ptr @GetProcAddress(ptr, ptr)

declare ptr @LoadLibraryA(ptr)

declare ptr @__gl_load_gl_fn(ptr)

declare i1 @__gl_load()

define void @__renderer_compile_shader(i32 %0, ptr %1, ptr %2) !dbg !107 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca %string.135, align 8
  %6 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  %7 = alloca [512 x i8], align 1
  %8 = alloca [512 x i8], align 1
  %9 = alloca %slice.190, align 8
  %10 = alloca [2 x %__init_Arg.136], align 8
  %11 = alloca %string.135, align 8
  %12 = alloca %string.135, align 8
  %13 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 1 %7, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %8, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 32, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !121
  call void @llvm.dbg.value(metadata ptr %3, metadata !122, metadata !DIExpression()), !dbg !121
  store ptr %1, ptr %4, align 8, !dbg !121
  call void @llvm.dbg.value(metadata ptr %4, metadata !123, metadata !DIExpression()), !dbg !121
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !121
  call void @llvm.dbg.value(metadata ptr %5, metadata !124, metadata !DIExpression()), !dbg !121
  %14 = load ptr, ptr @__gl_ShaderSource, align 8, !dbg !125
  %15 = load i32, ptr %3, align 4, !dbg !125
  %16 = load ptr, ptr %4, align 8, !dbg !125
  call void %14(i32 %15, i32 1, ptr %16, ptr null), !dbg !125
  %17 = load ptr, ptr @__gl_CompileShader, align 8, !dbg !126
  %18 = load i32, ptr %3, align 4, !dbg !126
  call void %17(i32 %18), !dbg !126
  store i32 0, ptr %6, align 4, !dbg !127
  call void @llvm.dbg.declare(metadata ptr %6, metadata !128, metadata !DIExpression()), !dbg !127
  %19 = load ptr, ptr @__gl_GetShaderiv, align 8, !dbg !130
  %20 = load i32, ptr %3, align 4, !dbg !130
  %21 = load i32, ptr @__gl_COMPILE_STATUS, align 4, !dbg !130
  call void %19(i32 %20, i32 %21, ptr %6), !dbg !130
  %22 = load i32, ptr %6, align 4, !dbg !131
  %23 = icmp eq i32 %22, 0, !dbg !131
  br i1 %23, label %block_1, label %block_2, !dbg !131

block_1:                                          ; preds = %block_0
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %8, ptr align 1 %7, i64 512, i1 false), !dbg !132
  call void @llvm.dbg.declare(metadata ptr %8, metadata !133, metadata !DIExpression()), !dbg !132
  %24 = load ptr, ptr @__gl_GetShaderInfoLog, align 8, !dbg !137
  %25 = load i32, ptr %3, align 4, !dbg !137
  %26 = getelementptr [512 x i8], ptr %8, i64 0, i64 0, !dbg !137
  call void %24(i32 %25, i32 512, ptr null, ptr %26), !dbg !137
  %27 = getelementptr inbounds %slice.190, ptr %9, i32 0, i32 0, !dbg !138
  %28 = getelementptr inbounds %slice.190, ptr %9, i32 0, i32 1, !dbg !138
  store i64 2, ptr %27, align 8, !dbg !138
  store ptr %10, ptr %28, align 8, !dbg !138
  %29 = alloca %string.135, align 8, !dbg !138
  %String = getelementptr inbounds %string.135, ptr %29, i32 0, i32 0, !dbg !138
  %Size = getelementptr inbounds %string.135, ptr %29, i32 0, i32 1, !dbg !138
  store ptr @___asan_gen__anon_global.14, ptr %String, align 8, !dbg !138
  store i64 27, ptr %Size, align 8, !dbg !138
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %29, i64 16, i1 false), !dbg !138
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %5, i64 16, i1 false), !dbg !138
  %30 = getelementptr [2 x %__init_Arg.136], ptr %10, i64 0, i64 0, !dbg !138
  %31 = getelementptr inbounds %__init_Arg.136, ptr %30, i32 0, i32 0, !dbg !138
  %32 = getelementptr inbounds %__init_Arg.136, ptr %30, i32 0, i32 1, !dbg !138
  store i64 1, ptr %31, align 8, !dbg !138
  store ptr %12, ptr %32, align 8, !dbg !138
  %33 = getelementptr [512 x i8], ptr %8, i64 0, i64 0, !dbg !138
  store ptr %33, ptr %13, align 8, !dbg !138
  %34 = getelementptr [2 x %__init_Arg.136], ptr %10, i64 0, i64 1, !dbg !138
  %35 = getelementptr inbounds %__init_Arg.136, ptr %34, i32 0, i32 0, !dbg !138
  %36 = getelementptr inbounds %__init_Arg.136, ptr %34, i32 0, i32 1, !dbg !138
  store i64 59, ptr %35, align 8, !dbg !138
  store ptr %13, ptr %36, align 8, !dbg !138
  call void @__io_println(ptr %11, ptr %9), !dbg !138
  call void @__os_abort(), !dbg !139
  br label %block_3, !dbg !139

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !139

block_3:                                          ; preds = %block_2, %block_1
  ret void, !dbg !140
}

define void @__renderer_gl_callback(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, ptr %5, ptr %6) !dbg !141 {
block_0:
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca %slice.190, align 8
  %15 = alloca [1 x %__init_Arg.136], align 8
  %16 = alloca %string.135, align 8
  %17 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %10, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %11, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  store i32 %0, ptr %7, align 4, !dbg !145
  call void @llvm.dbg.value(metadata ptr %7, metadata !146, metadata !DIExpression()), !dbg !145
  store i32 %1, ptr %8, align 4, !dbg !145
  call void @llvm.dbg.value(metadata ptr %8, metadata !147, metadata !DIExpression()), !dbg !145
  store i32 %2, ptr %9, align 4, !dbg !145
  call void @llvm.dbg.value(metadata ptr %9, metadata !148, metadata !DIExpression()), !dbg !145
  store i32 %3, ptr %10, align 4, !dbg !145
  call void @llvm.dbg.value(metadata ptr %10, metadata !149, metadata !DIExpression()), !dbg !145
  store i32 %4, ptr %11, align 4, !dbg !145
  call void @llvm.dbg.value(metadata ptr %11, metadata !150, metadata !DIExpression()), !dbg !145
  store ptr %5, ptr %12, align 8, !dbg !145
  call void @llvm.dbg.value(metadata ptr %12, metadata !151, metadata !DIExpression()), !dbg !145
  store ptr %6, ptr %13, align 8, !dbg !145
  call void @llvm.dbg.value(metadata ptr %13, metadata !152, metadata !DIExpression()), !dbg !145
  %18 = getelementptr inbounds %slice.190, ptr %14, i32 0, i32 0, !dbg !153
  %19 = getelementptr inbounds %slice.190, ptr %14, i32 0, i32 1, !dbg !153
  store i64 1, ptr %18, align 8, !dbg !153
  store ptr %15, ptr %19, align 8, !dbg !153
  %20 = alloca %string.135, align 8, !dbg !153
  %String = getelementptr inbounds %string.135, ptr %20, i32 0, i32 0, !dbg !153
  %Size = getelementptr inbounds %string.135, ptr %20, i32 0, i32 1, !dbg !153
  store ptr @___asan_gen__anon_global.16, ptr %String, align 8, !dbg !153
  store i64 14, ptr %Size, align 8, !dbg !153
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %20, i64 16, i1 false), !dbg !153
  %21 = load ptr, ptr %12, align 8, !dbg !153
  store ptr %21, ptr %17, align 8, !dbg !153
  %22 = getelementptr [1 x %__init_Arg.136], ptr %15, i64 0, i64 0, !dbg !153
  %23 = getelementptr inbounds %__init_Arg.136, ptr %22, i32 0, i32 0, !dbg !153
  %24 = getelementptr inbounds %__init_Arg.136, ptr %22, i32 0, i32 1, !dbg !153
  store i64 59, ptr %23, align 8, !dbg !153
  store ptr %17, ptr %24, align 8, !dbg !153
  call void @__io_println(ptr %16, ptr %14), !dbg !153
  ret void, !dbg !154
}

define void @__renderer_create_ctx(ptr %0) !dbg !155 {
block_0:
  %1 = alloca %__renderer_ctx.158, align 8
  %2 = alloca %__renderer_ctx.158, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %string.135, align 8
  %6 = alloca %string.135, align 8
  %7 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 12, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 12, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  %8 = alloca [512 x i8], align 1
  %9 = alloca [512 x i8], align 1
  %10 = alloca %slice.190, align 8
  %11 = alloca [1 x %__init_Arg.136], align 8
  %12 = alloca %string.135, align 8
  %13 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 1 %8, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %9, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %2, ptr align 4 %1, i64 12, i1 false), !dbg !163
  call void @llvm.dbg.declare(metadata ptr %2, metadata !164, metadata !DIExpression()), !dbg !163
  %14 = load ptr, ptr @__gl_GenVertexArrays, align 8, !dbg !165
  %15 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 0, !dbg !165
  call void %14(i32 1, ptr %15), !dbg !165
  %16 = load ptr, ptr @__gl_GenBuffers, align 8, !dbg !166
  %17 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 1, !dbg !166
  call void %16(i32 1, ptr %17), !dbg !166
  %18 = load ptr, ptr @__gl_CreateShader, align 8, !dbg !167
  %19 = load i32, ptr @__gl_VERTEX_SHADER, align 4, !dbg !167
  %20 = call i32 %18(i32 %19), !dbg !167
  store i32 %20, ptr %3, align 4, !dbg !167
  call void @llvm.dbg.declare(metadata ptr %3, metadata !168, metadata !DIExpression()), !dbg !167
  %21 = load ptr, ptr @__gl_CreateShader, align 8, !dbg !169
  %22 = load i32, ptr @__gl_FRAGMENT_SHADER, align 4, !dbg !169
  %23 = call i32 %21(i32 %22), !dbg !169
  store i32 %23, ptr %4, align 4, !dbg !169
  call void @llvm.dbg.declare(metadata ptr %4, metadata !170, metadata !DIExpression()), !dbg !169
  %24 = load i32, ptr %3, align 4, !dbg !171
  %25 = alloca %string.135, align 8, !dbg !171
  %String = getelementptr inbounds %string.135, ptr %25, i32 0, i32 0, !dbg !171
  %Size = getelementptr inbounds %string.135, ptr %25, i32 0, i32 1, !dbg !171
  store ptr @___asan_gen__anon_global.18, ptr %String, align 8, !dbg !171
  store i64 6, ptr %Size, align 8, !dbg !171
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %25, i64 16, i1 false), !dbg !171
  call void @__renderer_compile_shader(i32 %24, ptr @__renderer_vert_shader, ptr %5), !dbg !171
  %26 = load i32, ptr %4, align 4, !dbg !172
  %27 = alloca %string.135, align 8, !dbg !172
  %String1 = getelementptr inbounds %string.135, ptr %27, i32 0, i32 0, !dbg !172
  %Size2 = getelementptr inbounds %string.135, ptr %27, i32 0, i32 1, !dbg !172
  store ptr @___asan_gen__anon_global.20, ptr %String1, align 8, !dbg !172
  store i64 8, ptr %Size2, align 8, !dbg !172
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %27, i64 16, i1 false), !dbg !172
  call void @__renderer_compile_shader(i32 %26, ptr @__renderer_frag_shader, ptr %6), !dbg !172
  %28 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 2, !dbg !173
  %29 = load ptr, ptr @__gl_CreateProgram, align 8, !dbg !173
  %30 = call i32 %29(), !dbg !173
  store i32 %30, ptr %28, align 4, !dbg !173
  %31 = load ptr, ptr @__gl_AttachShader, align 8, !dbg !174
  %32 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 2, !dbg !174
  %33 = load i32, ptr %32, align 4, !dbg !174
  %34 = load i32, ptr %3, align 4, !dbg !174
  call void %31(i32 %33, i32 %34), !dbg !174
  %35 = load ptr, ptr @__gl_AttachShader, align 8, !dbg !175
  %36 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 2, !dbg !175
  %37 = load i32, ptr %36, align 4, !dbg !175
  %38 = load i32, ptr %4, align 4, !dbg !175
  call void %35(i32 %37, i32 %38), !dbg !175
  %39 = load ptr, ptr @__gl_LinkProgram, align 8, !dbg !176
  %40 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 2, !dbg !176
  %41 = load i32, ptr %40, align 4, !dbg !176
  call void %39(i32 %41), !dbg !176
  %42 = load ptr, ptr @__gl_Disable, align 8, !dbg !177
  %43 = load i32, ptr @__gl_DEPTH_TEST, align 4, !dbg !177
  call void %42(i32 %43), !dbg !177
  %44 = load ptr, ptr @__gl_Enable, align 8, !dbg !178
  %45 = load i32, ptr @__gl_DEBUG_OUTPUT, align 4, !dbg !178
  call void %44(i32 %45), !dbg !178
  %46 = load ptr, ptr @__gl_Enable, align 8, !dbg !179
  %47 = load i32, ptr @__gl_DEBUG_OUTPUT_SYNCHRONOUS, align 4, !dbg !179
  call void %46(i32 %47), !dbg !179
  %48 = load ptr, ptr @__gl_DebugMessageCallback, align 8, !dbg !180
  call void %48(ptr @__renderer_gl_callback, ptr null), !dbg !180
  %49 = load ptr, ptr @__gl_DebugMessageControl, align 8, !dbg !181
  %50 = load i32, ptr @__gl_DONT_CARE, align 4, !dbg !181
  %51 = load i32, ptr @__gl_DONT_CARE, align 4, !dbg !181
  %52 = load i32, ptr @__gl_DEBUG_SEVERITY_MEDIUM, align 4, !dbg !181
  call void %49(i32 %50, i32 %51, i32 %52, i32 0, ptr null, i1 true), !dbg !181
  store i32 0, ptr %7, align 4, !dbg !182
  call void @llvm.dbg.declare(metadata ptr %7, metadata !183, metadata !DIExpression()), !dbg !182
  %53 = load ptr, ptr @__gl_GetProgramiv, align 8, !dbg !184
  %54 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 2, !dbg !184
  %55 = load i32, ptr %54, align 4, !dbg !184
  %56 = load i32, ptr @__gl_LINK_STATUS, align 4, !dbg !184
  call void %53(i32 %55, i32 %56, ptr %7), !dbg !184
  %57 = load i32, ptr %7, align 4, !dbg !185
  %58 = icmp eq i32 %57, 0, !dbg !185
  br i1 %58, label %block_1, label %block_2, !dbg !185

block_1:                                          ; preds = %block_0
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %9, ptr align 1 %8, i64 512, i1 false), !dbg !186
  call void @llvm.dbg.declare(metadata ptr %9, metadata !187, metadata !DIExpression()), !dbg !186
  %59 = load ptr, ptr @__gl_GetProgramInfoLog, align 8, !dbg !188
  %60 = getelementptr inbounds %__renderer_ctx.158, ptr %2, i32 0, i32 2, !dbg !188
  %61 = load i32, ptr %60, align 4, !dbg !188
  %62 = getelementptr [512 x i8], ptr %9, i64 0, i64 0, !dbg !188
  call void %59(i32 %61, i32 512, ptr null, ptr %62), !dbg !188
  %63 = getelementptr inbounds %slice.190, ptr %10, i32 0, i32 0, !dbg !189
  %64 = getelementptr inbounds %slice.190, ptr %10, i32 0, i32 1, !dbg !189
  store i64 1, ptr %63, align 8, !dbg !189
  store ptr %11, ptr %64, align 8, !dbg !189
  %65 = alloca %string.135, align 8, !dbg !189
  %String3 = getelementptr inbounds %string.135, ptr %65, i32 0, i32 0, !dbg !189
  %Size4 = getelementptr inbounds %string.135, ptr %65, i32 0, i32 1, !dbg !189
  store ptr @___asan_gen__anon_global.22, ptr %String3, align 8, !dbg !189
  store i64 23, ptr %Size4, align 8, !dbg !189
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %65, i64 16, i1 false), !dbg !189
  %66 = getelementptr [512 x i8], ptr %9, i64 0, i64 0, !dbg !189
  store ptr %66, ptr %13, align 8, !dbg !189
  %67 = getelementptr [1 x %__init_Arg.136], ptr %11, i64 0, i64 0, !dbg !189
  %68 = getelementptr inbounds %__init_Arg.136, ptr %67, i32 0, i32 0, !dbg !189
  %69 = getelementptr inbounds %__init_Arg.136, ptr %67, i32 0, i32 1, !dbg !189
  store i64 59, ptr %68, align 8, !dbg !189
  store ptr %13, ptr %69, align 8, !dbg !189
  call void @__io_println(ptr %12, ptr %10), !dbg !189
  call void @__os_abort(), !dbg !190
  br label %block_3, !dbg !190

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !190

block_3:                                          ; preds = %block_2, %block_1
  %70 = load ptr, ptr @__gl_DeleteShader, align 8, !dbg !191
  %71 = load i32, ptr %3, align 4, !dbg !191
  call void %70(i32 %71), !dbg !191
  %72 = load ptr, ptr @__gl_DeleteShader, align 8, !dbg !192
  %73 = load i32, ptr %4, align 4, !dbg !192
  call void %72(i32 %73), !dbg !192
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %0, ptr align 4 %2, i64 12, i1 false), !dbg !193
  ret void, !dbg !193
}

define void @__renderer_draw_verts(ptr %0, ptr %1) !dbg !194 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %slice.185, align 8
  %4 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !209
  call void @llvm.dbg.value(metadata ptr %2, metadata !210, metadata !DIExpression()), !dbg !209
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !209
  call void @llvm.dbg.value(metadata ptr %3, metadata !211, metadata !DIExpression()), !dbg !209
  store i64 0, ptr %4, align 8, !dbg !212
  call void @llvm.dbg.declare(metadata ptr %4, metadata !213, metadata !DIExpression()), !dbg !212
  %5 = load ptr, ptr @__gl_BindVertexArray, align 8, !dbg !214
  %6 = load ptr, ptr %2, align 8, !dbg !214
  %7 = getelementptr inbounds %__renderer_ctx.158, ptr %6, i32 0, i32 0, !dbg !214
  %8 = load i32, ptr %7, align 4, !dbg !214
  call void %5(i32 %8), !dbg !214
  %9 = load ptr, ptr @__gl_VertexAttribPointer, align 8, !dbg !215
  %10 = load i32, ptr @__gl_FLOAT, align 4, !dbg !215
  %11 = load i64, ptr %4, align 8, !dbg !215
  %12 = inttoptr i64 %11 to ptr, !dbg !215
  call void %9(i32 0, i32 3, i32 %10, i1 false, i32 12, ptr %12), !dbg !215
  %13 = load ptr, ptr @__gl_EnableVertexAttribArray, align 8, !dbg !216
  call void %13(i32 0), !dbg !216
  %14 = load ptr, ptr @__gl_BindBuffer, align 8, !dbg !217
  %15 = load i32, ptr @__gl_ARRAY_BUFFER, align 4, !dbg !217
  %16 = load ptr, ptr %2, align 8, !dbg !217
  %17 = getelementptr inbounds %__renderer_ctx.158, ptr %16, i32 0, i32 1, !dbg !217
  %18 = load i32, ptr %17, align 4, !dbg !217
  call void %14(i32 %15, i32 %18), !dbg !217
  %19 = load ptr, ptr @__gl_BufferData, align 8, !dbg !218
  %20 = load i32, ptr @__gl_ARRAY_BUFFER, align 4, !dbg !218
  %21 = getelementptr inbounds %slice.185, ptr %3, i32 0, i32 0, !dbg !218
  %22 = load i64, ptr %21, align 8, !dbg !218
  %23 = mul i64 %22, 12, !dbg !218
  %24 = getelementptr inbounds %slice.185, ptr %3, i32 0, i32 1, !dbg !218
  %25 = load ptr, ptr %24, align 8, !dbg !218
  %26 = load i32, ptr @__gl_STATIC_DRAW, align 4, !dbg !218
  call void %19(i32 %20, i64 %23, ptr %25, i32 %26), !dbg !218
  %27 = load ptr, ptr @__gl_UseProgram, align 8, !dbg !219
  %28 = load ptr, ptr %2, align 8, !dbg !219
  %29 = getelementptr inbounds %__renderer_ctx.158, ptr %28, i32 0, i32 2, !dbg !219
  %30 = load i32, ptr %29, align 4, !dbg !219
  call void %27(i32 %30), !dbg !219
  %31 = load ptr, ptr @__gl_DrawArrays, align 8, !dbg !220
  %32 = load i32, ptr @__gl_TRIANGLES, align 4, !dbg !220
  %33 = getelementptr inbounds %slice.185, ptr %3, i32 0, i32 0, !dbg !220
  %34 = load i64, ptr %33, align 8, !dbg !220
  %35 = trunc i64 %34 to i32, !dbg !220
  call void %31(i32 %32, i32 0, i32 %35), !dbg !220
  ret void, !dbg !221
}

declare void @__graph_draw_line(i64, i64, ptr)

declare void @__graph_draw_graph(ptr, float, float, float, float)

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

declare void @__os_abort()

declare void @__os_assert(i1, ptr)

declare void @__os_print(ptr, i32)

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

declare void @__io_push_string(ptr, ptr)

declare void @__io_format_uint(ptr, i64)

declare void @__io_format_int(ptr, i64)

declare void @__io_print_typetype(ptr, ptr)

declare void @__io_print_type(ptr, ptr)

declare void @__io_builder_to_string(ptr, ptr)

declare void @__io_print_type_with_formatter(ptr, i32, ptr)

declare void @__io___internal_print(ptr, ptr, ptr)

declare void @__io_print(ptr, ptr)

declare void @__io_println(ptr, ptr)

declare i32 @__io_get_next(ptr)

declare void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64, ptr, float, i32)

declare void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64, ptr, double, i32)

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @__mem_arena_alloc(i64, ptr)

declare void @__mem_no_free(ptr, ptr)

declare void @__mem_create_scratch(ptr, i64)

declare void @__mem_destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_add@*[]u32_u32_@void"(ptr, i32)

declare void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr, i64, ptr)

declare void @"__array_add@*[]u8_u8_@void"(ptr, i8)

declare void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr, i64, ptr)

declare void @"__array_free@*[]u32_@void"(ptr)

declare void @"__array_free@*[]u8_@void"(ptr)

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @__asan_before_dynamic_init(i64)

declare void @__asan_after_dynamic_init()

declare void @__asan_register_globals(i64, i64)

declare void @__asan_unregister_globals(i64, i64)

declare void @__asan_register_image_globals(i64)

declare void @__asan_unregister_image_globals(i64)

declare void @__asan_register_elf_globals(i64, i64, i64)

declare void @__asan_unregister_elf_globals(i64, i64, i64)

declare void @__asan_init()

; Function Attrs: nounwind
define internal void @asan.module_ctor() #3 {
  call void @__asan_init()
  call void @__asan_version_mismatch_check_v8()
  ret void
}

declare void @__asan_version_mismatch_check_v8()

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!9}
!llvm.module.flags = !{!105, !106}

!0 = !{ptr @__renderer_vert_shader}
!1 = !{ptr @__renderer_frag_shader}
!2 = !{ptr @___asan_gen__anon_global}
!3 = !{ptr @___asan_gen__anon_global.12}
!4 = !{ptr @___asan_gen__anon_global.14}
!5 = !{ptr @___asan_gen__anon_global.16}
!6 = !{ptr @___asan_gen__anon_global.18}
!7 = !{ptr @___asan_gen__anon_global.20}
!8 = !{ptr @___asan_gen__anon_global.22}
!9 = distinct !DICompileUnit(language: DW_LANG_C99, file: !10, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !11, splitDebugInlining: false)
!10 = !DIFile(filename: "renderer.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!11 = !{!12, !24, !45, !54, !59, !63, !71, !75, !12, !24, !45, !54, !59, !63}
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !10, file: !10, size: 64, align: 64, elements: !13)
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!14 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!20 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!21 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!22 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!23 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !10, file: !10, size: 64, align: 64, elements: !25)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44}
!26 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!29 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!30 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!31 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!32 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!33 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!34 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!35 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!36 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!37 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!38 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!39 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!40 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!41 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!42 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!43 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!44 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !10, file: !10, size: 32, align: 32, elements: !46)
!46 = !{!47, !48, !49, !50, !51, !52, !53}
!47 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!50 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!51 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!52 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!53 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !10, file: !10, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !10, file: !10, size: 64, align: 64, elements: !60)
!60 = !{!61, !62}
!61 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !10, file: !10, size: 32, align: 32, elements: !64)
!64 = !{!65, !66, !67, !68, !69, !70}
!65 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!69 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!70 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_EventType", scope: !10, file: !10, size: 32, align: 32, elements: !72)
!72 = !{!73, !74}
!73 = !DIEnumerator(name: "FIRST", value: 0)
!74 = !DIEnumerator(name: "QUIT", value: 256, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_GLattr", scope: !10, file: !10, size: 32, align: 32, elements: !76)
!76 = !{!77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!77 = !DIEnumerator(name: "RED_SIZE", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "GREEN_SIZE", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "BLUE_SIZE", value: 2, isUnsigned: true)
!80 = !DIEnumerator(name: "ALPHA_SIZE", value: 3, isUnsigned: true)
!81 = !DIEnumerator(name: "BUFFER_SIZE", value: 4, isUnsigned: true)
!82 = !DIEnumerator(name: "DOUBLEBUFFER", value: 5, isUnsigned: true)
!83 = !DIEnumerator(name: "DEPTH_SIZE", value: 6, isUnsigned: true)
!84 = !DIEnumerator(name: "STENCIL_SIZE", value: 7, isUnsigned: true)
!85 = !DIEnumerator(name: "ACCUM_RED_SIZE", value: 8, isUnsigned: true)
!86 = !DIEnumerator(name: "ACCUM_GREEN_SIZE", value: 9, isUnsigned: true)
!87 = !DIEnumerator(name: "ACCUM_BLUE_SIZE", value: 10, isUnsigned: true)
!88 = !DIEnumerator(name: "ACCUM_ALPHA_SIZE", value: 11, isUnsigned: true)
!89 = !DIEnumerator(name: "STEREO", value: 12, isUnsigned: true)
!90 = !DIEnumerator(name: "MULTISAMPLEBUFFERS", value: 13, isUnsigned: true)
!91 = !DIEnumerator(name: "MULTISAMPLESAMPLES", value: 14, isUnsigned: true)
!92 = !DIEnumerator(name: "ACCELERATED_VISUAL", value: 15, isUnsigned: true)
!93 = !DIEnumerator(name: "RETAINED_BACKING", value: 16, isUnsigned: true)
!94 = !DIEnumerator(name: "CONTEXT_MAJOR_VERSION", value: 17, isUnsigned: true)
!95 = !DIEnumerator(name: "CONTEXT_MINOR_VERSION", value: 18, isUnsigned: true)
!96 = !DIEnumerator(name: "CONTEXT_FLAGS", value: 19, isUnsigned: true)
!97 = !DIEnumerator(name: "CONTEXT_PROFILE_MASK", value: 20, isUnsigned: true)
!98 = !DIEnumerator(name: "SHARE_WITH_CURRENT_CONTEXT", value: 21, isUnsigned: true)
!99 = !DIEnumerator(name: "FRAMEBUFFER_SRGB_CAPABLE", value: 22, isUnsigned: true)
!100 = !DIEnumerator(name: "CONTEXT_RELEASE_BEHAVIOR", value: 23, isUnsigned: true)
!101 = !DIEnumerator(name: "CONTEXT_RESET_NOTIFICATION", value: 24, isUnsigned: true)
!102 = !DIEnumerator(name: "CONTEXT_NO_ERROR", value: 25, isUnsigned: true)
!103 = !DIEnumerator(name: "FLOATBUFFERS", value: 26, isUnsigned: true)
!104 = !DIEnumerator(name: "EGL_PLATFORM", value: 27, isUnsigned: true)
!105 = !{i32 2, !"CodeView", i32 1}
!106 = !{i32 2, !"Debug Info Version", i32 3}
!107 = distinct !DISubprogram(name: "compile_shader", linkageName: "__renderer_compile_shader", scope: !10, file: !10, line: 32, type: !108, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !120)
!108 = !DISubroutineType(types: !109)
!109 = !{null, !110, !111, !114}
!110 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "**u8", baseType: !112, size: 64, align: 64, dwarfAddressSpace: 0)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !113, size: 64, align: 64, dwarfAddressSpace: 0)
!113 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !115, file: !115, size: 128, elements: !116)
!115 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!116 = !{!117, !118}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !115, file: !115, baseType: !112, size: 64, align: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !115, file: !115, baseType: !119, size: 64, align: 64, offset: 64)
!119 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!120 = !{}
!121 = !DILocation(line: 32, scope: !107)
!122 = !DILocalVariable(name: "shader", scope: !107, file: !10, line: 32, type: !110)
!123 = !DILocalVariable(name: "src", arg: 1, scope: !107, file: !10, line: 32, type: !111)
!124 = !DILocalVariable(name: "name", arg: 2, scope: !107, file: !10, line: 32, type: !114)
!125 = !DILocation(line: 33, scope: !107)
!126 = !DILocation(line: 34, scope: !107)
!127 = !DILocation(line: 36, scope: !107)
!128 = !DILocalVariable(name: "success", scope: !107, file: !10, line: 36, type: !129)
!129 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!130 = !DILocation(line: 37, scope: !107)
!131 = !DILocation(line: 38, scope: !107)
!132 = !DILocation(line: 39, scope: !107)
!133 = !DILocalVariable(name: "info_log", scope: !107, file: !10, line: 39, type: !134)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 4096, align: 8, elements: !135)
!135 = !{!136}
!136 = !DISubrange(count: 512, lowerBound: 0)
!137 = !DILocation(line: 40, scope: !107)
!138 = !DILocation(line: 41, scope: !107)
!139 = !DILocation(line: 42, scope: !107)
!140 = !DILocation(line: 44, scope: !107)
!141 = distinct !DISubprogram(name: "gl_callback", linkageName: "__renderer_gl_callback", scope: !10, file: !10, line: 46, type: !142, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !120)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !110, !110, !110, !110, !110, !112, !144}
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!145 = !DILocation(line: 46, scope: !141)
!146 = !DILocalVariable(name: "src", scope: !141, file: !10, line: 46, type: !110)
!147 = !DILocalVariable(name: "t", arg: 1, scope: !141, file: !10, line: 46, type: !110)
!148 = !DILocalVariable(name: "id", arg: 2, scope: !141, file: !10, line: 46, type: !110)
!149 = !DILocalVariable(name: "severity", arg: 3, scope: !141, file: !10, line: 46, type: !110)
!150 = !DILocalVariable(name: "len", arg: 4, scope: !141, file: !10, line: 46, type: !110)
!151 = !DILocalVariable(name: "msg", arg: 5, scope: !141, file: !10, line: 46, type: !112)
!152 = !DILocalVariable(name: "user", arg: 6, scope: !141, file: !10, line: 46, type: !144)
!153 = !DILocation(line: 47, scope: !141)
!154 = !DILocation(line: 48, scope: !141)
!155 = distinct !DISubprogram(name: "create_ctx", linkageName: "__renderer_create_ctx", scope: !10, file: !10, line: 50, type: !156, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !120)
!156 = !DISubroutineType(types: !157)
!157 = !{!158}
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "__renderer_ctx", scope: !10, file: !10, size: 96, elements: !159)
!159 = !{!160, !161, !162}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "vao", scope: !10, file: !10, baseType: !110, size: 32, align: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "vbo", scope: !10, file: !10, baseType: !110, size: 32, align: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !10, file: !10, baseType: !110, size: 32, align: 32, offset: 64)
!163 = !DILocation(line: 51, scope: !155)
!164 = !DILocalVariable(name: "result", scope: !155, file: !10, line: 51, type: !158)
!165 = !DILocation(line: 52, scope: !155)
!166 = !DILocation(line: 53, scope: !155)
!167 = !DILocation(line: 54, scope: !155)
!168 = !DILocalVariable(name: "vert_shader_gl", scope: !155, file: !10, line: 54, type: !110)
!169 = !DILocation(line: 55, scope: !155)
!170 = !DILocalVariable(name: "frag_shader_gl", scope: !155, file: !10, line: 55, type: !110)
!171 = !DILocation(line: 56, scope: !155)
!172 = !DILocation(line: 57, scope: !155)
!173 = !DILocation(line: 59, scope: !155)
!174 = !DILocation(line: 60, scope: !155)
!175 = !DILocation(line: 61, scope: !155)
!176 = !DILocation(line: 62, scope: !155)
!177 = !DILocation(line: 63, scope: !155)
!178 = !DILocation(line: 65, scope: !155)
!179 = !DILocation(line: 66, scope: !155)
!180 = !DILocation(line: 67, scope: !155)
!181 = !DILocation(line: 68, scope: !155)
!182 = !DILocation(line: 70, scope: !155)
!183 = !DILocalVariable(name: "success", scope: !155, file: !10, line: 70, type: !129)
!184 = !DILocation(line: 71, scope: !155)
!185 = !DILocation(line: 72, scope: !155)
!186 = !DILocation(line: 73, scope: !155)
!187 = !DILocalVariable(name: "info_log", scope: !155, file: !10, line: 73, type: !134)
!188 = !DILocation(line: 74, scope: !155)
!189 = !DILocation(line: 75, scope: !155)
!190 = !DILocation(line: 76, scope: !155)
!191 = !DILocation(line: 78, scope: !155)
!192 = !DILocation(line: 79, scope: !155)
!193 = !DILocation(line: 81, scope: !155)
!194 = distinct !DISubprogram(name: "draw_verts", linkageName: "__renderer_draw_verts", scope: !10, file: !10, line: 84, type: !195, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !120)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !197, !198}
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__renderer_ctx", baseType: !158, size: 64, align: 64, dwarfAddressSpace: 0)
!198 = !DICompositeType(tag: DW_TAG_structure_type, scope: !10, file: !10, size: 128, align: 64, elements: !199)
!199 = !{!200, !201}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10, file: !10, baseType: !119, size: 64, align: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10, file: !10, baseType: !202, size: 64, align: 64, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__renderer_vec3", baseType: !203, size: 64, align: 64, dwarfAddressSpace: 0)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "__renderer_vec3", scope: !10, file: !10, size: 96, elements: !204)
!204 = !{!205, !207, !208}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !10, file: !10, baseType: !206, size: 32, align: 32)
!206 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !10, file: !10, baseType: !206, size: 32, align: 32, offset: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !10, file: !10, baseType: !206, size: 32, align: 32, offset: 64)
!209 = !DILocation(line: 84, scope: !194)
!210 = !DILocalVariable(name: "c", scope: !194, file: !10, line: 84, type: !197)
!211 = !DILocalVariable(name: "verts", arg: 1, scope: !194, file: !10, line: 84, type: !198)
!212 = !DILocation(line: 85, scope: !194)
!213 = !DILocalVariable(name: "offset", scope: !194, file: !10, line: 85, type: !119)
!214 = !DILocation(line: 86, scope: !194)
!215 = !DILocation(line: 87, scope: !194)
!216 = !DILocation(line: 88, scope: !194)
!217 = !DILocation(line: 89, scope: !194)
!218 = !DILocation(line: 90, scope: !194)
!219 = !DILocation(line: 91, scope: !194)
!220 = !DILocation(line: 92, scope: !194)
!221 = !DILocation(line: 93, scope: !194)
