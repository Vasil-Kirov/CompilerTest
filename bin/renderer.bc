; ModuleID = 'renderer'
source_filename = "renderer.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%slice.203 = type { i64, ptr }
%string.146 = type { ptr, i64 }
%slice.206 = type { i64, ptr }
%__init_Arg.147 = type { i64, ptr }
%__renderer_ctx.171 = type { i32, i32 }
%__mem_Allocator.161 = type { ptr, ptr, ptr }
%__renderer_Framebuffer.172 = type { i32, i32, i32 }
%slice.201 = type { i64, ptr }
%__math_v2.173 = type { float, float }
%__math_v3.174 = type { float, float, float }

$___asan_gen__anon_global = comdat nodeduplicate

$___asan_gen__anon_global.17 = comdat nodeduplicate

$___asan_gen__anon_global.19 = comdat nodeduplicate

$___asan_gen__anon_global.21 = comdat nodeduplicate

$___asan_gen__anon_global.23 = comdat nodeduplicate

$___asan_gen__anon_global.25 = comdat nodeduplicate

$___asan_gen__anon_global.27 = comdat nodeduplicate

$___asan_gen__anon_global.29 = comdat nodeduplicate

$___asan_gen__anon_global.31 = comdat nodeduplicate

$___asan_gen__anon_global.33 = comdat nodeduplicate

$___asan_gen__anon_global.35 = comdat nodeduplicate

$___asan_gen__anon_global.37 = comdat nodeduplicate

$___asan_gen__anon_global.39 = comdat nodeduplicate

$___asan_gen__anon_global.41 = comdat nodeduplicate

@__main_WIDTH = external global i32
@__main_HEIGHT = external global i32
@__main_vert_shader = external global ptr
@__main_frag_shader = external global ptr
@__sdl_INIT_AUDIO = external global i32
@__sdl_INIT_VIDEO = external global i32
@__sdl_INIT_JOYSTICK = external global i32
@__sdl_INIT_HAPTIC = external global i32
@__sdl_INIT_GAMEPAD = external global i32
@__sdl_INIT_EVENTS = external global i32
@__sdl_INIT_SENSOR = external global i32
@__sdl_INIT_CAMERA = external global i32
@__sdl_WINDOW_FULLSCREEN = external global i64
@__sdl_WINDOW_OPENGL = external global i64
@__sdl_WINDOW_OCCLUDED = external global i64
@__sdl_WINDOW_HIDDEN = external global i64
@__sdl_WINDOW_BORDERLESS = external global i64
@__sdl_WINDOW_RESIZABLE = external global i64
@__sdl_WINDOW_MINIMIZED = external global i64
@__sdl_WINDOW_MAXIMIZED = external global i64
@__sdl_WINDOW_MOUSE_GRABBED = external global i64
@__sdl_WINDOW_INPUT_FOCUS = external global i64
@__sdl_WINDOW_MOUSE_FOCUS = external global i64
@__sdl_WINDOW_EXTERNAL = external global i64
@__sdl_WINDOW_MODAL = external global i64
@__sdl_WINDOW_HIGH_PIXEL_DENSITY = external global i64
@__sdl_WINDOW_MOUSE_CAPTURE = external global i64
@__sdl_WINDOW_MOUSE_RELATIVE_MODE = external global i64
@__sdl_WINDOW_ALWAYS_ON_TOP = external global i64
@__sdl_WINDOW_UTILITY = external global i64
@__sdl_WINDOW_TOOLTIP = external global i64
@__sdl_WINDOW_POPUP_MENU = external global i64
@__sdl_WINDOW_KEYBOARD_GRABBED = external global i64
@__sdl_WINDOW_VULKAN = external global i64
@__sdl_WINDOW_METAL = external global i64
@__sdl_WINDOW_TRANSPARENT = external global i64
@__sdl_WINDOW_NOT_FOCUSABLE = external global i64
@__sdl_BUTTON_LEFT = external global i32
@__sdl_BUTTON_MIDDLE = external global i32
@__sdl_BUTTON_RIGHT = external global i32
@__sdl_BUTTON_X1 = external global i32
@__sdl_BUTTON_X2 = external global i32
@__sdl_GL_CONTEXT_PROFILE_CORE = external global i32
@__sdl_GL_CONTEXT_PROFILE_COMPATIBILITY = external global i32
@__sdl_GL_CONTEXT_PROFILE_ES = external global i32
@__sdl_GL_CONTEXT_DEBUG_FLAG = external global i32
@__sdl_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = external global i32
@__sdl_GL_CONTEXT_ROBUST_ACCESS_FLAG = external global i32
@__sdl_GL_CONTEXT_RESET_ISOLATION_FLAG = external global i32
@__gl_dll_module = external global ptr
@__gl_ClearColor = external global ptr
@__gl_Clear = external global ptr
@__gl_GenVertexArrays = external global ptr
@__gl_BindVertexArray = external global ptr
@__gl_DeleteVertexArrays = external global ptr
@__gl_EnableVertexAttribArray = external global ptr
@__gl_DisableVertexAttribArray = external global ptr
@__gl_VertexAttribPointer = external global ptr
@__gl_GenBuffers = external global ptr
@__gl_BindBuffer = external global ptr
@__gl_BufferData = external global ptr
@__gl_BufferSubData = external global ptr
@__gl_DeleteBuffers = external global ptr
@__gl_GenFramebuffers = external global ptr
@__gl_CheckFramebufferStatus = external global ptr
@__gl_BindFramebuffer = external global ptr
@__gl_DeleteFramebuffers = external global ptr
@__gl_FramebufferTexture2D = external global ptr
@__gl_FramebufferRenderbuffer = external global ptr
@__gl_GenRenderbuffers = external global ptr
@__gl_BindRenderbuffer = external global ptr
@__gl_RenderbufferStorage = external global ptr
@__gl_GenTextures = external global ptr
@__gl_BindTexture = external global ptr
@__gl_TexImage2D = external global ptr
@__gl_TexParameteri = external global ptr
@__gl_Enable = external global ptr
@__gl_Disable = external global ptr
@__gl_CreateShader = external global ptr
@__gl_ShaderSource = external global ptr
@__gl_CompileShader = external global ptr
@__gl_GetShaderiv = external global ptr
@__gl_GetProgramiv = external global ptr
@__gl_GetShaderInfoLog = external global ptr
@__gl_GetProgramInfoLog = external global ptr
@__gl_DeleteShader = external global ptr
@__gl_AttachShader = external global ptr
@__gl_LinkProgram = external global ptr
@__gl_UseProgram = external global ptr
@__gl_CreateProgram = external global ptr
@__gl_DeleteProgram = external global ptr
@__gl_GetUniformLocation = external global ptr
@__gl_Uniform1i = external global ptr
@__gl_Uniform1f = external global ptr
@__gl_Uniform2f = external global ptr
@__gl_Uniform3f = external global ptr
@__gl_UniformMatrix4fv = external global ptr
@__gl_DrawArrays = external global ptr
@__gl_DrawElements = external global ptr
@__gl_Viewport = external global ptr
@__gl_DebugMessageCallback = external global ptr
@__gl_DebugMessageControl = external global ptr
@__gl_LineWidth = external global ptr
@__gl_BlendFunc = external global ptr
@__gl_VERSION_ES_CL_1_0 = external global i32
@__gl_VERSION_ES_CM_1_1 = external global i32
@__gl_VERSION_ES_CL_1_1 = external global i32
@__gl_DEPTH_BUFFER_BIT = external global i32
@__gl_STENCIL_BUFFER_BIT = external global i32
@__gl_COLOR_BUFFER_BIT = external global i32
@__gl_FALSE = external global i32
@__gl_TRUE = external global i32
@__gl_POINTS = external global i32
@__gl_LINES = external global i32
@__gl_LINE_LOOP = external global i32
@__gl_LINE_STRIP = external global i32
@__gl_TRIANGLES = external global i32
@__gl_TRIANGLE_STRIP = external global i32
@__gl_TRIANGLE_FAN = external global i32
@__gl_NEVER = external global i32
@__gl_LESS = external global i32
@__gl_EQUAL = external global i32
@__gl_LEQUAL = external global i32
@__gl_GREATER = external global i32
@__gl_NOTEQUAL = external global i32
@__gl_GEQUAL = external global i32
@__gl_ALWAYS = external global i32
@__gl_ZERO = external global i32
@__gl_ONE = external global i32
@__gl_SRC_COLOR = external global i32
@__gl_ONE_MINUS_SRC_COLOR = external global i32
@__gl_SRC_ALPHA = external global i32
@__gl_ONE_MINUS_SRC_ALPHA = external global i32
@__gl_DST_ALPHA = external global i32
@__gl_ONE_MINUS_DST_ALPHA = external global i32
@__gl_DST_COLOR = external global i32
@__gl_ONE_MINUS_DST_COLOR = external global i32
@__gl_SRC_ALPHA_SATURATE = external global i32
@__gl_CLIP_PLANE0 = external global i32
@__gl_CLIP_PLANE1 = external global i32
@__gl_CLIP_PLANE2 = external global i32
@__gl_CLIP_PLANE3 = external global i32
@__gl_CLIP_PLANE4 = external global i32
@__gl_CLIP_PLANE5 = external global i32
@__gl_FRONT = external global i32
@__gl_BACK = external global i32
@__gl_FRONT_AND_BACK = external global i32
@__gl_FOG = external global i32
@__gl_LIGHTING = external global i32
@__gl_TEXTURE_2D = external global i32
@__gl_CULL_FACE = external global i32
@__gl_ALPHA_TEST = external global i32
@__gl_BLEND = external global i32
@__gl_COLOR_LOGIC_OP = external global i32
@__gl_DITHER = external global i32
@__gl_STENCIL_TEST = external global i32
@__gl_DEPTH_TEST = external global i32
@__gl_POINT_SMOOTH = external global i32
@__gl_LINE_SMOOTH = external global i32
@__gl_SCISSOR_TEST = external global i32
@__gl_COLOR_MATERIAL = external global i32
@__gl_NORMALIZE = external global i32
@__gl_RESCALE_NORMAL = external global i32
@__gl_VERTEX_ARRAY = external global i32
@__gl_NORMAL_ARRAY = external global i32
@__gl_COLOR_ARRAY = external global i32
@__gl_TEXTURE_COORD_ARRAY = external global i32
@__gl_MULTISAMPLE = external global i32
@__gl_SAMPLE_ALPHA_TO_COVERAGE = external global i32
@__gl_SAMPLE_ALPHA_TO_ONE = external global i32
@__gl_SAMPLE_COVERAGE = external global i32
@__gl_NO_ERROR = external global i32
@__gl_INVALID_ENUM = external global i32
@__gl_INVALID_VALUE = external global i32
@__gl_INVALID_OPERATION = external global i32
@__gl_STACK_OVERFLOW = external global i32
@__gl_STACK_UNDERFLOW = external global i32
@__gl_OUT_OF_MEMORY = external global i32
@__gl_EXP = external global i32
@__gl_EXP2 = external global i32
@__gl_FOG_DENSITY = external global i32
@__gl_FOG_START = external global i32
@__gl_FOG_END = external global i32
@__gl_FOG_MODE = external global i32
@__gl_FOG_COLOR = external global i32
@__gl_CW = external global i32
@__gl_CCW = external global i32
@__gl_CURRENT_COLOR = external global i32
@__gl_CURRENT_NORMAL = external global i32
@__gl_CURRENT_TEXTURE_COORDS = external global i32
@__gl_POINT_SIZE = external global i32
@__gl_POINT_SIZE_MIN = external global i32
@__gl_POINT_SIZE_MAX = external global i32
@__gl_POINT_FADE_THRESHOLD_SIZE = external global i32
@__gl_POINT_DISTANCE_ATTENUATION = external global i32
@__gl_SMOOTH_POINT_SIZE_RANGE = external global i32
@__gl_LINE_WIDTH = external global i32
@__gl_SMOOTH_LINE_WIDTH_RANGE = external global i32
@__gl_ALIASED_POINT_SIZE_RANGE = external global i32
@__gl_ALIASED_LINE_WIDTH_RANGE = external global i32
@__gl_CULL_FACE_MODE = external global i32
@__gl_FRONT_FACE = external global i32
@__gl_SHADE_MODEL = external global i32
@__gl_DEPTH_RANGE = external global i32
@__gl_DEPTH_WRITEMASK = external global i32
@__gl_DEPTH_CLEAR_VALUE = external global i32
@__gl_DEPTH_FUNC = external global i32
@__gl_STENCIL_CLEAR_VALUE = external global i32
@__gl_STENCIL_FUNC = external global i32
@__gl_STENCIL_VALUE_MASK = external global i32
@__gl_STENCIL_FAIL = external global i32
@__gl_STENCIL_PASS_DEPTH_FAIL = external global i32
@__gl_STENCIL_PASS_DEPTH_PASS = external global i32
@__gl_STENCIL_REF = external global i32
@__gl_STENCIL_WRITEMASK = external global i32
@__gl_MATRIX_MODE = external global i32
@__gl_VIEWPORT = external global i32
@__gl_MODELVIEW_STACK_DEPTH = external global i32
@__gl_PROJECTION_STACK_DEPTH = external global i32
@__gl_TEXTURE_STACK_DEPTH = external global i32
@__gl_MODELVIEW_MATRIX = external global i32
@__gl_PROJECTION_MATRIX = external global i32
@__gl_TEXTURE_MATRIX = external global i32
@__gl_ALPHA_TEST_FUNC = external global i32
@__gl_ALPHA_TEST_REF = external global i32
@__gl_BLEND_DST = external global i32
@__gl_BLEND_SRC = external global i32
@__gl_LOGIC_OP_MODE = external global i32
@__gl_SCISSOR_BOX = external global i32
@__gl_COLOR_CLEAR_VALUE = external global i32
@__gl_COLOR_WRITEMASK = external global i32
@__gl_MAX_LIGHTS = external global i32
@__gl_MAX_CLIP_PLANES = external global i32
@__gl_MAX_TEXTURE_SIZE = external global i32
@__gl_MAX_MODELVIEW_STACK_DEPTH = external global i32
@__gl_MAX_PROJECTION_STACK_DEPTH = external global i32
@__gl_MAX_TEXTURE_STACK_DEPTH = external global i32
@__gl_MAX_VIEWPORT_DIMS = external global i32
@__gl_MAX_TEXTURE_UNITS = external global i32
@__gl_SUBPIXEL_BITS = external global i32
@__gl_RED_BITS = external global i32
@__gl_GREEN_BITS = external global i32
@__gl_BLUE_BITS = external global i32
@__gl_ALPHA_BITS = external global i32
@__gl_DEPTH_BITS = external global i32
@__gl_STENCIL_BITS = external global i32
@__gl_POLYGON_OFFSET_UNITS = external global i32
@__gl_POLYGON_OFFSET_FILL = external global i32
@__gl_POLYGON_OFFSET_FACTOR = external global i32
@__gl_TEXTURE_BINDING_2D = external global i32
@__gl_VERTEX_ARRAY_SIZE = external global i32
@__gl_VERTEX_ARRAY_TYPE = external global i32
@__gl_VERTEX_ARRAY_STRIDE = external global i32
@__gl_NORMAL_ARRAY_TYPE = external global i32
@__gl_NORMAL_ARRAY_STRIDE = external global i32
@__gl_COLOR_ARRAY_SIZE = external global i32
@__gl_COLOR_ARRAY_TYPE = external global i32
@__gl_COLOR_ARRAY_STRIDE = external global i32
@__gl_TEXTURE_COORD_ARRAY_SIZE = external global i32
@__gl_TEXTURE_COORD_ARRAY_TYPE = external global i32
@__gl_TEXTURE_COORD_ARRAY_STRIDE = external global i32
@__gl_VERTEX_ARRAY_POINTER = external global i32
@__gl_NORMAL_ARRAY_POINTER = external global i32
@__gl_COLOR_ARRAY_POINTER = external global i32
@__gl_TEXTURE_COORD_ARRAY_POINTER = external global i32
@__gl_SAMPLE_BUFFERS = external global i32
@__gl_SAMPLES = external global i32
@__gl_SAMPLE_COVERAGE_VALUE = external global i32
@__gl_SAMPLE_COVERAGE_INVERT = external global i32
@__gl_NUM_COMPRESSED_TEXTURE_FORMATS = external global i32
@__gl_COMPRESSED_TEXTURE_FORMATS = external global i32
@__gl_DONT_CARE = external global i32
@__gl_FASTEST = external global i32
@__gl_NICEST = external global i32
@__gl_PERSPECTIVE_CORRECTION_HINT = external global i32
@__gl_POINT_SMOOTH_HINT = external global i32
@__gl_LINE_SMOOTH_HINT = external global i32
@__gl_FOG_HINT = external global i32
@__gl_GENERATE_MIPMAP_HINT = external global i32
@__gl_LIGHT_MODEL_AMBIENT = external global i32
@__gl_LIGHT_MODEL_TWO_SIDE = external global i32
@__gl_AMBIENT = external global i32
@__gl_DIFFUSE = external global i32
@__gl_SPECULAR = external global i32
@__gl_POSITION = external global i32
@__gl_SPOT_DIRECTION = external global i32
@__gl_SPOT_EXPONENT = external global i32
@__gl_SPOT_CUTOFF = external global i32
@__gl_CONSTANT_ATTENUATION = external global i32
@__gl_LINEAR_ATTENUATION = external global i32
@__gl_QUADRATIC_ATTENUATION = external global i32
@__gl_BYTE = external global i32
@__gl_UNSIGNED_BYTE = external global i32
@__gl_SHORT = external global i32
@__gl_UNSIGNED_SHORT = external global i32
@__gl_FLOAT = external global i32
@__gl_FIXED = external global i32
@__gl_CLEAR = external global i32
@__gl_AND = external global i32
@__gl_AND_REVERSE = external global i32
@__gl_COPY = external global i32
@__gl_AND_INVERTED = external global i32
@__gl_NOOP = external global i32
@__gl_XOR = external global i32
@__gl_OR = external global i32
@__gl_NOR = external global i32
@__gl_EQUIV = external global i32
@__gl_INVERT = external global i32
@__gl_OR_REVERSE = external global i32
@__gl_COPY_INVERTED = external global i32
@__gl_OR_INVERTED = external global i32
@__gl_NAND = external global i32
@__gl_SET = external global i32
@__gl_EMISSION = external global i32
@__gl_SHININESS = external global i32
@__gl_AMBIENT_AND_DIFFUSE = external global i32
@__gl_MODELVIEW = external global i32
@__gl_PROJECTION = external global i32
@__gl_TEXTURE = external global i32
@__gl_ALPHA = external global i32
@__gl_RGB = external global i32
@__gl_RGBA = external global i32
@__gl_LUMINANCE = external global i32
@__gl_LUMINANCE_ALPHA = external global i32
@__gl_UNPACK_ALIGNMENT = external global i32
@__gl_PACK_ALIGNMENT = external global i32
@__gl_UNSIGNED_SHORT_4_4_4_4 = external global i32
@__gl_UNSIGNED_SHORT_5_5_5_1 = external global i32
@__gl_UNSIGNED_SHORT_5_6_5 = external global i32
@__gl_FLAT = external global i32
@__gl_SMOOTH = external global i32
@__gl_KEEP = external global i32
@__gl_REPLACE = external global i32
@__gl_INCR = external global i32
@__gl_DECR = external global i32
@__gl_VENDOR = external global i32
@__gl_RENDERER = external global i32
@__gl_VERSION = external global i32
@__gl_EXTENSIONS = external global i32
@__gl_MODULATE = external global i32
@__gl_DECAL = external global i32
@__gl_ADD = external global i32
@__gl_TEXTURE_ENV_MODE = external global i32
@__gl_TEXTURE_ENV_COLOR = external global i32
@__gl_TEXTURE_ENV = external global i32
@__gl_NEAREST = external global i32
@__gl_LINEAR = external global i32
@__gl_NEAREST_MIPMAP_NEAREST = external global i32
@__gl_LINEAR_MIPMAP_NEAREST = external global i32
@__gl_NEAREST_MIPMAP_LINEAR = external global i32
@__gl_LINEAR_MIPMAP_LINEAR = external global i32
@__gl_TEXTURE_MAG_FILTER = external global i32
@__gl_TEXTURE_MIN_FILTER = external global i32
@__gl_TEXTURE_WRAP_S = external global i32
@__gl_TEXTURE_WRAP_T = external global i32
@__gl_GENERATE_MIPMAP = external global i32
@__gl_TEXTURE0 = external global i32
@__gl_TEXTURE1 = external global i32
@__gl_TEXTURE2 = external global i32
@__gl_TEXTURE3 = external global i32
@__gl_TEXTURE4 = external global i32
@__gl_TEXTURE5 = external global i32
@__gl_TEXTURE6 = external global i32
@__gl_TEXTURE7 = external global i32
@__gl_TEXTURE8 = external global i32
@__gl_TEXTURE9 = external global i32
@__gl_TEXTURE10 = external global i32
@__gl_TEXTURE11 = external global i32
@__gl_TEXTURE12 = external global i32
@__gl_TEXTURE13 = external global i32
@__gl_TEXTURE14 = external global i32
@__gl_TEXTURE15 = external global i32
@__gl_TEXTURE16 = external global i32
@__gl_TEXTURE17 = external global i32
@__gl_TEXTURE18 = external global i32
@__gl_TEXTURE19 = external global i32
@__gl_TEXTURE20 = external global i32
@__gl_TEXTURE21 = external global i32
@__gl_TEXTURE22 = external global i32
@__gl_TEXTURE23 = external global i32
@__gl_TEXTURE24 = external global i32
@__gl_TEXTURE25 = external global i32
@__gl_TEXTURE26 = external global i32
@__gl_TEXTURE27 = external global i32
@__gl_TEXTURE28 = external global i32
@__gl_TEXTURE29 = external global i32
@__gl_TEXTURE30 = external global i32
@__gl_TEXTURE31 = external global i32
@__gl_ACTIVE_TEXTURE = external global i32
@__gl_CLIENT_ACTIVE_TEXTURE = external global i32
@__gl_REPEAT = external global i32
@__gl_CLAMP_TO_EDGE = external global i32
@__gl_LIGHT0 = external global i32
@__gl_LIGHT1 = external global i32
@__gl_LIGHT2 = external global i32
@__gl_LIGHT3 = external global i32
@__gl_LIGHT4 = external global i32
@__gl_LIGHT5 = external global i32
@__gl_LIGHT6 = external global i32
@__gl_LIGHT7 = external global i32
@__gl_ARRAY_BUFFER = external global i32
@__gl_ELEMENT_ARRAY_BUFFER = external global i32
@__gl_ARRAY_BUFFER_BINDING = external global i32
@__gl_ELEMENT_ARRAY_BUFFER_BINDING = external global i32
@__gl_VERTEX_ARRAY_BUFFER_BINDING = external global i32
@__gl_NORMAL_ARRAY_BUFFER_BINDING = external global i32
@__gl_COLOR_ARRAY_BUFFER_BINDING = external global i32
@__gl_TEXTURE_COORD_ARRAY_BUFFER_BIDING = external global i32
@__gl_STATIC_DRAW = external global i32
@__gl_DYNAMIC_DRAW = external global i32
@__gl_BUFFER_SIZE = external global i32
@__gl_BUFFER_USAGE = external global i32
@__gl_SUBTRACT = external global i32
@__gl_COMBINE = external global i32
@__gl_COMBINE_RGB = external global i32
@__gl_COMBINE_ALPHA = external global i32
@__gl_RGB_SCALE = external global i32
@__gl_ADD_SIGNED = external global i32
@__gl_INTERPOLATE = external global i32
@__gl_CONSTANT = external global i32
@__gl_PRIMARY_COLOR = external global i32
@__gl_PREVIOUS = external global i32
@__gl_OPERAND0_RGB = external global i32
@__gl_OPERAND1_RGB = external global i32
@__gl_OPERAND2_RGB = external global i32
@__gl_OPERAND0_ALPHA = external global i32
@__gl_OPERAND1_ALPHA = external global i32
@__gl_OPERAND2_ALPHA = external global i32
@__gl_ALPHA_SCALE = external global i32
@__gl_SRC0_RGB = external global i32
@__gl_SRC1_RGB = external global i32
@__gl_SRC2_RGB = external global i32
@__gl_SRC0_ALPHA = external global i32
@__gl_SRC1_ALPHA = external global i32
@__gl_SRC2_ALPHA = external global i32
@__gl_DOT3_RGB = external global i32
@__gl_DOT3_RGBA = external global i32
@__gl_BLEND_EQUATION_RGB = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_ENABLED = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_SIZE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_STRIDE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_TYPE = external global i32
@__gl_CURRENT_VERTEX_ATTRIB = external global i32
@__gl_VERTEX_PROGRAM_POINT_SIZE = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_POINTER = external global i32
@__gl_STENCIL_BACK_FUNC = external global i32
@__gl_STENCIL_BACK_FAIL = external global i32
@__gl_STENCIL_BACK_PASS_DEPTH_FAIL = external global i32
@__gl_STENCIL_BACK_PASS_DEPTH_PASS = external global i32
@__gl_MAX_DRAW_BUFFERS = external global i32
@__gl_DRAW_BUFFER0 = external global i32
@__gl_DRAW_BUFFER1 = external global i32
@__gl_DRAW_BUFFER2 = external global i32
@__gl_DRAW_BUFFER3 = external global i32
@__gl_DRAW_BUFFER4 = external global i32
@__gl_DRAW_BUFFER5 = external global i32
@__gl_DRAW_BUFFER6 = external global i32
@__gl_DRAW_BUFFER7 = external global i32
@__gl_DRAW_BUFFER8 = external global i32
@__gl_DRAW_BUFFER9 = external global i32
@__gl_DRAW_BUFFER10 = external global i32
@__gl_DRAW_BUFFER11 = external global i32
@__gl_DRAW_BUFFER12 = external global i32
@__gl_DRAW_BUFFER13 = external global i32
@__gl_DRAW_BUFFER14 = external global i32
@__gl_DRAW_BUFFER15 = external global i32
@__gl_BLEND_EQUATION_ALPHA = external global i32
@__gl_MAX_VERTEX_ATTRIBS = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_NORMALIZED = external global i32
@__gl_MAX_TEXTURE_IMAGE_UNITS = external global i32
@__gl_FRAGMENT_SHADER = external global i32
@__gl_VERTEX_SHADER = external global i32
@__gl_MAX_FRAGMENT_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_VERTEX_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_VARYING_FLOATS = external global i32
@__gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS = external global i32
@__gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS = external global i32
@__gl_SHADER_TYPE = external global i32
@__gl_FLOAT_VEC2 = external global i32
@__gl_FLOAT_VEC3 = external global i32
@__gl_FLOAT_VEC4 = external global i32
@__gl_INT_VEC2 = external global i32
@__gl_INT_VEC3 = external global i32
@__gl_INT_VEC4 = external global i32
@__gl_BOOL = external global i32
@__gl_BOOL_VEC2 = external global i32
@__gl_BOOL_VEC3 = external global i32
@__gl_BOOL_VEC4 = external global i32
@__gl_FLOAT_MAT2 = external global i32
@__gl_FLOAT_MAT3 = external global i32
@__gl_FLOAT_MAT4 = external global i32
@__gl_SAMPLER_1D = external global i32
@__gl_SAMPLER_2D = external global i32
@__gl_SAMPLER_3D = external global i32
@__gl_SAMPLER_CUBE = external global i32
@__gl_SAMPLER_1D_SHADOW = external global i32
@__gl_SAMPLER_2D_SHADOW = external global i32
@__gl_DELETE_STATUS = external global i32
@__gl_COMPILE_STATUS = external global i32
@__gl_LINK_STATUS = external global i32
@__gl_VALIDATE_STATUS = external global i32
@__gl_INFO_LOG_LENGTH = external global i32
@__gl_ATTACHED_SHADERS = external global i32
@__gl_ACTIVE_UNIFORMS = external global i32
@__gl_ACTIVE_UNIFORM_MAX_LENGTH = external global i32
@__gl_SHADER_SOURCE_LENGTH = external global i32
@__gl_ACTIVE_ATTRIBUTES = external global i32
@__gl_ACTIVE_ATTRIBUTE_MAX_LENGTH = external global i32
@__gl_FRAGMENT_SHADER_DERIVATIVE_HINT = external global i32
@__gl_SHADING_LANGUAGE_VERSION = external global i32
@__gl_CURRENT_PROGRAM = external global i32
@__gl_POINT_SPRITE_COORD_ORIGIN = external global i32
@__gl_LOWER_LEFT = external global i32
@__gl_UPPER_LEFT = external global i32
@__gl_STENCIL_BACK_REF = external global i32
@__gl_STENCIL_BACK_VALUE_MASK = external global i32
@__gl_STENCIL_BACK_WRITEMASK = external global i32
@__gl_VERTEX_PROGRAM_TWO_SIDE = external global i32
@__gl_POINT_SPRITE = external global i32
@__gl_COORD_REPLACE = external global i32
@__gl_MAX_TEXTURE_COORDS = external global i32
@__gl_NUM_SHADING_LANGUAGE_VERSIONS = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_LONG = external global i32
@__gl_COMPRESSED_RGB8_ETC2 = external global i32
@__gl_COMPRESSED_SRGB8_ETC2 = external global i32
@__gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = external global i32
@__gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = external global i32
@__gl_COMPRESSED_RGBA8_ETC2_EAC = external global i32
@__gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = external global i32
@__gl_COMPRESSED_R11_EAC = external global i32
@__gl_COMPRESSED_SIGNED_R11_EAC = external global i32
@__gl_COMPRESSED_RG11_EAC = external global i32
@__gl_COMPRESSED_SIGNED_RG11_EAC = external global i32
@__gl_PRIMITIVE_RESTART_FIXED_INDEX = external global i32
@__gl_ANY_SAMPLES_PASSED_CONSERVATIVE = external global i32
@__gl_MAX_ELEMENT_INDEX = external global i32
@__gl_COMPUTE_SHADER = external global i32
@__gl_MAX_COMPUTE_UNIFORM_BLOCKS = external global i32
@__gl_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = external global i32
@__gl_MAX_COMPUTE_IMAGE_UNIFORMS = external global i32
@__gl_MAX_COMPUTE_SHARED_MEMORY_SIZE = external global i32
@__gl_MAX_COMPUTE_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = external global i32
@__gl_MAX_COMPUTE_ATOMIC_COUNTERS = external global i32
@__gl_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_COUNT = external global i32
@__gl_MAX_COMPUTE_WORK_GROUP_SIZE = external global i32
@__gl_COMPUTE_WORK_GROUP_SIZE = external global i32
@__gl_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_DISPATCH_INDIRECT_BUFFER = external global i32
@__gl_DISPATCH_INDIRECT_BUFFER_BINDING = external global i32
@__gl_COMPUTE_SHADER_BIT = external global i32
@__gl_DEBUG_OUTPUT_SYNCHRONOUS = external global i32
@__gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = external global i32
@__gl_DEBUG_CALLBACK_FUNCTION = external global i32
@__gl_DEBUG_CALLBACK_USER_PARAM = external global i32
@__gl_DEBUG_SOURCE_API = external global i32
@__gl_DEBUG_SOURCE_WINDOW_SYSTEM = external global i32
@__gl_DEBUG_SOURCE_SHADER_COMPILER = external global i32
@__gl_DEBUG_SOURCE_THIRD_PARTY = external global i32
@__gl_DEBUG_SOURCE_APPLICATION = external global i32
@__gl_DEBUG_SOURCE_OTHER = external global i32
@__gl_DEBUG_TYPE_ERROR = external global i32
@__gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR = external global i32
@__gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR = external global i32
@__gl_DEBUG_TYPE_PORTABILITY = external global i32
@__gl_DEBUG_TYPE_PERFORMANCE = external global i32
@__gl_DEBUG_TYPE_OTHER = external global i32
@__gl_MAX_DEBUG_MESSAGE_LENGTH = external global i32
@__gl_MAX_DEBUG_LOGGED_MESSAGES = external global i32
@__gl_DEBUG_LOGGED_MESSAGES = external global i32
@__gl_DEBUG_SEVERITY_HIGH = external global i32
@__gl_DEBUG_SEVERITY_MEDIUM = external global i32
@__gl_DEBUG_SEVERITY_LOW = external global i32
@__gl_DEBUG_TYPE_MARKER = external global i32
@__gl_DEBUG_TYPE_PUSH_GROUP = external global i32
@__gl_DEBUG_TYPE_POP_GROUP = external global i32
@__gl_DEBUG_SEVERITY_NOTIFICATION = external global i32
@__gl_MAX_DEBUG_GROUP_STACK_DEPTH = external global i32
@__gl_DEBUG_GROUP_STACK_DEPTH = external global i32
@__gl_BUFFER = external global i32
@__gl_SHADER = external global i32
@__gl_PROGRAM = external global i32
@__gl_QUERY = external global i32
@__gl_PROGRAM_PIPELINE = external global i32
@__gl_SAMPLER = external global i32
@__gl_MAX_LABEL_LENGTH = external global i32
@__gl_DEBUG_OUTPUT = external global i32
@__gl_CONTEXT_FLAG_DEBUG_BIT = external global i32
@__gl_MAX_UNIFORM_LOCATIONS = external global i32
@__gl_FRAMEBUFFER_DEFAULT_WIDTH = external global i32
@__gl_FRAMEBUFFER_DEFAULT_HEIGHT = external global i32
@__gl_FRAMEBUFFER_DEFAULT_LAYERS = external global i32
@__gl_FRAMEBUFFER_DEFAULT_SAMPLES = external global i32
@__gl_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = external global i32
@__gl_MAX_FRAMEBUFFER_WIDTH = external global i32
@__gl_MAX_FRAMEBUFFER_HEIGHT = external global i32
@__gl_MAX_FRAMEBUFFER_LAYERS = external global i32
@__gl_MAX_FRAMEBUFFER_SAMPLES = external global i32
@__gl_INTERNALFORMAT_SUPPORTED = external global i32
@__gl_INTERNALFORMAT_PREFERRED = external global i32
@__gl_INTERNALFORMAT_RED_SIZE = external global i32
@__gl_INTERNALFORMAT_GREEN_SIZE = external global i32
@__gl_INTERNALFORMAT_BLUE_SIZE = external global i32
@__gl_INTERNALFORMAT_ALPHA_SIZE = external global i32
@__gl_INTERNALFORMAT_DEPTH_SIZE = external global i32
@__gl_INTERNALFORMAT_STENCIL_SIZE = external global i32
@__gl_INTERNALFORMAT_SHARED_SIZE = external global i32
@__gl_INTERNALFORMAT_RED_TYPE = external global i32
@__gl_INTERNALFORMAT_GREEN_TYPE = external global i32
@__gl_INTERNALFORMAT_BLUE_TYPE = external global i32
@__gl_INTERNALFORMAT_ALPHA_TYPE = external global i32
@__gl_INTERNALFORMAT_DEPTH_TYPE = external global i32
@__gl_INTERNALFORMAT_STENCIL_TYPE = external global i32
@__gl_MAX_WIDTH = external global i32
@__gl_MAX_HEIGHT = external global i32
@__gl_MAX_DEPTH = external global i32
@__gl_MAX_LAYERS = external global i32
@__gl_MAX_COMBINED_DIMENSIONS = external global i32
@__gl_COLOR_COMPONENTS = external global i32
@__gl_DEPTH_COMPONENTS = external global i32
@__gl_STENCIL_COMPONENTS = external global i32
@__gl_COLOR_RENDERABLE = external global i32
@__gl_DEPTH_RENDERABLE = external global i32
@__gl_STENCIL_RENDERABLE = external global i32
@__gl_FRAMEBUFFER_RENDERABLE = external global i32
@__gl_FRAMEBUFFER_RENDERABLE_LAYERED = external global i32
@__gl_FRAMEBUFFER_BLEND = external global i32
@__gl_READ_PIXELS = external global i32
@__gl_READ_PIXELS_FORMAT = external global i32
@__gl_READ_PIXELS_TYPE = external global i32
@__gl_TEXTURE_IMAGE_FORMAT = external global i32
@__gl_TEXTURE_IMAGE_TYPE = external global i32
@__gl_GET_TEXTURE_IMAGE_FORMAT = external global i32
@__gl_GET_TEXTURE_IMAGE_TYPE = external global i32
@__gl_MIPMAP = external global i32
@__gl_MANUAL_GENERATE_MIPMAP = external global i32
@__gl_AUTO_GENERATE_MIPMAP = external global i32
@__gl_COLOR_ENCODING = external global i32
@__gl_SRGB_READ = external global i32
@__gl_SRGB_WRITE = external global i32
@__gl_FILTER = external global i32
@__gl_VERTEX_TEXTURE = external global i32
@__gl_TESS_CONTROL_TEXTURE = external global i32
@__gl_TESS_EVALUATION_TEXTURE = external global i32
@__gl_GEOMETRY_TEXTURE = external global i32
@__gl_FRAGMENT_TEXTURE = external global i32
@__gl_COMPUTE_TEXTURE = external global i32
@__gl_TEXTURE_SHADOW = external global i32
@__gl_TEXTURE_GATHER = external global i32
@__gl_TEXTURE_GATHER_SHADOW = external global i32
@__gl_SHADER_IMAGE_LOAD = external global i32
@__gl_SHADER_IMAGE_STORE = external global i32
@__gl_SHADER_IMAGE_ATOMIC = external global i32
@__gl_IMAGE_TEXEL_SIZE = external global i32
@__gl_IMAGE_COMPATIBILITY_CLASS = external global i32
@__gl_IMAGE_PIXEL_FORMAT = external global i32
@__gl_IMAGE_PIXEL_TYPE = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = external global i32
@__gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_WIDTH = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_HEIGHT = external global i32
@__gl_TEXTURE_COMPRESSED_BLOCK_SIZE = external global i32
@__gl_CLEAR_BUFFER = external global i32
@__gl_TEXTURE_VIEW = external global i32
@__gl_VIEW_COMPATIBILITY_CLASS = external global i32
@__gl_FULL_SUPPORT = external global i32
@__gl_CAVEAT_SUPPORT = external global i32
@__gl_IMAGE_CLASS_4_X_32 = external global i32
@__gl_IMAGE_CLASS_2_X_32 = external global i32
@__gl_IMAGE_CLASS_1_X_32 = external global i32
@__gl_IMAGE_CLASS_4_X_16 = external global i32
@__gl_IMAGE_CLASS_2_X_16 = external global i32
@__gl_IMAGE_CLASS_1_X_16 = external global i32
@__gl_IMAGE_CLASS_4_X_8 = external global i32
@__gl_IMAGE_CLASS_2_X_8 = external global i32
@__gl_IMAGE_CLASS_1_X_8 = external global i32
@__gl_IMAGE_CLASS_11_11_10 = external global i32
@__gl_IMAGE_CLASS_10_10_10_2 = external global i32
@__gl_VIEW_CLASS_128_BITS = external global i32
@__gl_VIEW_CLASS_96_BITS = external global i32
@__gl_VIEW_CLASS_64_BITS = external global i32
@__gl_VIEW_CLASS_48_BITS = external global i32
@__gl_VIEW_CLASS_32_BITS = external global i32
@__gl_VIEW_CLASS_24_BITS = external global i32
@__gl_VIEW_CLASS_16_BITS = external global i32
@__gl_VIEW_CLASS_8_BITS = external global i32
@__gl_VIEW_CLASS_S3TC_DXT1_RGB = external global i32
@__gl_VIEW_CLASS_S3TC_DXT1_RGBA = external global i32
@__gl_VIEW_CLASS_S3TC_DXT3_RGBA = external global i32
@__gl_VIEW_CLASS_S3TC_DXT5_RGBA = external global i32
@__gl_VIEW_CLASS_RGTC1_RED = external global i32
@__gl_VIEW_CLASS_RGTC2_RG = external global i32
@__gl_VIEW_CLASS_BPTC_UNORM = external global i32
@__gl_VIEW_CLASS_BPTC_FLOAT = external global i32
@__gl_UNIFORM = external global i32
@__gl_UNIFORM_BLOCK = external global i32
@__gl_PROGRAM_INPUT = external global i32
@__gl_PROGRAM_OUTPUT = external global i32
@__gl_BUFFER_VARIABLE = external global i32
@__gl_SHADER_STORAGE_BLOCK = external global i32
@__gl_VERTEX_SUBROUTINE = external global i32
@__gl_TESS_CONTROL_SUBROUTINE = external global i32
@__gl_TESS_EVALUATION_SUBROUTINE = external global i32
@__gl_GEOMETRY_SUBROUTINE = external global i32
@__gl_FRAGMENT_SUBROUTINE = external global i32
@__gl_COMPUTE_SUBROUTINE = external global i32
@__gl_VERTEX_SUBROUTINE_UNIFORM = external global i32
@__gl_TESS_CONTROL_SUBROUTINE_UNIFORM = external global i32
@__gl_TESS_EVALUATION_SUBROUTINE_UNIFORM = external global i32
@__gl_GEOMETRY_SUBROUTINE_UNIFORM = external global i32
@__gl_FRAGMENT_SUBROUTINE_UNIFORM = external global i32
@__gl_COMPUTE_SUBROUTINE_UNIFORM = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYING = external global i32
@__gl_ACTIVE_RESOURCES = external global i32
@__gl_MAX_NAME_LENGTH = external global i32
@__gl_MAX_NUM_ACTIVE_VARIABLES = external global i32
@__gl_MAX_NUM_COMPATIBLE_SUBROUTINES = external global i32
@__gl_NAME_LENGTH = external global i32
@__gl_TYPE = external global i32
@__gl_ARRAY_SIZE = external global i32
@__gl_OFFSET = external global i32
@__gl_BLOCK_INDEX = external global i32
@__gl_ARRAY_STRIDE = external global i32
@__gl_MATRIX_STRIDE = external global i32
@__gl_IS_ROW_MAJOR = external global i32
@__gl_ATOMIC_COUNTER_BUFFER_INDEX = external global i32
@__gl_BUFFER_BINDING = external global i32
@__gl_BUFFER_DATA_SIZE = external global i32
@__gl_NUM_ACTIVE_VARIABLES = external global i32
@__gl_ACTIVE_VARIABLES = external global i32
@__gl_REFERENCED_BY_VERTEX_SHADER = external global i32
@__gl_REFERENCED_BY_TESS_CONTROL_SHADER = external global i32
@__gl_REFERENCED_BY_TESS_EVALUATION_SHADER = external global i32
@__gl_REFERENCED_BY_GEOMETRY_SHADER = external global i32
@__gl_REFERENCED_BY_FRAGMENT_SHADER = external global i32
@__gl_REFERENCED_BY_COMPUTE_SHADER = external global i32
@__gl_TOP_LEVEL_ARRAY_SIZE = external global i32
@__gl_TOP_LEVEL_ARRAY_STRIDE = external global i32
@__gl_LOCATION = external global i32
@__gl_LOCATION_INDEX = external global i32
@__gl_IS_PER_PATCH = external global i32
@__gl_SHADER_STORAGE_BUFFER = external global i32
@__gl_SHADER_STORAGE_BUFFER_BINDING = external global i32
@__gl_SHADER_STORAGE_BUFFER_START = external global i32
@__gl_SHADER_STORAGE_BUFFER_SIZE = external global i32
@__gl_MAX_VERTEX_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_COMBINED_SHADER_STORAGE_BLOCKS = external global i32
@__gl_MAX_SHADER_STORAGE_BUFFER_BINDINGS = external global i32
@__gl_MAX_SHADER_STORAGE_BLOCK_SIZE = external global i32
@__gl_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = external global i32
@__gl_SHADER_STORAGE_BARRIER_BIT = external global i32
@__gl_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = external global i32
@__gl_DEPTH_STENCIL_TEXTURE_MODE = external global i32
@__gl_TEXTURE_BUFFER_OFFSET = external global i32
@__gl_TEXTURE_BUFFER_SIZE = external global i32
@__gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT = external global i32
@__gl_TEXTURE_VIEW_MIN_LEVEL = external global i32
@__gl_TEXTURE_VIEW_NUM_LEVELS = external global i32
@__gl_TEXTURE_VIEW_MIN_LAYER = external global i32
@__gl_TEXTURE_VIEW_NUM_LAYERS = external global i32
@__gl_TEXTURE_IMMUTABLE_LEVELS = external global i32
@__gl_VERTEX_ATTRIB_BINDING = external global i32
@__gl_VERTEX_ATTRIB_RELATIVE_OFFSET = external global i32
@__gl_VERTEX_BINDING_DIVISOR = external global i32
@__gl_VERTEX_BINDING_OFFSET = external global i32
@__gl_VERTEX_BINDING_STRIDE = external global i32
@__gl_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = external global i32
@__gl_MAX_VERTEX_ATTRIB_BINDINGS = external global i32
@__gl_VERTEX_BINDING_BUFFER = external global i32
@__gl_DISPLAY_LIST = external global i32
@__gl_COMPARE_REF_TO_TEXTURE = external global i32
@__gl_CLIP_DISTANCE0 = external global i32
@__gl_CLIP_DISTANCE1 = external global i32
@__gl_CLIP_DISTANCE2 = external global i32
@__gl_CLIP_DISTANCE3 = external global i32
@__gl_CLIP_DISTANCE4 = external global i32
@__gl_CLIP_DISTANCE5 = external global i32
@__gl_CLIP_DISTANCE6 = external global i32
@__gl_CLIP_DISTANCE7 = external global i32
@__gl_MAX_CLIP_DISTANCES = external global i32
@__gl_MAJOR_VERSION = external global i32
@__gl_MINOR_VERSION = external global i32
@__gl_NUM_EXTENSIONS = external global i32
@__gl_CONTEXT_FLAGS = external global i32
@__gl_COMPRESSED_RED = external global i32
@__gl_COMPRESSED_RG = external global i32
@__gl_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = external global i32
@__gl_RGBA32F = external global i32
@__gl_RGB32F = external global i32
@__gl_RGBA16F = external global i32
@__gl_RGB16F = external global i32
@__gl_VERTEX_ATTRIB_ARRAY_INTEGER = external global i32
@__gl_MAX_ARRAY_TEXTURE_LAYERS = external global i32
@__gl_MIN_PROGRAM_TEXEL_OFFSET = external global i32
@__gl_MAX_PROGRAM_TEXEL_OFFSET = external global i32
@__gl_CLAMP_READ_COLOR = external global i32
@__gl_FIXED_ONLY = external global i32
@__gl_MAX_VARYING_COMPONENTS = external global i32
@__gl_TEXTURE_1D_ARRAY = external global i32
@__gl_PROXY_TEXTURE_1D_ARRAY = external global i32
@__gl_TEXTURE_2D_ARRAY = external global i32
@__gl_PROXY_TEXTURE_2D_ARRAY = external global i32
@__gl_TEXTURE_BINDING_1D_ARRAY = external global i32
@__gl_TEXTURE_BINDING_2D_ARRAY = external global i32
@__gl_R11F_G11F_B10F = external global i32
@__gl_UNSIGNED_INT_10F_11F_11F_REV = external global i32
@__gl_RGB9_E5 = external global i32
@__gl_UNSIGNED_INT_5_9_9_9_REV = external global i32
@__gl_TEXTURE_SHARED_SIZE = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_MODE = external global i32
@__gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = external global i32
@__gl_TRANSFORM_FEEDBACK_VARYINGS = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_START = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_SIZE = external global i32
@__gl_PRIMITIVES_GENERATED = external global i32
@__gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = external global i32
@__gl_RASTERIZER_DISCARD = external global i32
@__gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = external global i32
@__gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = external global i32
@__gl_INTERLEAVED_ATTRIBS = external global i32
@__gl_SEPARATE_ATTRIBS = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER = external global i32
@__gl_TRANSFORM_FEEDBACK_BUFFER_BINDING = external global i32
@__gl_RGBA32UI = external global i32
@__gl_RGB32UI = external global i32
@__gl_RGBA16UI = external global i32
@__gl_RGB16UI = external global i32
@__gl_RGBA8UI = external global i32
@__gl_RGB8UI = external global i32
@__gl_RGBA32I = external global i32
@__gl_RGB32I = external global i32
@__gl_RGBA16I = external global i32
@__gl_RGB16I = external global i32
@__gl_RGBA8I = external global i32
@__gl_RGB8I = external global i32
@__gl_RED_INTEGER = external global i32
@__gl_GREEN_INTEGER = external global i32
@__gl_BLUE_INTEGER = external global i32
@__gl_RGB_INTEGER = external global i32
@__gl_RGBA_INTEGER = external global i32
@__gl_BGR_INTEGER = external global i32
@__gl_BGRA_INTEGER = external global i32
@__gl_SAMPLER_1D_ARRAY = external global i32
@__gl_SAMPLER_2D_ARRAY = external global i32
@__gl_SAMPLER_1D_ARRAY_SHADOW = external global i32
@__gl_SAMPLER_2D_ARRAY_SHADOW = external global i32
@__gl_SAMPLER_CUBE_SHADOW = external global i32
@__gl_UNSIGNED_INT_VEC2 = external global i32
@__gl_UNSIGNED_INT_VEC3 = external global i32
@__gl_UNSIGNED_INT_VEC4 = external global i32
@__gl_INT_SAMPLER_1D = external global i32
@__gl_INT_SAMPLER_2D = external global i32
@__gl_INT_SAMPLER_3D = external global i32
@__gl_INT_SAMPLER_CUBE = external global i32
@__gl_INT_SAMPLER_1D_ARRAY = external global i32
@__gl_INT_SAMPLER_2D_ARRAY = external global i32
@__gl_UNSIGNED_INT_SAMPLER_1D = external global i32
@__gl_UNSIGNED_INT_SAMPLER_2D = external global i32
@__gl_UNSIGNED_INT_SAMPLER_3D = external global i32
@__gl_UNSIGNED_INT_SAMPLER_CUBE = external global i32
@__gl_UNSIGNED_INT_SAMPLER_1D_ARRAY = external global i32
@__gl_UNSIGNED_INT_SAMPLER_2D_ARRAY = external global i32
@__gl_QUERY_WAIT = external global i32
@__gl_QUERY_NO_WAIT = external global i32
@__gl_QUERY_BY_REGION_WAIT = external global i32
@__gl_QUERY_BY_REGION_NO_WAIT = external global i32
@__gl_BUFFER_ACCESS_FLAGS = external global i32
@__gl_BUFFER_MAP_LENGTH = external global i32
@__gl_BUFFER_MAP_OFFSET = external global i32
@__gl_DEPTH_COMPONENT32F = external global i32
@__gl_DEPTH32F_STENCIL8 = external global i32
@__gl_FLOAT_32_UNSIGNED_INT_24_8_REV = external global i32
@__gl_INVALID_FRAMEBUFFER_OPERATION = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_RED_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = external global i32
@__gl_FRAMEBUFFER_DEFAULT = external global i32
@__gl_FRAMEBUFFER_UNDEFINED = external global i32
@__gl_DEPTH_STENCIL_ATTACHMENT = external global i32
@__gl_MAX_RENDERBUFFER_SIZE = external global i32
@__gl_DEPTH_STENCIL = external global i32
@__gl_UNSIGNED_INT_24_8 = external global i32
@__gl_DEPTH24_STENCIL8 = external global i32
@__gl_TEXTURE_STENCIL_SIZE = external global i32
@__gl_TEXTURE_RED_TYPE = external global i32
@__gl_TEXTURE_GREEN_TYPE = external global i32
@__gl_TEXTURE_BLUE_TYPE = external global i32
@__gl_TEXTURE_ALPHA_TYPE = external global i32
@__gl_TEXTURE_DEPTH_TYPE = external global i32
@__gl_UNSIGNED_NORMALIZED = external global i32
@__gl_FRAMEBUFFER_BINDING = external global i32
@__gl_DRAW_FRAMEBUFFER_BINDING = external global i32
@__gl_RENDERBUFFER_BINDING = external global i32
@__gl_READ_FRAMEBUFFER = external global i32
@__gl_DRAW_FRAMEBUFFER = external global i32
@__gl_READ_FRAMEBUFFER_BINDING = external global i32
@__gl_RENDERBUFFER_SAMPLES = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = external global i32
@__gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = external global i32
@__gl_FRAMEBUFFER_COMPLETE = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = external global i32
@__gl_FRAMEBUFFER_UNSUPPORTED = external global i32
@__gl_MAX_COLOR_ATTACHMENTS = external global i32
@__gl_COLOR_ATTACHMENT0 = external global i32
@__gl_COLOR_ATTACHMENT1 = external global i32
@__gl_COLOR_ATTACHMENT2 = external global i32
@__gl_COLOR_ATTACHMENT3 = external global i32
@__gl_COLOR_ATTACHMENT4 = external global i32
@__gl_COLOR_ATTACHMENT5 = external global i32
@__gl_COLOR_ATTACHMENT6 = external global i32
@__gl_COLOR_ATTACHMENT7 = external global i32
@__gl_COLOR_ATTACHMENT8 = external global i32
@__gl_COLOR_ATTACHMENT9 = external global i32
@__gl_COLOR_ATTACHMENT10 = external global i32
@__gl_COLOR_ATTACHMENT11 = external global i32
@__gl_COLOR_ATTACHMENT12 = external global i32
@__gl_COLOR_ATTACHMENT13 = external global i32
@__gl_COLOR_ATTACHMENT14 = external global i32
@__gl_COLOR_ATTACHMENT15 = external global i32
@__gl_COLOR_ATTACHMENT16 = external global i32
@__gl_COLOR_ATTACHMENT17 = external global i32
@__gl_COLOR_ATTACHMENT18 = external global i32
@__gl_COLOR_ATTACHMENT19 = external global i32
@__gl_COLOR_ATTACHMENT20 = external global i32
@__gl_COLOR_ATTACHMENT21 = external global i32
@__gl_COLOR_ATTACHMENT22 = external global i32
@__gl_COLOR_ATTACHMENT23 = external global i32
@__gl_COLOR_ATTACHMENT24 = external global i32
@__gl_COLOR_ATTACHMENT25 = external global i32
@__gl_COLOR_ATTACHMENT26 = external global i32
@__gl_COLOR_ATTACHMENT27 = external global i32
@__gl_COLOR_ATTACHMENT28 = external global i32
@__gl_COLOR_ATTACHMENT29 = external global i32
@__gl_COLOR_ATTACHMENT30 = external global i32
@__gl_COLOR_ATTACHMENT31 = external global i32
@__gl_DEPTH_ATTACHMENT = external global i32
@__gl_STENCIL_ATTACHMENT = external global i32
@__gl_FRAMEBUFFER = external global i32
@__gl_RENDERBUFFER = external global i32
@__gl_RENDERBUFFER_WIDTH = external global i32
@__gl_RENDERBUFFER_HEIGHT = external global i32
@__gl_RENDERBUFFER_INTERNAL_FORMAT = external global i32
@__gl_STENCIL_INDEX1 = external global i32
@__gl_STENCIL_INDEX4 = external global i32
@__gl_STENCIL_INDEX8 = external global i32
@__gl_STENCIL_INDEX16 = external global i32
@__gl_RENDERBUFFER_RED_SIZE = external global i32
@__gl_RENDERBUFFER_GREEN_SIZE = external global i32
@__gl_RENDERBUFFER_BLUE_SIZE = external global i32
@__gl_RENDERBUFFER_ALPHA_SIZE = external global i32
@__gl_RENDERBUFFER_DEPTH_SIZE = external global i32
@__gl_RENDERBUFFER_STENCIL_SIZE = external global i32
@__gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = external global i32
@__gl_MAX_SAMPLES = external global i32
@__gl_INDEX = external global i32
@__gl_TEXTURE_LUMINANCE_TYPE = external global i32
@__gl_TEXTURE_INTENSITY_TYPE = external global i32
@__gl_FRAMEBUFFER_SRGB = external global i32
@__gl_HALF_FLOAT = external global i32
@__gl_MAP_READ_BIT = external global i32
@__gl_MAP_WRITE_BIT = external global i32
@__gl_MAP_INVALIDATE_RANGE_BIT = external global i32
@__gl_MAP_INVALIDATE_BUFFER_BIT = external global i32
@__gl_MAP_FLUSH_EXPLICIT_BIT = external global i32
@__gl_MAP_UNSYNCHRONIZED_BIT = external global i32
@__gl_COMPRESSED_RED_RGTC1 = external global i32
@__gl_COMPRESSED_SIGNED_RED_RGTC1 = external global i32
@__gl_COMPRESSED_RG_RGTC2 = external global i32
@__gl_COMPRESSED_SIGNED_RG_RGTC2 = external global i32
@__gl_RG = external global i32
@__gl_RG_INTEGER = external global i32
@__gl_R8 = external global i32
@__gl_R16 = external global i32
@__gl_RG8 = external global i32
@__gl_RG16 = external global i32
@__gl_R16F = external global i32
@__gl_R32F = external global i32
@__gl_RG16F = external global i32
@__gl_RG32F = external global i32
@__gl_R8I = external global i32
@__gl_R8UI = external global i32
@__gl_R16I = external global i32
@__gl_R16UI = external global i32
@__gl_R32I = external global i32
@__gl_R32UI = external global i32
@__gl_RG8I = external global i32
@__gl_RG8UI = external global i32
@__gl_RG16I = external global i32
@__gl_RG16UI = external global i32
@__gl_RG32I = external global i32
@__gl_RG32UI = external global i32
@__gl_VERTEX_ARRAY_BINDING = external global i32
@__gl_CLAMP_VERTEX_COLOR = external global i32
@__gl_CLAMP_FRAGMENT_COLOR = external global i32
@__gl_ALPHA_INTEGER = external global i32
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.203
@__os_STD_INPUT_HANDLE = external global i32
@__os_STD_OUTPUT_HANDLE = external global i32
@__os_STD_ERROR_HANDLE = external global i32
@__os_INVALID_HANDLE_VALUE = external global ptr
@__os_CP_UTF7 = external global i32
@__os_CP_UTF8 = external global i32
@__os_MEM_COMMIT = external global i32
@__os_MEM_RESERVE = external global i32
@__os_MEM_RELEASE = external global i32
@__os_PAGE_NOACCESS = external global i32
@__os_PAGE_READONLY = external global i32
@__os_PAGE_READWRITE = external global i32
@__os_PAGE_WRITECOPY = external global i32
@__os_PAGE_EXECUTE = external global i32
@__os_PAGE_EXECUTE_READ = external global i32
@__os_PAGE_EXECUTE_READWRITE = external global i32
@__os_PAGE_EXECUTE_WRITECOPY = external global i32
@__os_PAGE_GUARD = external global i32
@__os_PAGE_NOCACHE = external global i32
@__os_PAGE_WRITECOMBINE = external global i32
@__str_CONTINUE_BIT = external global i8
@___asan_gen__anon_global = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vertex\00", [25 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.17 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fragment\00", [23 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.19 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Error linking shader\0A%s\00", [40 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.21 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Framebuffer is not complete!\00", [35 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.23 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Error compiling % shader\0A%s\00", [36 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.25 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"GL Message: %s\00", [17 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.27 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed to find uniform % in shader\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.29 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"set_uniform(), unsupported type: %\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.31 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed to find uniform % in shader\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.33 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"set_uniform(), unsupported type: %\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.35 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed to find uniform % in shader\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.37 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"set_uniform(), unsupported type: %\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.39 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed to find uniform % in shader\00", [61 x i8] zeroinitializer }, comdat, align 32
@___asan_gen__anon_global.41 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"set_uniform(), unsupported type: %\00", [61 x i8] zeroinitializer }, comdat, align 32
@llvm.used = appending global [1 x ptr] [ptr @asan.module_ctor], section "llvm.metadata"
@___asan_gen_ = private constant [9 x i8] c"renderer\00", align 1
@___asan_gen_.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@___asan_gen_.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__asan_global_ = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global to i64), i64 7, i64 32, i64 ptrtoint (ptr @___asan_gen_.2 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global), align 64, !associated !0
@__asan_global_.16 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.17 to i64), i64 9, i64 32, i64 ptrtoint (ptr @___asan_gen_.3 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.17), align 64, !associated !1
@__asan_global_.18 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.19 to i64), i64 24, i64 64, i64 ptrtoint (ptr @___asan_gen_.4 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.19), align 64, !associated !2
@__asan_global_.20 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.21 to i64), i64 29, i64 64, i64 ptrtoint (ptr @___asan_gen_.5 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.21), align 64, !associated !3
@__asan_global_.22 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.23 to i64), i64 28, i64 64, i64 ptrtoint (ptr @___asan_gen_.6 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.23), align 64, !associated !4
@__asan_global_.24 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.25 to i64), i64 15, i64 32, i64 ptrtoint (ptr @___asan_gen_.7 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.25), align 64, !associated !5
@__asan_global_.26 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.27 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.8 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.27), align 64, !associated !6
@__asan_global_.28 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.29 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.9 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.29), align 64, !associated !7
@__asan_global_.30 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.31 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.10 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.31), align 64, !associated !8
@__asan_global_.32 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.33 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.11 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.33), align 64, !associated !9
@__asan_global_.34 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.35 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.12 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.35), align 64, !associated !10
@__asan_global_.36 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.37 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.13 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.37), align 64, !associated !11
@__asan_global_.38 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.39 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.14 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.39), align 64, !associated !12
@__asan_global_.40 = private global { i64, i64, i64, i64, i64, i64, i64, i64 } { i64 ptrtoint (ptr @___asan_gen__anon_global.41 to i64), i64 35, i64 96, i64 ptrtoint (ptr @___asan_gen_.15 to i64), i64 ptrtoint (ptr @___asan_gen_ to i64), i64 0, i64 0, i64 -1 }, section ".ASAN$GL", comdat($___asan_gen__anon_global.41), align 64, !associated !13
@llvm.compiler.used = appending global [14 x ptr] [ptr @__asan_global_, ptr @__asan_global_.16, ptr @__asan_global_.18, ptr @__asan_global_.20, ptr @__asan_global_.22, ptr @__asan_global_.24, ptr @__asan_global_.26, ptr @__asan_global_.28, ptr @__asan_global_.30, ptr @__asan_global_.32, ptr @__asan_global_.34, ptr @__asan_global_.36, ptr @__asan_global_.38, ptr @__asan_global_.40], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]

define void @__renderer___GlobalInitializerFunction.0() {
block_0:
  ret void
}

declare i32 @__main_main()

declare i1 @SDL_Init(i32)

declare ptr @SDL_CreateWindow(ptr, i32, i32, i64)

declare ptr @SDL_GL_CreateContext(ptr)

declare i1 @SDL_GL_SwapWindow(ptr)

declare i1 @SDL_GL_SetAttribute(i32, i32)

declare i1 @SDL_PollEvent(ptr)

declare ptr @SDL_GetError()

declare i64 @SDL_GetTicks()

declare i1 @SDL_GL_SetSwapInterval(i32)

declare i32 @__sdl_BUTTON_MASK(i32)

declare ptr @wglGetProcAddress(ptr)

declare ptr @GetProcAddress(ptr, ptr)

declare ptr @LoadLibraryA(ptr)

declare ptr @__gl_load_gl_fn(ptr)

declare i1 @__gl_load()

define i32 @__renderer_compile_shaders(ptr %0, ptr %1) !dbg !115 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %string.146, align 8
  %7 = alloca %string.146, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 4, i1 false)
  %10 = alloca [512 x i8], align 1
  %11 = alloca [512 x i8], align 1
  %12 = alloca %slice.206, align 8
  %13 = alloca [1 x %__init_Arg.147], align 8
  %14 = alloca %string.146, align 8
  %15 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %11, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !123
  call void @llvm.dbg.value(metadata ptr %2, metadata !124, metadata !DIExpression()), !dbg !123
  store ptr %1, ptr %3, align 8, !dbg !123
  call void @llvm.dbg.value(metadata ptr %3, metadata !125, metadata !DIExpression()), !dbg !123
  %16 = load ptr, ptr @__gl_CreateShader, align 8, !dbg !126
  %17 = load i32, ptr @__gl_VERTEX_SHADER, align 4, !dbg !126
  %18 = call i32 %16(i32 %17), !dbg !126
  store i32 %18, ptr %4, align 4, !dbg !126
  call void @llvm.dbg.declare(metadata ptr %4, metadata !127, metadata !DIExpression()), !dbg !126
  %19 = load ptr, ptr @__gl_CreateShader, align 8, !dbg !128
  %20 = load i32, ptr @__gl_FRAGMENT_SHADER, align 4, !dbg !128
  %21 = call i32 %19(i32 %20), !dbg !128
  store i32 %21, ptr %5, align 4, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %5, metadata !129, metadata !DIExpression()), !dbg !128
  %22 = load i32, ptr %4, align 4, !dbg !130
  %23 = load ptr, ptr %2, align 8, !dbg !130
  %24 = alloca %string.146, align 8, !dbg !130
  %String = getelementptr inbounds %string.146, ptr %24, i32 0, i32 0, !dbg !130
  %Size = getelementptr inbounds %string.146, ptr %24, i32 0, i32 1, !dbg !130
  store ptr @___asan_gen__anon_global, ptr %String, align 8, !dbg !130
  store i64 6, ptr %Size, align 8, !dbg !130
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %24, i64 16, i1 false), !dbg !130
  call void @__renderer_compile_shader(i32 %22, ptr %23, ptr %6), !dbg !130
  %25 = load i32, ptr %5, align 4, !dbg !131
  %26 = load ptr, ptr %3, align 8, !dbg !131
  %27 = alloca %string.146, align 8, !dbg !131
  %String1 = getelementptr inbounds %string.146, ptr %27, i32 0, i32 0, !dbg !131
  %Size2 = getelementptr inbounds %string.146, ptr %27, i32 0, i32 1, !dbg !131
  store ptr @___asan_gen__anon_global.17, ptr %String1, align 8, !dbg !131
  store i64 8, ptr %Size2, align 8, !dbg !131
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %27, i64 16, i1 false), !dbg !131
  call void @__renderer_compile_shader(i32 %25, ptr %26, ptr %7), !dbg !131
  %28 = load ptr, ptr @__gl_CreateProgram, align 8, !dbg !132
  %29 = call i32 %28(), !dbg !132
  store i32 %29, ptr %8, align 4, !dbg !132
  call void @llvm.dbg.declare(metadata ptr %8, metadata !133, metadata !DIExpression()), !dbg !132
  %30 = load ptr, ptr @__gl_AttachShader, align 8, !dbg !134
  %31 = load i32, ptr %8, align 4, !dbg !134
  %32 = load i32, ptr %4, align 4, !dbg !134
  call void %30(i32 %31, i32 %32), !dbg !134
  %33 = load ptr, ptr @__gl_AttachShader, align 8, !dbg !135
  %34 = load i32, ptr %8, align 4, !dbg !135
  %35 = load i32, ptr %5, align 4, !dbg !135
  call void %33(i32 %34, i32 %35), !dbg !135
  %36 = load ptr, ptr @__gl_LinkProgram, align 8, !dbg !136
  %37 = load i32, ptr %8, align 4, !dbg !136
  call void %36(i32 %37), !dbg !136
  store i32 0, ptr %9, align 4, !dbg !137
  call void @llvm.dbg.declare(metadata ptr %9, metadata !138, metadata !DIExpression()), !dbg !137
  %38 = load ptr, ptr @__gl_GetProgramiv, align 8, !dbg !140
  %39 = load i32, ptr %8, align 4, !dbg !140
  %40 = load i32, ptr @__gl_LINK_STATUS, align 4, !dbg !140
  call void %38(i32 %39, i32 %40, ptr %9), !dbg !140
  %41 = load i32, ptr %9, align 4, !dbg !141
  %42 = icmp eq i32 %41, 0, !dbg !141
  br i1 %42, label %block_1, label %block_2, !dbg !141

block_1:                                          ; preds = %block_0
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %11, ptr align 1 %10, i64 512, i1 false), !dbg !142
  call void @llvm.dbg.declare(metadata ptr %11, metadata !143, metadata !DIExpression()), !dbg !142
  %43 = load ptr, ptr @__gl_GetProgramInfoLog, align 8, !dbg !147
  %44 = load i32, ptr %8, align 4, !dbg !147
  %45 = getelementptr [512 x i8], ptr %11, i64 0, i64 0, !dbg !147
  call void %43(i32 %44, i32 512, ptr null, ptr %45), !dbg !147
  %46 = getelementptr inbounds %slice.206, ptr %12, i32 0, i32 0, !dbg !148
  %47 = getelementptr inbounds %slice.206, ptr %12, i32 0, i32 1, !dbg !148
  store i64 1, ptr %46, align 8, !dbg !148
  store ptr %13, ptr %47, align 8, !dbg !148
  %48 = alloca %string.146, align 8, !dbg !148
  %String3 = getelementptr inbounds %string.146, ptr %48, i32 0, i32 0, !dbg !148
  %Size4 = getelementptr inbounds %string.146, ptr %48, i32 0, i32 1, !dbg !148
  store ptr @___asan_gen__anon_global.19, ptr %String3, align 8, !dbg !148
  store i64 23, ptr %Size4, align 8, !dbg !148
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %48, i64 16, i1 false), !dbg !148
  %49 = getelementptr [512 x i8], ptr %11, i64 0, i64 0, !dbg !148
  store ptr %49, ptr %15, align 8, !dbg !148
  %50 = getelementptr [1 x %__init_Arg.147], ptr %13, i64 0, i64 0, !dbg !148
  %51 = getelementptr inbounds %__init_Arg.147, ptr %50, i32 0, i32 0, !dbg !148
  %52 = getelementptr inbounds %__init_Arg.147, ptr %50, i32 0, i32 1, !dbg !148
  store i64 60, ptr %51, align 8, !dbg !148
  store ptr %15, ptr %52, align 8, !dbg !148
  call void @__io_println(ptr %14, ptr %12), !dbg !148
  call void @__os_abort(), !dbg !149
  br label %block_3, !dbg !149

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !149

block_3:                                          ; preds = %block_2, %block_1
  %53 = load ptr, ptr @__gl_DeleteShader, align 8, !dbg !150
  %54 = load i32, ptr %4, align 4, !dbg !150
  call void %53(i32 %54), !dbg !150
  %55 = load ptr, ptr @__gl_DeleteShader, align 8, !dbg !151
  %56 = load i32, ptr %5, align 4, !dbg !151
  call void %55(i32 %56), !dbg !151
  %57 = load i32, ptr %8, align 4, !dbg !152
  ret i32 %57, !dbg !152
}

define void @__renderer_use_shader(i32 %0) !dbg !153 {
block_0:
  %1 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %1, i8 0, i32 4, i1 false)
  store i32 %0, ptr %1, align 4, !dbg !156
  call void @llvm.dbg.value(metadata ptr %1, metadata !157, metadata !DIExpression()), !dbg !156
  %2 = load ptr, ptr @__gl_UseProgram, align 8, !dbg !158
  %3 = load i32, ptr %1, align 4, !dbg !158
  call void %2(i32 %3), !dbg !158
  ret void, !dbg !159
}

define i64 @__renderer_create_ctx() !dbg !160 {
block_0:
  %0 = alloca %__renderer_ctx.171, align 8
  %1 = alloca %__renderer_ctx.171, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %0, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %1, ptr align 4 %0, i64 8, i1 false), !dbg !167
  call void @llvm.dbg.declare(metadata ptr %1, metadata !168, metadata !DIExpression()), !dbg !167
  %2 = load ptr, ptr @__gl_GenVertexArrays, align 8, !dbg !169
  %3 = getelementptr inbounds %__renderer_ctx.171, ptr %1, i32 0, i32 0, !dbg !169
  call void %2(i32 1, ptr %3), !dbg !169
  %4 = load ptr, ptr @__gl_GenBuffers, align 8, !dbg !170
  %5 = getelementptr inbounds %__renderer_ctx.171, ptr %1, i32 0, i32 1, !dbg !170
  call void %4(i32 1, ptr %5), !dbg !170
  %6 = load ptr, ptr @__gl_Enable, align 8, !dbg !171
  %7 = load i32, ptr @__gl_DEBUG_OUTPUT, align 4, !dbg !171
  call void %6(i32 %7), !dbg !171
  %8 = load ptr, ptr @__gl_Enable, align 8, !dbg !172
  %9 = load i32, ptr @__gl_DEBUG_OUTPUT_SYNCHRONOUS, align 4, !dbg !172
  call void %8(i32 %9), !dbg !172
  %10 = load ptr, ptr @__gl_Enable, align 8, !dbg !173
  %11 = load i32, ptr @__gl_MULTISAMPLE, align 4, !dbg !173
  call void %10(i32 %11), !dbg !173
  %12 = load ptr, ptr @__gl_Enable, align 8, !dbg !174
  %13 = load i32, ptr @__gl_LINE_SMOOTH, align 4, !dbg !174
  call void %12(i32 %13), !dbg !174
  %14 = load ptr, ptr @__gl_Enable, align 8, !dbg !175
  %15 = load i32, ptr @__gl_BLEND, align 4, !dbg !175
  call void %14(i32 %15), !dbg !175
  %16 = load ptr, ptr @__gl_BlendFunc, align 8, !dbg !176
  %17 = load i32, ptr @__gl_SRC_ALPHA, align 4, !dbg !176
  %18 = load i32, ptr @__gl_ONE_MINUS_SRC_ALPHA, align 4, !dbg !176
  call void %16(i32 %17, i32 %18), !dbg !176
  %19 = load ptr, ptr @__gl_DebugMessageCallback, align 8, !dbg !177
  call void %19(ptr @__renderer_gl_callback, ptr null), !dbg !177
  %20 = load ptr, ptr @__gl_DebugMessageControl, align 8, !dbg !178
  %21 = load i32, ptr @__gl_DONT_CARE, align 4, !dbg !178
  %22 = load i32, ptr @__gl_DONT_CARE, align 4, !dbg !178
  %23 = load i32, ptr @__gl_DEBUG_SEVERITY_MEDIUM, align 4, !dbg !178
  call void %20(i32 %21, i32 %22, i32 %23, i32 0, ptr null, i1 true), !dbg !178
  %24 = load i64, ptr %1, align 8, !dbg !179
  ret i64 %24, !dbg !179
}

define ptr @__renderer_create_framebuffer(i32 %0, i32 %1, ptr %2) !dbg !180 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  %11 = alloca %slice.206, align 8
  %12 = alloca [0 x %__init_Arg.147], align 8
  %13 = alloca %string.146, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 0, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 16, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !192
  call void @llvm.dbg.value(metadata ptr %3, metadata !193, metadata !DIExpression()), !dbg !192
  store i32 %1, ptr %4, align 4, !dbg !192
  call void @llvm.dbg.value(metadata ptr %4, metadata !194, metadata !DIExpression()), !dbg !192
  store ptr %2, ptr %5, align 8, !dbg !192
  call void @llvm.dbg.value(metadata ptr %5, metadata !195, metadata !DIExpression()), !dbg !192
  call void @llvm.dbg.declare(metadata ptr %6, metadata !196, metadata !DIExpression()), !dbg !197
  call void @llvm.dbg.declare(metadata ptr %7, metadata !198, metadata !DIExpression()), !dbg !199
  call void @llvm.dbg.declare(metadata ptr %8, metadata !200, metadata !DIExpression()), !dbg !201
  %14 = load ptr, ptr %5, align 8, !dbg !202
  %15 = getelementptr inbounds %__mem_Allocator.161, ptr %14, i32 0, i32 0, !dbg !202
  %16 = load ptr, ptr %15, align 8, !dbg !202
  %17 = load ptr, ptr %5, align 8, !dbg !202
  %18 = call ptr %16(i64 12, ptr %17), !dbg !202
  store ptr %18, ptr %9, align 8, !dbg !202
  call void @llvm.dbg.declare(metadata ptr %9, metadata !203, metadata !DIExpression()), !dbg !202
  %19 = load ptr, ptr %9, align 8, !dbg !205
  %20 = icmp eq ptr %19, null, !dbg !205
  br i1 %20, label %block_1, label %block_2, !dbg !205

block_1:                                          ; preds = %block_0
  ret ptr null, !dbg !205

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !205

block_3:                                          ; preds = %block_2
  %21 = load ptr, ptr %9, align 8, !dbg !206
  store ptr %21, ptr %10, align 8, !dbg !206
  call void @llvm.dbg.declare(metadata ptr %10, metadata !207, metadata !DIExpression()), !dbg !206
  %22 = load ptr, ptr @__gl_GenFramebuffers, align 8, !dbg !209
  call void %22(i32 1, ptr %6), !dbg !209
  %23 = load ptr, ptr @__gl_GenTextures, align 8, !dbg !210
  call void %23(i32 1, ptr %7), !dbg !210
  %24 = load ptr, ptr @__gl_BindFramebuffer, align 8, !dbg !211
  %25 = load i32, ptr @__gl_FRAMEBUFFER, align 4, !dbg !211
  %26 = load i32, ptr %6, align 4, !dbg !211
  call void %24(i32 %25, i32 %26), !dbg !211
  %27 = load ptr, ptr @__gl_BindTexture, align 8, !dbg !212
  %28 = load i32, ptr @__gl_TEXTURE_2D, align 4, !dbg !212
  %29 = load i32, ptr %7, align 4, !dbg !212
  call void %27(i32 %28, i32 %29), !dbg !212
  %30 = load ptr, ptr @__gl_TexImage2D, align 8, !dbg !213
  %31 = load i32, ptr @__gl_TEXTURE_2D, align 4, !dbg !213
  %32 = load i32, ptr @__gl_RGB, align 4, !dbg !213
  %33 = load i32, ptr %3, align 4, !dbg !213
  %34 = load i32, ptr %4, align 4, !dbg !213
  %35 = load i32, ptr @__gl_RGB, align 4, !dbg !213
  %36 = load i32, ptr @__gl_UNSIGNED_BYTE, align 4, !dbg !213
  call void %30(i32 %31, i32 0, i32 %32, i32 %33, i32 %34, i32 0, i32 %35, i32 %36, ptr null), !dbg !213
  %37 = load ptr, ptr @__gl_TexParameteri, align 8, !dbg !214
  %38 = load i32, ptr @__gl_TEXTURE_2D, align 4, !dbg !214
  %39 = load i32, ptr @__gl_TEXTURE_MIN_FILTER, align 4, !dbg !214
  %40 = load i32, ptr @__gl_LINEAR, align 4, !dbg !214
  call void %37(i32 %38, i32 %39, i32 %40), !dbg !214
  %41 = load ptr, ptr @__gl_TexParameteri, align 8, !dbg !215
  %42 = load i32, ptr @__gl_TEXTURE_2D, align 4, !dbg !215
  %43 = load i32, ptr @__gl_TEXTURE_MAG_FILTER, align 4, !dbg !215
  %44 = load i32, ptr @__gl_LINEAR, align 4, !dbg !215
  call void %41(i32 %42, i32 %43, i32 %44), !dbg !215
  %45 = load ptr, ptr @__gl_FramebufferTexture2D, align 8, !dbg !216
  %46 = load i32, ptr @__gl_FRAMEBUFFER, align 4, !dbg !216
  %47 = load i32, ptr @__gl_COLOR_ATTACHMENT0, align 4, !dbg !216
  %48 = load i32, ptr @__gl_TEXTURE_2D, align 4, !dbg !216
  %49 = load i32, ptr %7, align 4, !dbg !216
  call void %45(i32 %46, i32 %47, i32 %48, i32 %49, i32 0), !dbg !216
  %50 = load ptr, ptr @__gl_GenRenderbuffers, align 8, !dbg !217
  call void %50(i32 1, ptr %8), !dbg !217
  %51 = load ptr, ptr @__gl_BindRenderbuffer, align 8, !dbg !218
  %52 = load i32, ptr @__gl_RENDERBUFFER, align 4, !dbg !218
  %53 = load i32, ptr %8, align 4, !dbg !218
  call void %51(i32 %52, i32 %53), !dbg !218
  %54 = load ptr, ptr @__gl_RenderbufferStorage, align 8, !dbg !219
  %55 = load i32, ptr @__gl_RENDERBUFFER, align 4, !dbg !219
  %56 = load i32, ptr @__gl_DEPTH24_STENCIL8, align 4, !dbg !219
  %57 = load i32, ptr %3, align 4, !dbg !219
  %58 = load i32, ptr %4, align 4, !dbg !219
  call void %54(i32 %55, i32 %56, i32 %57, i32 %58), !dbg !219
  %59 = load ptr, ptr @__gl_CheckFramebufferStatus, align 8, !dbg !220
  %60 = load i32, ptr @__gl_FRAMEBUFFER, align 4, !dbg !220
  %61 = call i32 %59(i32 %60), !dbg !220
  %62 = load i32, ptr @__gl_FRAMEBUFFER_COMPLETE, align 4, !dbg !220
  %63 = icmp ne i32 %61, %62, !dbg !220
  br i1 %63, label %block_4, label %block_5, !dbg !220

block_4:                                          ; preds = %block_3
  %64 = getelementptr inbounds %slice.206, ptr %11, i32 0, i32 0, !dbg !221
  %65 = getelementptr inbounds %slice.206, ptr %11, i32 0, i32 1, !dbg !221
  store i64 0, ptr %64, align 8, !dbg !221
  store ptr %12, ptr %65, align 8, !dbg !221
  %66 = alloca %string.146, align 8, !dbg !221
  %String = getelementptr inbounds %string.146, ptr %66, i32 0, i32 0, !dbg !221
  %Size = getelementptr inbounds %string.146, ptr %66, i32 0, i32 1, !dbg !221
  store ptr @___asan_gen__anon_global.21, ptr %String, align 8, !dbg !221
  store i64 28, ptr %Size, align 8, !dbg !221
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %66, i64 16, i1 false), !dbg !221
  call void @__io_println(ptr %13, ptr %11), !dbg !221
  br label %block_6, !dbg !221

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !221

block_6:                                          ; preds = %block_5, %block_4
  %67 = load ptr, ptr %10, align 8, !dbg !222
  %68 = getelementptr inbounds %__renderer_Framebuffer.172, ptr %67, i32 0, i32 0, !dbg !222
  %69 = load i32, ptr %6, align 4, !dbg !222
  store i32 %69, ptr %68, align 4, !dbg !222
  %70 = load ptr, ptr %10, align 8, !dbg !223
  %71 = getelementptr inbounds %__renderer_Framebuffer.172, ptr %70, i32 0, i32 1, !dbg !223
  %72 = load i32, ptr %7, align 4, !dbg !223
  store i32 %72, ptr %71, align 4, !dbg !223
  %73 = load ptr, ptr %10, align 8, !dbg !224
  %74 = getelementptr inbounds %__renderer_Framebuffer.172, ptr %73, i32 0, i32 2, !dbg !224
  %75 = load i32, ptr %8, align 4, !dbg !224
  store i32 %75, ptr %74, align 4, !dbg !224
  %76 = load ptr, ptr @__gl_BindRenderbuffer, align 8, !dbg !225
  %77 = load i32, ptr @__gl_RENDERBUFFER, align 4, !dbg !225
  call void %76(i32 %77, i32 0), !dbg !225
  %78 = load ptr, ptr @__gl_BindTexture, align 8, !dbg !226
  %79 = load i32, ptr @__gl_TEXTURE_2D, align 4, !dbg !226
  call void %78(i32 %79, i32 0), !dbg !226
  %80 = load ptr, ptr @__gl_BindFramebuffer, align 8, !dbg !227
  %81 = load i32, ptr @__gl_FRAMEBUFFER, align 4, !dbg !227
  call void %80(i32 %81, i32 0), !dbg !227
  %82 = load ptr, ptr %10, align 8, !dbg !227
  ret ptr %82, !dbg !227
}

define void @__renderer_delete_framebuffer(ptr %0) !dbg !228 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !231
  call void @llvm.dbg.value(metadata ptr %1, metadata !232, metadata !DIExpression()), !dbg !231
  %3 = load ptr, ptr %1, align 8, !dbg !233
  store ptr %3, ptr %2, align 8, !dbg !233
  call void @llvm.dbg.declare(metadata ptr %2, metadata !234, metadata !DIExpression()), !dbg !233
  %4 = load ptr, ptr @__gl_DeleteFramebuffers, align 8, !dbg !235
  %5 = load ptr, ptr %2, align 8, !dbg !235
  %6 = getelementptr inbounds %__renderer_Framebuffer.172, ptr %5, i32 0, i32 0, !dbg !235
  call void %4(i32 1, ptr %6), !dbg !235
  ret void, !dbg !236
}

define void @__renderer_bind_framebuffer(ptr %0, ptr %1) !dbg !237 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !241
  call void @llvm.dbg.value(metadata ptr %2, metadata !242, metadata !DIExpression()), !dbg !241
  store ptr %1, ptr %3, align 8, !dbg !241
  call void @llvm.dbg.value(metadata ptr %3, metadata !243, metadata !DIExpression()), !dbg !241
  %4 = load ptr, ptr %3, align 8, !dbg !244
  %5 = icmp eq ptr %4, null, !dbg !244
  br i1 %5, label %block_1, label %block_2, !dbg !244

block_1:                                          ; preds = %block_0
  %6 = load ptr, ptr @__gl_BindFramebuffer, align 8, !dbg !245
  %7 = load i32, ptr @__gl_FRAMEBUFFER, align 4, !dbg !245
  call void %6(i32 %7, i32 0), !dbg !245
  br label %block_3, !dbg !245

block_2:                                          ; preds = %block_0
  %8 = load ptr, ptr @__gl_BindFramebuffer, align 8, !dbg !246
  %9 = load i32, ptr @__gl_FRAMEBUFFER, align 4, !dbg !246
  %10 = load ptr, ptr %3, align 8, !dbg !246
  %11 = getelementptr inbounds %__renderer_Framebuffer.172, ptr %10, i32 0, i32 0, !dbg !246
  %12 = load i32, ptr %11, align 4, !dbg !246
  call void %8(i32 %9, i32 %12), !dbg !246
  br label %block_3, !dbg !246

block_3:                                          ; preds = %block_2, %block_1
  ret void, !dbg !247
}

define void @__renderer_draw_verts(ptr %0, ptr %1) !dbg !248 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %slice.201, align 8
  %4 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !263
  call void @llvm.dbg.value(metadata ptr %2, metadata !264, metadata !DIExpression()), !dbg !263
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !263
  call void @llvm.dbg.value(metadata ptr %3, metadata !265, metadata !DIExpression()), !dbg !263
  store i64 0, ptr %4, align 8, !dbg !266
  call void @llvm.dbg.declare(metadata ptr %4, metadata !267, metadata !DIExpression()), !dbg !266
  %5 = load ptr, ptr @__gl_BindVertexArray, align 8, !dbg !268
  %6 = load ptr, ptr %2, align 8, !dbg !268
  %7 = getelementptr inbounds %__renderer_ctx.171, ptr %6, i32 0, i32 0, !dbg !268
  %8 = load i32, ptr %7, align 4, !dbg !268
  call void %5(i32 %8), !dbg !268
  %9 = load ptr, ptr @__gl_VertexAttribPointer, align 8, !dbg !269
  %10 = load i32, ptr @__gl_FLOAT, align 4, !dbg !269
  %11 = load i64, ptr %4, align 8, !dbg !269
  %12 = inttoptr i64 %11 to ptr, !dbg !269
  call void %9(i32 0, i32 3, i32 %10, i1 false, i32 12, ptr %12), !dbg !269
  %13 = load ptr, ptr @__gl_EnableVertexAttribArray, align 8, !dbg !270
  call void %13(i32 0), !dbg !270
  %14 = load ptr, ptr @__gl_BindBuffer, align 8, !dbg !271
  %15 = load i32, ptr @__gl_ARRAY_BUFFER, align 4, !dbg !271
  %16 = load ptr, ptr %2, align 8, !dbg !271
  %17 = getelementptr inbounds %__renderer_ctx.171, ptr %16, i32 0, i32 1, !dbg !271
  %18 = load i32, ptr %17, align 4, !dbg !271
  call void %14(i32 %15, i32 %18), !dbg !271
  %19 = load ptr, ptr @__gl_BufferData, align 8, !dbg !272
  %20 = load i32, ptr @__gl_ARRAY_BUFFER, align 4, !dbg !272
  %21 = getelementptr inbounds %slice.201, ptr %3, i32 0, i32 0, !dbg !272
  %22 = load i64, ptr %21, align 8, !dbg !272
  %23 = mul i64 %22, 12, !dbg !272
  %24 = getelementptr inbounds %slice.201, ptr %3, i32 0, i32 1, !dbg !272
  %25 = load ptr, ptr %24, align 8, !dbg !272
  %26 = load i32, ptr @__gl_STATIC_DRAW, align 4, !dbg !272
  call void %19(i32 %20, i64 %23, ptr %25, i32 %26), !dbg !272
  %27 = load ptr, ptr @__gl_DrawArrays, align 8, !dbg !273
  %28 = load i32, ptr @__gl_TRIANGLES, align 4, !dbg !273
  %29 = getelementptr inbounds %slice.201, ptr %3, i32 0, i32 0, !dbg !273
  %30 = load i64, ptr %29, align 8, !dbg !273
  %31 = trunc i64 %30 to i32, !dbg !273
  call void %27(i32 %28, i32 0, i32 %31), !dbg !273
  ret void, !dbg !274
}

define void @__renderer_draw_lines(ptr %0, ptr %1, float %2) !dbg !275 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca %slice.201, align 8
  %5 = alloca float, align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  store ptr %0, ptr %3, align 8, !dbg !278
  call void @llvm.dbg.value(metadata ptr %3, metadata !279, metadata !DIExpression()), !dbg !278
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %1, i64 16, i1 false), !dbg !278
  call void @llvm.dbg.value(metadata ptr %4, metadata !280, metadata !DIExpression()), !dbg !278
  store float %2, ptr %5, align 4, !dbg !278
  call void @llvm.dbg.value(metadata ptr %5, metadata !281, metadata !DIExpression()), !dbg !278
  store i64 0, ptr %6, align 8, !dbg !282
  call void @llvm.dbg.declare(metadata ptr %6, metadata !283, metadata !DIExpression()), !dbg !282
  %7 = load ptr, ptr @__gl_LineWidth, align 8, !dbg !284
  %8 = load float, ptr %5, align 4, !dbg !284
  call void %7(float %8), !dbg !284
  %9 = load ptr, ptr @__gl_BindVertexArray, align 8, !dbg !285
  %10 = load ptr, ptr %3, align 8, !dbg !285
  %11 = getelementptr inbounds %__renderer_ctx.171, ptr %10, i32 0, i32 0, !dbg !285
  %12 = load i32, ptr %11, align 4, !dbg !285
  call void %9(i32 %12), !dbg !285
  %13 = load ptr, ptr @__gl_VertexAttribPointer, align 8, !dbg !286
  %14 = load i32, ptr @__gl_FLOAT, align 4, !dbg !286
  %15 = load i64, ptr %6, align 8, !dbg !286
  %16 = inttoptr i64 %15 to ptr, !dbg !286
  call void %13(i32 0, i32 3, i32 %14, i1 false, i32 12, ptr %16), !dbg !286
  %17 = load ptr, ptr @__gl_EnableVertexAttribArray, align 8, !dbg !287
  call void %17(i32 0), !dbg !287
  %18 = load ptr, ptr @__gl_BindBuffer, align 8, !dbg !288
  %19 = load i32, ptr @__gl_ARRAY_BUFFER, align 4, !dbg !288
  %20 = load ptr, ptr %3, align 8, !dbg !288
  %21 = getelementptr inbounds %__renderer_ctx.171, ptr %20, i32 0, i32 1, !dbg !288
  %22 = load i32, ptr %21, align 4, !dbg !288
  call void %18(i32 %19, i32 %22), !dbg !288
  %23 = load ptr, ptr @__gl_BufferData, align 8, !dbg !289
  %24 = load i32, ptr @__gl_ARRAY_BUFFER, align 4, !dbg !289
  %25 = getelementptr inbounds %slice.201, ptr %4, i32 0, i32 0, !dbg !289
  %26 = load i64, ptr %25, align 8, !dbg !289
  %27 = mul i64 %26, 12, !dbg !289
  %28 = getelementptr inbounds %slice.201, ptr %4, i32 0, i32 1, !dbg !289
  %29 = load ptr, ptr %28, align 8, !dbg !289
  %30 = load i32, ptr @__gl_STATIC_DRAW, align 4, !dbg !289
  call void %23(i32 %24, i64 %27, ptr %29, i32 %30), !dbg !289
  %31 = load ptr, ptr @__gl_DrawArrays, align 8, !dbg !290
  %32 = load i32, ptr @__gl_LINE_STRIP, align 4, !dbg !290
  %33 = getelementptr inbounds %slice.201, ptr %4, i32 0, i32 0, !dbg !290
  %34 = load i64, ptr %33, align 8, !dbg !290
  %35 = trunc i64 %34 to i32, !dbg !290
  call void %31(i32 %32, i32 0, i32 %35), !dbg !290
  ret void, !dbg !291
}

define void @__renderer_compile_shader(i32 %0, ptr %1, ptr %2) !dbg !292 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca %string.146, align 8
  %6 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  %7 = alloca [512 x i8], align 1
  %8 = alloca [512 x i8], align 1
  %9 = alloca %slice.206, align 8
  %10 = alloca [2 x %__init_Arg.147], align 8
  %11 = alloca %string.146, align 8
  %12 = alloca %string.146, align 8
  %13 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 1 %7, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %8, i8 0, i32 512, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 32, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !299
  call void @llvm.dbg.value(metadata ptr %3, metadata !300, metadata !DIExpression()), !dbg !299
  store ptr %1, ptr %4, align 8, !dbg !299
  call void @llvm.dbg.value(metadata ptr %4, metadata !301, metadata !DIExpression()), !dbg !299
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !299
  call void @llvm.dbg.value(metadata ptr %5, metadata !302, metadata !DIExpression()), !dbg !299
  %14 = load ptr, ptr @__gl_ShaderSource, align 8, !dbg !303
  %15 = load i32, ptr %3, align 4, !dbg !303
  %16 = load ptr, ptr %4, align 8, !dbg !303
  call void %14(i32 %15, i32 1, ptr %16, ptr null), !dbg !303
  %17 = load ptr, ptr @__gl_CompileShader, align 8, !dbg !304
  %18 = load i32, ptr %3, align 4, !dbg !304
  call void %17(i32 %18), !dbg !304
  store i32 0, ptr %6, align 4, !dbg !305
  call void @llvm.dbg.declare(metadata ptr %6, metadata !306, metadata !DIExpression()), !dbg !305
  %19 = load ptr, ptr @__gl_GetShaderiv, align 8, !dbg !307
  %20 = load i32, ptr %3, align 4, !dbg !307
  %21 = load i32, ptr @__gl_COMPILE_STATUS, align 4, !dbg !307
  call void %19(i32 %20, i32 %21, ptr %6), !dbg !307
  %22 = load i32, ptr %6, align 4, !dbg !308
  %23 = icmp eq i32 %22, 0, !dbg !308
  br i1 %23, label %block_1, label %block_2, !dbg !308

block_1:                                          ; preds = %block_0
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %8, ptr align 1 %7, i64 512, i1 false), !dbg !309
  call void @llvm.dbg.declare(metadata ptr %8, metadata !310, metadata !DIExpression()), !dbg !309
  %24 = load ptr, ptr @__gl_GetShaderInfoLog, align 8, !dbg !311
  %25 = load i32, ptr %3, align 4, !dbg !311
  %26 = getelementptr [512 x i8], ptr %8, i64 0, i64 0, !dbg !311
  call void %24(i32 %25, i32 512, ptr null, ptr %26), !dbg !311
  %27 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 0, !dbg !312
  %28 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 1, !dbg !312
  store i64 2, ptr %27, align 8, !dbg !312
  store ptr %10, ptr %28, align 8, !dbg !312
  %29 = alloca %string.146, align 8, !dbg !312
  %String = getelementptr inbounds %string.146, ptr %29, i32 0, i32 0, !dbg !312
  %Size = getelementptr inbounds %string.146, ptr %29, i32 0, i32 1, !dbg !312
  store ptr @___asan_gen__anon_global.23, ptr %String, align 8, !dbg !312
  store i64 27, ptr %Size, align 8, !dbg !312
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %29, i64 16, i1 false), !dbg !312
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %5, i64 16, i1 false), !dbg !312
  %30 = getelementptr [2 x %__init_Arg.147], ptr %10, i64 0, i64 0, !dbg !312
  %31 = getelementptr inbounds %__init_Arg.147, ptr %30, i32 0, i32 0, !dbg !312
  %32 = getelementptr inbounds %__init_Arg.147, ptr %30, i32 0, i32 1, !dbg !312
  store i64 1, ptr %31, align 8, !dbg !312
  store ptr %12, ptr %32, align 8, !dbg !312
  %33 = getelementptr [512 x i8], ptr %8, i64 0, i64 0, !dbg !312
  store ptr %33, ptr %13, align 8, !dbg !312
  %34 = getelementptr [2 x %__init_Arg.147], ptr %10, i64 0, i64 1, !dbg !312
  %35 = getelementptr inbounds %__init_Arg.147, ptr %34, i32 0, i32 0, !dbg !312
  %36 = getelementptr inbounds %__init_Arg.147, ptr %34, i32 0, i32 1, !dbg !312
  store i64 60, ptr %35, align 8, !dbg !312
  store ptr %13, ptr %36, align 8, !dbg !312
  call void @__io_println(ptr %11, ptr %9), !dbg !312
  call void @__os_abort(), !dbg !313
  br label %block_3, !dbg !313

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !313

block_3:                                          ; preds = %block_2, %block_1
  ret void, !dbg !314
}

define void @__renderer_gl_callback(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, ptr %5, ptr %6) !dbg !315 {
block_0:
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca %slice.206, align 8
  %15 = alloca [1 x %__init_Arg.147], align 8
  %16 = alloca %string.146, align 8
  %17 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %10, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %11, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  store i32 %0, ptr %7, align 4, !dbg !318
  call void @llvm.dbg.value(metadata ptr %7, metadata !319, metadata !DIExpression()), !dbg !318
  store i32 %1, ptr %8, align 4, !dbg !318
  call void @llvm.dbg.value(metadata ptr %8, metadata !320, metadata !DIExpression()), !dbg !318
  store i32 %2, ptr %9, align 4, !dbg !318
  call void @llvm.dbg.value(metadata ptr %9, metadata !321, metadata !DIExpression()), !dbg !318
  store i32 %3, ptr %10, align 4, !dbg !318
  call void @llvm.dbg.value(metadata ptr %10, metadata !322, metadata !DIExpression()), !dbg !318
  store i32 %4, ptr %11, align 4, !dbg !318
  call void @llvm.dbg.value(metadata ptr %11, metadata !323, metadata !DIExpression()), !dbg !318
  store ptr %5, ptr %12, align 8, !dbg !318
  call void @llvm.dbg.value(metadata ptr %12, metadata !324, metadata !DIExpression()), !dbg !318
  store ptr %6, ptr %13, align 8, !dbg !318
  call void @llvm.dbg.value(metadata ptr %13, metadata !325, metadata !DIExpression()), !dbg !318
  %18 = getelementptr inbounds %slice.206, ptr %14, i32 0, i32 0, !dbg !326
  %19 = getelementptr inbounds %slice.206, ptr %14, i32 0, i32 1, !dbg !326
  store i64 1, ptr %18, align 8, !dbg !326
  store ptr %15, ptr %19, align 8, !dbg !326
  %20 = alloca %string.146, align 8, !dbg !326
  %String = getelementptr inbounds %string.146, ptr %20, i32 0, i32 0, !dbg !326
  %Size = getelementptr inbounds %string.146, ptr %20, i32 0, i32 1, !dbg !326
  store ptr @___asan_gen__anon_global.25, ptr %String, align 8, !dbg !326
  store i64 14, ptr %Size, align 8, !dbg !326
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %20, i64 16, i1 false), !dbg !326
  %21 = load ptr, ptr %12, align 8, !dbg !326
  store ptr %21, ptr %17, align 8, !dbg !326
  %22 = getelementptr [1 x %__init_Arg.147], ptr %15, i64 0, i64 0, !dbg !326
  %23 = getelementptr inbounds %__init_Arg.147, ptr %22, i32 0, i32 0, !dbg !326
  %24 = getelementptr inbounds %__init_Arg.147, ptr %22, i32 0, i32 1, !dbg !326
  store i64 60, ptr %23, align 8, !dbg !326
  store ptr %17, ptr %24, align 8, !dbg !326
  call void @__io_println(ptr %16, ptr %14), !dbg !326
  ret void, !dbg !327
}

define void @"__renderer_set_uniform@u32_string_f32_@void"(i32 %0, ptr %1, float %2) !dbg !328 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca %string.146, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  %9 = alloca %slice.206, align 8
  %10 = alloca [1 x %__init_Arg.147], align 8
  %11 = alloca %string.146, align 8
  %12 = alloca %string.146, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca %slice.206, align 8
  %19 = alloca [1 x %__init_Arg.147], align 8
  %20 = alloca %string.146, align 8
  %21 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 8, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !331
  call void @llvm.dbg.value(metadata ptr %3, metadata !332, metadata !DIExpression()), !dbg !331
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %1, i64 16, i1 false), !dbg !331
  call void @llvm.dbg.value(metadata ptr %4, metadata !333, metadata !DIExpression()), !dbg !331
  store float %2, ptr %5, align 4, !dbg !331
  call void @llvm.dbg.value(metadata ptr %5, metadata !334, metadata !DIExpression()), !dbg !331
  %22 = load float, ptr %5, align 4, !dbg !335
  store float %22, ptr %6, align 4, !dbg !335
  call void @llvm.dbg.declare(metadata ptr %6, metadata !336, metadata !DIExpression()), !dbg !335
  store i64 10, ptr %7, align 8, !dbg !337
  call void @llvm.dbg.declare(metadata ptr %7, metadata !338, metadata !DIExpression()), !dbg !337
  %23 = load ptr, ptr @__gl_GetUniformLocation, align 8, !dbg !340
  %24 = load i32, ptr %3, align 4, !dbg !340
  %25 = getelementptr inbounds %string.146, ptr %4, i32 0, i32 0, !dbg !340
  %26 = load ptr, ptr %25, align 8, !dbg !340
  %27 = call i32 %23(i32 %24, ptr %26), !dbg !340
  store i32 %27, ptr %8, align 4, !dbg !340
  call void @llvm.dbg.declare(metadata ptr %8, metadata !341, metadata !DIExpression()), !dbg !340
  %28 = load i32, ptr %8, align 4, !dbg !342
  %29 = icmp eq i32 %28, -1, !dbg !342
  br i1 %29, label %block_1, label %block_2, !dbg !342

block_1:                                          ; preds = %block_0
  %30 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 0, !dbg !343
  %31 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 1, !dbg !343
  store i64 1, ptr %30, align 8, !dbg !343
  store ptr %10, ptr %31, align 8, !dbg !343
  %32 = alloca %string.146, align 8, !dbg !343
  %String = getelementptr inbounds %string.146, ptr %32, i32 0, i32 0, !dbg !343
  %Size = getelementptr inbounds %string.146, ptr %32, i32 0, i32 1, !dbg !343
  store ptr @___asan_gen__anon_global.27, ptr %String, align 8, !dbg !343
  store i64 34, ptr %Size, align 8, !dbg !343
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %32, i64 16, i1 false), !dbg !343
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %4, i64 16, i1 false), !dbg !343
  %33 = getelementptr [1 x %__init_Arg.147], ptr %10, i64 0, i64 0, !dbg !343
  %34 = getelementptr inbounds %__init_Arg.147, ptr %33, i32 0, i32 0, !dbg !343
  %35 = getelementptr inbounds %__init_Arg.147, ptr %33, i32 0, i32 1, !dbg !343
  store i64 1, ptr %34, align 8, !dbg !343
  store ptr %12, ptr %35, align 8, !dbg !343
  call void @__io_println(ptr %11, ptr %9), !dbg !343
  ret void, !dbg !344

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !344

block_3:                                          ; preds = %block_2
  %36 = load i64, ptr %7, align 8, !dbg !345
  %37 = icmp eq i64 %36, 10, !dbg !345
  br i1 %37, label %block_4, label %block_5, !dbg !345

block_4:                                          ; preds = %block_3
  %38 = load float, ptr %6, align 4, !dbg !346
  store float %38, ptr %13, align 4, !dbg !346
  call void @llvm.dbg.declare(metadata ptr %13, metadata !347, metadata !DIExpression()), !dbg !346
  %39 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !348
  %40 = load i32, ptr %8, align 4, !dbg !348
  %41 = load float, ptr %13, align 4, !dbg !348
  call void %39(i32 %40, float %41), !dbg !348
  br label %block_6, !dbg !348

block_5:                                          ; preds = %block_3
  %42 = load i64, ptr %7, align 8, !dbg !349
  %43 = icmp eq i64 %42, 11, !dbg !349
  br i1 %43, label %block_7, label %block_8, !dbg !349

block_7:                                          ; preds = %block_5
  %44 = load double, ptr %6, align 8, !dbg !350
  store double %44, ptr %14, align 8, !dbg !350
  call void @llvm.dbg.declare(metadata ptr %14, metadata !351, metadata !DIExpression()), !dbg !350
  %45 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !353
  %46 = load i32, ptr %8, align 4, !dbg !353
  %47 = load double, ptr %14, align 8, !dbg !353
  %48 = fptrunc double %47 to float, !dbg !353
  call void %45(i32 %46, float %48), !dbg !353
  br label %block_9, !dbg !353

block_8:                                          ; preds = %block_5
  %49 = load i64, ptr %7, align 8, !dbg !354
  %50 = icmp eq i64 %49, 14, !dbg !354
  br i1 %50, label %block_10, label %block_11, !dbg !354

block_10:                                         ; preds = %block_8
  %51 = load i64, ptr %6, align 8, !dbg !355
  store i64 %51, ptr %15, align 8, !dbg !355
  call void @llvm.dbg.declare(metadata ptr %15, metadata !356, metadata !DIExpression()), !dbg !355
  %52 = load ptr, ptr @__gl_Uniform1i, align 8, !dbg !357
  %53 = load i32, ptr %8, align 4, !dbg !357
  %54 = load i64, ptr %15, align 8, !dbg !357
  %55 = trunc i64 %54 to i32, !dbg !357
  call void %52(i32 %53, i32 %55), !dbg !357
  br label %block_12, !dbg !357

block_11:                                         ; preds = %block_8
  %56 = load i64, ptr %7, align 8, !dbg !358
  %57 = icmp eq i64 %56, 348, !dbg !358
  br i1 %57, label %block_13, label %block_14, !dbg !358

block_13:                                         ; preds = %block_11
  store ptr %6, ptr %16, align 8, !dbg !359
  call void @llvm.dbg.declare(metadata ptr %16, metadata !360, metadata !DIExpression()), !dbg !359
  %58 = load ptr, ptr @__gl_Uniform2f, align 8, !dbg !366
  %59 = load i32, ptr %8, align 4, !dbg !366
  %60 = load ptr, ptr %16, align 8, !dbg !366
  %61 = getelementptr inbounds %__math_v2.173, ptr %60, i32 0, i32 0, !dbg !366
  %62 = load float, ptr %61, align 4, !dbg !366
  %63 = load ptr, ptr %16, align 8, !dbg !366
  %64 = getelementptr inbounds %__math_v2.173, ptr %63, i32 0, i32 1, !dbg !366
  %65 = load float, ptr %64, align 4, !dbg !366
  call void %58(i32 %59, float %62, float %65), !dbg !366
  br label %block_15, !dbg !366

block_14:                                         ; preds = %block_11
  %66 = load i64, ptr %7, align 8, !dbg !367
  %67 = icmp eq i64 %66, 349, !dbg !367
  br i1 %67, label %block_16, label %block_17, !dbg !367

block_16:                                         ; preds = %block_14
  store ptr %6, ptr %17, align 8, !dbg !368
  call void @llvm.dbg.declare(metadata ptr %17, metadata !369, metadata !DIExpression()), !dbg !368
  %68 = load ptr, ptr @__gl_Uniform3f, align 8, !dbg !370
  %69 = load i32, ptr %8, align 4, !dbg !370
  %70 = load ptr, ptr %17, align 8, !dbg !370
  %71 = getelementptr inbounds %__math_v3.174, ptr %70, i32 0, i32 0, !dbg !370
  %72 = load float, ptr %71, align 4, !dbg !370
  %73 = load ptr, ptr %17, align 8, !dbg !370
  %74 = getelementptr inbounds %__math_v3.174, ptr %73, i32 0, i32 1, !dbg !370
  %75 = load float, ptr %74, align 4, !dbg !370
  %76 = load ptr, ptr %17, align 8, !dbg !370
  %77 = getelementptr inbounds %__math_v3.174, ptr %76, i32 0, i32 2, !dbg !370
  %78 = load float, ptr %77, align 4, !dbg !370
  call void %68(i32 %69, float %72, float %75, float %78), !dbg !370
  br label %block_18, !dbg !370

block_17:                                         ; preds = %block_14
  %79 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 0, !dbg !371
  %80 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 1, !dbg !371
  store i64 1, ptr %79, align 8, !dbg !371
  store ptr %19, ptr %80, align 8, !dbg !371
  %81 = alloca %string.146, align 8, !dbg !371
  %String1 = getelementptr inbounds %string.146, ptr %81, i32 0, i32 0, !dbg !371
  %Size2 = getelementptr inbounds %string.146, ptr %81, i32 0, i32 1, !dbg !371
  store ptr @___asan_gen__anon_global.29, ptr %String1, align 8, !dbg !371
  store i64 34, ptr %Size2, align 8, !dbg !371
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %81, i64 16, i1 false), !dbg !371
  %82 = load i64, ptr %7, align 8, !dbg !371
  store i64 %82, ptr %21, align 8, !dbg !371
  %83 = getelementptr [1 x %__init_Arg.147], ptr %19, i64 0, i64 0, !dbg !371
  %84 = getelementptr inbounds %__init_Arg.147, ptr %83, i32 0, i32 0, !dbg !371
  %85 = getelementptr inbounds %__init_Arg.147, ptr %83, i32 0, i32 1, !dbg !371
  store i64 16, ptr %84, align 8, !dbg !371
  store ptr %21, ptr %85, align 8, !dbg !371
  call void @__io_println(ptr %20, ptr %18), !dbg !371
  br label %block_18, !dbg !371

block_18:                                         ; preds = %block_17, %block_16
  br label %block_15, !dbg !371

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !371

block_12:                                         ; preds = %block_15, %block_10
  br label %block_9, !dbg !371

block_9:                                          ; preds = %block_12, %block_7
  br label %block_6, !dbg !371

block_6:                                          ; preds = %block_9, %block_4
  ret void, !dbg !372
}

define void @"__renderer_set_uniform@u32_string_@@f32_f32_@@__math_v2_@void"(i32 %0, ptr %1, i64 %2) !dbg !373 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca %string.146, align 8
  %5 = alloca %__math_v2.173, align 8
  %6 = alloca %__math_v2.173, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  %9 = alloca %slice.206, align 8
  %10 = alloca [1 x %__init_Arg.147], align 8
  %11 = alloca %string.146, align 8
  %12 = alloca %string.146, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca %slice.206, align 8
  %19 = alloca [1 x %__init_Arg.147], align 8
  %20 = alloca %string.146, align 8
  %21 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 8, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !378
  call void @llvm.dbg.value(metadata ptr %3, metadata !379, metadata !DIExpression()), !dbg !378
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %1, i64 16, i1 false), !dbg !378
  call void @llvm.dbg.value(metadata ptr %4, metadata !380, metadata !DIExpression()), !dbg !378
  %22 = alloca %__math_v2.173, align 8, !dbg !378
  store i64 %2, ptr %22, align 8, !dbg !378
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %22, i64 8, i1 false), !dbg !378
  call void @llvm.dbg.value(metadata ptr %5, metadata !381, metadata !DIExpression()), !dbg !378
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %6, ptr align 4 %5, i64 8, i1 false), !dbg !382
  call void @llvm.dbg.declare(metadata ptr %6, metadata !383, metadata !DIExpression()), !dbg !382
  store i64 348, ptr %7, align 8, !dbg !384
  call void @llvm.dbg.declare(metadata ptr %7, metadata !385, metadata !DIExpression()), !dbg !384
  %23 = load ptr, ptr @__gl_GetUniformLocation, align 8, !dbg !386
  %24 = load i32, ptr %3, align 4, !dbg !386
  %25 = getelementptr inbounds %string.146, ptr %4, i32 0, i32 0, !dbg !386
  %26 = load ptr, ptr %25, align 8, !dbg !386
  %27 = call i32 %23(i32 %24, ptr %26), !dbg !386
  store i32 %27, ptr %8, align 4, !dbg !386
  call void @llvm.dbg.declare(metadata ptr %8, metadata !387, metadata !DIExpression()), !dbg !386
  %28 = load i32, ptr %8, align 4, !dbg !388
  %29 = icmp eq i32 %28, -1, !dbg !388
  br i1 %29, label %block_1, label %block_2, !dbg !388

block_1:                                          ; preds = %block_0
  %30 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 0, !dbg !389
  %31 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 1, !dbg !389
  store i64 1, ptr %30, align 8, !dbg !389
  store ptr %10, ptr %31, align 8, !dbg !389
  %32 = alloca %string.146, align 8, !dbg !389
  %String = getelementptr inbounds %string.146, ptr %32, i32 0, i32 0, !dbg !389
  %Size = getelementptr inbounds %string.146, ptr %32, i32 0, i32 1, !dbg !389
  store ptr @___asan_gen__anon_global.31, ptr %String, align 8, !dbg !389
  store i64 34, ptr %Size, align 8, !dbg !389
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %32, i64 16, i1 false), !dbg !389
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %4, i64 16, i1 false), !dbg !389
  %33 = getelementptr [1 x %__init_Arg.147], ptr %10, i64 0, i64 0, !dbg !389
  %34 = getelementptr inbounds %__init_Arg.147, ptr %33, i32 0, i32 0, !dbg !389
  %35 = getelementptr inbounds %__init_Arg.147, ptr %33, i32 0, i32 1, !dbg !389
  store i64 1, ptr %34, align 8, !dbg !389
  store ptr %12, ptr %35, align 8, !dbg !389
  call void @__io_println(ptr %11, ptr %9), !dbg !389
  ret void, !dbg !390

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !390

block_3:                                          ; preds = %block_2
  %36 = load i64, ptr %7, align 8, !dbg !391
  %37 = icmp eq i64 %36, 10, !dbg !391
  br i1 %37, label %block_4, label %block_5, !dbg !391

block_4:                                          ; preds = %block_3
  %38 = load float, ptr %6, align 4, !dbg !392
  store float %38, ptr %13, align 4, !dbg !392
  call void @llvm.dbg.declare(metadata ptr %13, metadata !393, metadata !DIExpression()), !dbg !392
  %39 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !394
  %40 = load i32, ptr %8, align 4, !dbg !394
  %41 = load float, ptr %13, align 4, !dbg !394
  call void %39(i32 %40, float %41), !dbg !394
  br label %block_6, !dbg !394

block_5:                                          ; preds = %block_3
  %42 = load i64, ptr %7, align 8, !dbg !395
  %43 = icmp eq i64 %42, 11, !dbg !395
  br i1 %43, label %block_7, label %block_8, !dbg !395

block_7:                                          ; preds = %block_5
  %44 = load double, ptr %6, align 8, !dbg !396
  store double %44, ptr %14, align 8, !dbg !396
  call void @llvm.dbg.declare(metadata ptr %14, metadata !397, metadata !DIExpression()), !dbg !396
  %45 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !398
  %46 = load i32, ptr %8, align 4, !dbg !398
  %47 = load double, ptr %14, align 8, !dbg !398
  %48 = fptrunc double %47 to float, !dbg !398
  call void %45(i32 %46, float %48), !dbg !398
  br label %block_9, !dbg !398

block_8:                                          ; preds = %block_5
  %49 = load i64, ptr %7, align 8, !dbg !399
  %50 = icmp eq i64 %49, 14, !dbg !399
  br i1 %50, label %block_10, label %block_11, !dbg !399

block_10:                                         ; preds = %block_8
  %51 = load i64, ptr %6, align 8, !dbg !400
  store i64 %51, ptr %15, align 8, !dbg !400
  call void @llvm.dbg.declare(metadata ptr %15, metadata !401, metadata !DIExpression()), !dbg !400
  %52 = load ptr, ptr @__gl_Uniform1i, align 8, !dbg !402
  %53 = load i32, ptr %8, align 4, !dbg !402
  %54 = load i64, ptr %15, align 8, !dbg !402
  %55 = trunc i64 %54 to i32, !dbg !402
  call void %52(i32 %53, i32 %55), !dbg !402
  br label %block_12, !dbg !402

block_11:                                         ; preds = %block_8
  %56 = load i64, ptr %7, align 8, !dbg !403
  %57 = icmp eq i64 %56, 348, !dbg !403
  br i1 %57, label %block_13, label %block_14, !dbg !403

block_13:                                         ; preds = %block_11
  store ptr %6, ptr %16, align 8, !dbg !404
  call void @llvm.dbg.declare(metadata ptr %16, metadata !405, metadata !DIExpression()), !dbg !404
  %58 = load ptr, ptr @__gl_Uniform2f, align 8, !dbg !406
  %59 = load i32, ptr %8, align 4, !dbg !406
  %60 = load ptr, ptr %16, align 8, !dbg !406
  %61 = getelementptr inbounds %__math_v2.173, ptr %60, i32 0, i32 0, !dbg !406
  %62 = load float, ptr %61, align 4, !dbg !406
  %63 = load ptr, ptr %16, align 8, !dbg !406
  %64 = getelementptr inbounds %__math_v2.173, ptr %63, i32 0, i32 1, !dbg !406
  %65 = load float, ptr %64, align 4, !dbg !406
  call void %58(i32 %59, float %62, float %65), !dbg !406
  br label %block_15, !dbg !406

block_14:                                         ; preds = %block_11
  %66 = load i64, ptr %7, align 8, !dbg !407
  %67 = icmp eq i64 %66, 349, !dbg !407
  br i1 %67, label %block_16, label %block_17, !dbg !407

block_16:                                         ; preds = %block_14
  store ptr %6, ptr %17, align 8, !dbg !408
  call void @llvm.dbg.declare(metadata ptr %17, metadata !409, metadata !DIExpression()), !dbg !408
  %68 = load ptr, ptr @__gl_Uniform3f, align 8, !dbg !410
  %69 = load i32, ptr %8, align 4, !dbg !410
  %70 = load ptr, ptr %17, align 8, !dbg !410
  %71 = getelementptr inbounds %__math_v3.174, ptr %70, i32 0, i32 0, !dbg !410
  %72 = load float, ptr %71, align 4, !dbg !410
  %73 = load ptr, ptr %17, align 8, !dbg !410
  %74 = getelementptr inbounds %__math_v3.174, ptr %73, i32 0, i32 1, !dbg !410
  %75 = load float, ptr %74, align 4, !dbg !410
  %76 = load ptr, ptr %17, align 8, !dbg !410
  %77 = getelementptr inbounds %__math_v3.174, ptr %76, i32 0, i32 2, !dbg !410
  %78 = load float, ptr %77, align 4, !dbg !410
  call void %68(i32 %69, float %72, float %75, float %78), !dbg !410
  br label %block_18, !dbg !410

block_17:                                         ; preds = %block_14
  %79 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 0, !dbg !411
  %80 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 1, !dbg !411
  store i64 1, ptr %79, align 8, !dbg !411
  store ptr %19, ptr %80, align 8, !dbg !411
  %81 = alloca %string.146, align 8, !dbg !411
  %String1 = getelementptr inbounds %string.146, ptr %81, i32 0, i32 0, !dbg !411
  %Size2 = getelementptr inbounds %string.146, ptr %81, i32 0, i32 1, !dbg !411
  store ptr @___asan_gen__anon_global.33, ptr %String1, align 8, !dbg !411
  store i64 34, ptr %Size2, align 8, !dbg !411
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %81, i64 16, i1 false), !dbg !411
  %82 = load i64, ptr %7, align 8, !dbg !411
  store i64 %82, ptr %21, align 8, !dbg !411
  %83 = getelementptr [1 x %__init_Arg.147], ptr %19, i64 0, i64 0, !dbg !411
  %84 = getelementptr inbounds %__init_Arg.147, ptr %83, i32 0, i32 0, !dbg !411
  %85 = getelementptr inbounds %__init_Arg.147, ptr %83, i32 0, i32 1, !dbg !411
  store i64 16, ptr %84, align 8, !dbg !411
  store ptr %21, ptr %85, align 8, !dbg !411
  call void @__io_println(ptr %20, ptr %18), !dbg !411
  br label %block_18, !dbg !411

block_18:                                         ; preds = %block_17, %block_16
  br label %block_15, !dbg !411

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !411

block_12:                                         ; preds = %block_15, %block_10
  br label %block_9, !dbg !411

block_9:                                          ; preds = %block_12, %block_7
  br label %block_6, !dbg !411

block_6:                                          ; preds = %block_9, %block_4
  ret void, !dbg !412
}

define void @"__renderer_set_uniform@u32_string_@@f32_f32_f32_@@__math_v3_@void"(i32 %0, ptr %1, ptr %2) !dbg !413 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca %string.146, align 8
  %5 = alloca %__math_v3.174, align 8
  %6 = alloca %__math_v3.174, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 12, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 12, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  %9 = alloca %slice.206, align 8
  %10 = alloca [1 x %__init_Arg.147], align 8
  %11 = alloca %string.146, align 8
  %12 = alloca %string.146, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca %slice.206, align 8
  %19 = alloca [1 x %__init_Arg.147], align 8
  %20 = alloca %string.146, align 8
  %21 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 8, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !416
  call void @llvm.dbg.value(metadata ptr %3, metadata !417, metadata !DIExpression()), !dbg !416
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %1, i64 16, i1 false), !dbg !416
  call void @llvm.dbg.value(metadata ptr %4, metadata !418, metadata !DIExpression()), !dbg !416
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %2, i64 12, i1 false), !dbg !416
  call void @llvm.dbg.value(metadata ptr %5, metadata !419, metadata !DIExpression()), !dbg !416
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %6, ptr align 4 %5, i64 12, i1 false), !dbg !420
  call void @llvm.dbg.declare(metadata ptr %6, metadata !421, metadata !DIExpression()), !dbg !420
  store i64 349, ptr %7, align 8, !dbg !422
  call void @llvm.dbg.declare(metadata ptr %7, metadata !423, metadata !DIExpression()), !dbg !422
  %22 = load ptr, ptr @__gl_GetUniformLocation, align 8, !dbg !424
  %23 = load i32, ptr %3, align 4, !dbg !424
  %24 = getelementptr inbounds %string.146, ptr %4, i32 0, i32 0, !dbg !424
  %25 = load ptr, ptr %24, align 8, !dbg !424
  %26 = call i32 %22(i32 %23, ptr %25), !dbg !424
  store i32 %26, ptr %8, align 4, !dbg !424
  call void @llvm.dbg.declare(metadata ptr %8, metadata !425, metadata !DIExpression()), !dbg !424
  %27 = load i32, ptr %8, align 4, !dbg !426
  %28 = icmp eq i32 %27, -1, !dbg !426
  br i1 %28, label %block_1, label %block_2, !dbg !426

block_1:                                          ; preds = %block_0
  %29 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 0, !dbg !427
  %30 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 1, !dbg !427
  store i64 1, ptr %29, align 8, !dbg !427
  store ptr %10, ptr %30, align 8, !dbg !427
  %31 = alloca %string.146, align 8, !dbg !427
  %String = getelementptr inbounds %string.146, ptr %31, i32 0, i32 0, !dbg !427
  %Size = getelementptr inbounds %string.146, ptr %31, i32 0, i32 1, !dbg !427
  store ptr @___asan_gen__anon_global.35, ptr %String, align 8, !dbg !427
  store i64 34, ptr %Size, align 8, !dbg !427
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %31, i64 16, i1 false), !dbg !427
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %4, i64 16, i1 false), !dbg !427
  %32 = getelementptr [1 x %__init_Arg.147], ptr %10, i64 0, i64 0, !dbg !427
  %33 = getelementptr inbounds %__init_Arg.147, ptr %32, i32 0, i32 0, !dbg !427
  %34 = getelementptr inbounds %__init_Arg.147, ptr %32, i32 0, i32 1, !dbg !427
  store i64 1, ptr %33, align 8, !dbg !427
  store ptr %12, ptr %34, align 8, !dbg !427
  call void @__io_println(ptr %11, ptr %9), !dbg !427
  ret void, !dbg !428

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !428

block_3:                                          ; preds = %block_2
  %35 = load i64, ptr %7, align 8, !dbg !429
  %36 = icmp eq i64 %35, 10, !dbg !429
  br i1 %36, label %block_4, label %block_5, !dbg !429

block_4:                                          ; preds = %block_3
  %37 = load float, ptr %6, align 4, !dbg !430
  store float %37, ptr %13, align 4, !dbg !430
  call void @llvm.dbg.declare(metadata ptr %13, metadata !431, metadata !DIExpression()), !dbg !430
  %38 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !432
  %39 = load i32, ptr %8, align 4, !dbg !432
  %40 = load float, ptr %13, align 4, !dbg !432
  call void %38(i32 %39, float %40), !dbg !432
  br label %block_6, !dbg !432

block_5:                                          ; preds = %block_3
  %41 = load i64, ptr %7, align 8, !dbg !433
  %42 = icmp eq i64 %41, 11, !dbg !433
  br i1 %42, label %block_7, label %block_8, !dbg !433

block_7:                                          ; preds = %block_5
  %43 = load double, ptr %6, align 8, !dbg !434
  store double %43, ptr %14, align 8, !dbg !434
  call void @llvm.dbg.declare(metadata ptr %14, metadata !435, metadata !DIExpression()), !dbg !434
  %44 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !436
  %45 = load i32, ptr %8, align 4, !dbg !436
  %46 = load double, ptr %14, align 8, !dbg !436
  %47 = fptrunc double %46 to float, !dbg !436
  call void %44(i32 %45, float %47), !dbg !436
  br label %block_9, !dbg !436

block_8:                                          ; preds = %block_5
  %48 = load i64, ptr %7, align 8, !dbg !437
  %49 = icmp eq i64 %48, 14, !dbg !437
  br i1 %49, label %block_10, label %block_11, !dbg !437

block_10:                                         ; preds = %block_8
  %50 = load i64, ptr %6, align 8, !dbg !438
  store i64 %50, ptr %15, align 8, !dbg !438
  call void @llvm.dbg.declare(metadata ptr %15, metadata !439, metadata !DIExpression()), !dbg !438
  %51 = load ptr, ptr @__gl_Uniform1i, align 8, !dbg !440
  %52 = load i32, ptr %8, align 4, !dbg !440
  %53 = load i64, ptr %15, align 8, !dbg !440
  %54 = trunc i64 %53 to i32, !dbg !440
  call void %51(i32 %52, i32 %54), !dbg !440
  br label %block_12, !dbg !440

block_11:                                         ; preds = %block_8
  %55 = load i64, ptr %7, align 8, !dbg !441
  %56 = icmp eq i64 %55, 348, !dbg !441
  br i1 %56, label %block_13, label %block_14, !dbg !441

block_13:                                         ; preds = %block_11
  store ptr %6, ptr %16, align 8, !dbg !442
  call void @llvm.dbg.declare(metadata ptr %16, metadata !443, metadata !DIExpression()), !dbg !442
  %57 = load ptr, ptr @__gl_Uniform2f, align 8, !dbg !444
  %58 = load i32, ptr %8, align 4, !dbg !444
  %59 = load ptr, ptr %16, align 8, !dbg !444
  %60 = getelementptr inbounds %__math_v2.173, ptr %59, i32 0, i32 0, !dbg !444
  %61 = load float, ptr %60, align 4, !dbg !444
  %62 = load ptr, ptr %16, align 8, !dbg !444
  %63 = getelementptr inbounds %__math_v2.173, ptr %62, i32 0, i32 1, !dbg !444
  %64 = load float, ptr %63, align 4, !dbg !444
  call void %57(i32 %58, float %61, float %64), !dbg !444
  br label %block_15, !dbg !444

block_14:                                         ; preds = %block_11
  %65 = load i64, ptr %7, align 8, !dbg !445
  %66 = icmp eq i64 %65, 349, !dbg !445
  br i1 %66, label %block_16, label %block_17, !dbg !445

block_16:                                         ; preds = %block_14
  store ptr %6, ptr %17, align 8, !dbg !446
  call void @llvm.dbg.declare(metadata ptr %17, metadata !447, metadata !DIExpression()), !dbg !446
  %67 = load ptr, ptr @__gl_Uniform3f, align 8, !dbg !448
  %68 = load i32, ptr %8, align 4, !dbg !448
  %69 = load ptr, ptr %17, align 8, !dbg !448
  %70 = getelementptr inbounds %__math_v3.174, ptr %69, i32 0, i32 0, !dbg !448
  %71 = load float, ptr %70, align 4, !dbg !448
  %72 = load ptr, ptr %17, align 8, !dbg !448
  %73 = getelementptr inbounds %__math_v3.174, ptr %72, i32 0, i32 1, !dbg !448
  %74 = load float, ptr %73, align 4, !dbg !448
  %75 = load ptr, ptr %17, align 8, !dbg !448
  %76 = getelementptr inbounds %__math_v3.174, ptr %75, i32 0, i32 2, !dbg !448
  %77 = load float, ptr %76, align 4, !dbg !448
  call void %67(i32 %68, float %71, float %74, float %77), !dbg !448
  br label %block_18, !dbg !448

block_17:                                         ; preds = %block_14
  %78 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 0, !dbg !449
  %79 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 1, !dbg !449
  store i64 1, ptr %78, align 8, !dbg !449
  store ptr %19, ptr %79, align 8, !dbg !449
  %80 = alloca %string.146, align 8, !dbg !449
  %String1 = getelementptr inbounds %string.146, ptr %80, i32 0, i32 0, !dbg !449
  %Size2 = getelementptr inbounds %string.146, ptr %80, i32 0, i32 1, !dbg !449
  store ptr @___asan_gen__anon_global.37, ptr %String1, align 8, !dbg !449
  store i64 34, ptr %Size2, align 8, !dbg !449
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %80, i64 16, i1 false), !dbg !449
  %81 = load i64, ptr %7, align 8, !dbg !449
  store i64 %81, ptr %21, align 8, !dbg !449
  %82 = getelementptr [1 x %__init_Arg.147], ptr %19, i64 0, i64 0, !dbg !449
  %83 = getelementptr inbounds %__init_Arg.147, ptr %82, i32 0, i32 0, !dbg !449
  %84 = getelementptr inbounds %__init_Arg.147, ptr %82, i32 0, i32 1, !dbg !449
  store i64 16, ptr %83, align 8, !dbg !449
  store ptr %21, ptr %84, align 8, !dbg !449
  call void @__io_println(ptr %20, ptr %18), !dbg !449
  br label %block_18, !dbg !449

block_18:                                         ; preds = %block_17, %block_16
  br label %block_15, !dbg !449

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !449

block_12:                                         ; preds = %block_15, %block_10
  br label %block_9, !dbg !449

block_9:                                          ; preds = %block_12, %block_7
  br label %block_6, !dbg !449

block_6:                                          ; preds = %block_9, %block_4
  ret void, !dbg !450
}

define void @"__renderer_set_uniform@u32_string_int_@void"(i32 %0, ptr %1, i64 %2) !dbg !451 {
block_0:
  %3 = alloca i32, align 4
  %4 = alloca %string.146, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 4, i1 false)
  %9 = alloca %slice.206, align 8
  %10 = alloca [1 x %__init_Arg.147], align 8
  %11 = alloca %string.146, align 8
  %12 = alloca %string.146, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca %slice.206, align 8
  %19 = alloca [1 x %__init_Arg.147], align 8
  %20 = alloca %string.146, align 8
  %21 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 8, i1 false)
  store i32 %0, ptr %3, align 4, !dbg !454
  call void @llvm.dbg.value(metadata ptr %3, metadata !455, metadata !DIExpression()), !dbg !454
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %1, i64 16, i1 false), !dbg !454
  call void @llvm.dbg.value(metadata ptr %4, metadata !456, metadata !DIExpression()), !dbg !454
  store i64 %2, ptr %5, align 8, !dbg !454
  call void @llvm.dbg.value(metadata ptr %5, metadata !457, metadata !DIExpression()), !dbg !454
  %22 = load i64, ptr %5, align 8, !dbg !458
  store i64 %22, ptr %6, align 8, !dbg !458
  call void @llvm.dbg.declare(metadata ptr %6, metadata !459, metadata !DIExpression()), !dbg !458
  store i64 14, ptr %7, align 8, !dbg !460
  call void @llvm.dbg.declare(metadata ptr %7, metadata !461, metadata !DIExpression()), !dbg !460
  %23 = load ptr, ptr @__gl_GetUniformLocation, align 8, !dbg !462
  %24 = load i32, ptr %3, align 4, !dbg !462
  %25 = getelementptr inbounds %string.146, ptr %4, i32 0, i32 0, !dbg !462
  %26 = load ptr, ptr %25, align 8, !dbg !462
  %27 = call i32 %23(i32 %24, ptr %26), !dbg !462
  store i32 %27, ptr %8, align 4, !dbg !462
  call void @llvm.dbg.declare(metadata ptr %8, metadata !463, metadata !DIExpression()), !dbg !462
  %28 = load i32, ptr %8, align 4, !dbg !464
  %29 = icmp eq i32 %28, -1, !dbg !464
  br i1 %29, label %block_1, label %block_2, !dbg !464

block_1:                                          ; preds = %block_0
  %30 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 0, !dbg !465
  %31 = getelementptr inbounds %slice.206, ptr %9, i32 0, i32 1, !dbg !465
  store i64 1, ptr %30, align 8, !dbg !465
  store ptr %10, ptr %31, align 8, !dbg !465
  %32 = alloca %string.146, align 8, !dbg !465
  %String = getelementptr inbounds %string.146, ptr %32, i32 0, i32 0, !dbg !465
  %Size = getelementptr inbounds %string.146, ptr %32, i32 0, i32 1, !dbg !465
  store ptr @___asan_gen__anon_global.39, ptr %String, align 8, !dbg !465
  store i64 34, ptr %Size, align 8, !dbg !465
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %32, i64 16, i1 false), !dbg !465
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %4, i64 16, i1 false), !dbg !465
  %33 = getelementptr [1 x %__init_Arg.147], ptr %10, i64 0, i64 0, !dbg !465
  %34 = getelementptr inbounds %__init_Arg.147, ptr %33, i32 0, i32 0, !dbg !465
  %35 = getelementptr inbounds %__init_Arg.147, ptr %33, i32 0, i32 1, !dbg !465
  store i64 1, ptr %34, align 8, !dbg !465
  store ptr %12, ptr %35, align 8, !dbg !465
  call void @__io_println(ptr %11, ptr %9), !dbg !465
  ret void, !dbg !466

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !466

block_3:                                          ; preds = %block_2
  %36 = load i64, ptr %7, align 8, !dbg !467
  %37 = icmp eq i64 %36, 10, !dbg !467
  br i1 %37, label %block_4, label %block_5, !dbg !467

block_4:                                          ; preds = %block_3
  %38 = load float, ptr %6, align 4, !dbg !468
  store float %38, ptr %13, align 4, !dbg !468
  call void @llvm.dbg.declare(metadata ptr %13, metadata !469, metadata !DIExpression()), !dbg !468
  %39 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !470
  %40 = load i32, ptr %8, align 4, !dbg !470
  %41 = load float, ptr %13, align 4, !dbg !470
  call void %39(i32 %40, float %41), !dbg !470
  br label %block_6, !dbg !470

block_5:                                          ; preds = %block_3
  %42 = load i64, ptr %7, align 8, !dbg !471
  %43 = icmp eq i64 %42, 11, !dbg !471
  br i1 %43, label %block_7, label %block_8, !dbg !471

block_7:                                          ; preds = %block_5
  %44 = load double, ptr %6, align 8, !dbg !472
  store double %44, ptr %14, align 8, !dbg !472
  call void @llvm.dbg.declare(metadata ptr %14, metadata !473, metadata !DIExpression()), !dbg !472
  %45 = load ptr, ptr @__gl_Uniform1f, align 8, !dbg !474
  %46 = load i32, ptr %8, align 4, !dbg !474
  %47 = load double, ptr %14, align 8, !dbg !474
  %48 = fptrunc double %47 to float, !dbg !474
  call void %45(i32 %46, float %48), !dbg !474
  br label %block_9, !dbg !474

block_8:                                          ; preds = %block_5
  %49 = load i64, ptr %7, align 8, !dbg !475
  %50 = icmp eq i64 %49, 14, !dbg !475
  br i1 %50, label %block_10, label %block_11, !dbg !475

block_10:                                         ; preds = %block_8
  %51 = load i64, ptr %6, align 8, !dbg !476
  store i64 %51, ptr %15, align 8, !dbg !476
  call void @llvm.dbg.declare(metadata ptr %15, metadata !477, metadata !DIExpression()), !dbg !476
  %52 = load ptr, ptr @__gl_Uniform1i, align 8, !dbg !478
  %53 = load i32, ptr %8, align 4, !dbg !478
  %54 = load i64, ptr %15, align 8, !dbg !478
  %55 = trunc i64 %54 to i32, !dbg !478
  call void %52(i32 %53, i32 %55), !dbg !478
  br label %block_12, !dbg !478

block_11:                                         ; preds = %block_8
  %56 = load i64, ptr %7, align 8, !dbg !479
  %57 = icmp eq i64 %56, 348, !dbg !479
  br i1 %57, label %block_13, label %block_14, !dbg !479

block_13:                                         ; preds = %block_11
  store ptr %6, ptr %16, align 8, !dbg !480
  call void @llvm.dbg.declare(metadata ptr %16, metadata !481, metadata !DIExpression()), !dbg !480
  %58 = load ptr, ptr @__gl_Uniform2f, align 8, !dbg !482
  %59 = load i32, ptr %8, align 4, !dbg !482
  %60 = load ptr, ptr %16, align 8, !dbg !482
  %61 = getelementptr inbounds %__math_v2.173, ptr %60, i32 0, i32 0, !dbg !482
  %62 = load float, ptr %61, align 4, !dbg !482
  %63 = load ptr, ptr %16, align 8, !dbg !482
  %64 = getelementptr inbounds %__math_v2.173, ptr %63, i32 0, i32 1, !dbg !482
  %65 = load float, ptr %64, align 4, !dbg !482
  call void %58(i32 %59, float %62, float %65), !dbg !482
  br label %block_15, !dbg !482

block_14:                                         ; preds = %block_11
  %66 = load i64, ptr %7, align 8, !dbg !483
  %67 = icmp eq i64 %66, 349, !dbg !483
  br i1 %67, label %block_16, label %block_17, !dbg !483

block_16:                                         ; preds = %block_14
  store ptr %6, ptr %17, align 8, !dbg !484
  call void @llvm.dbg.declare(metadata ptr %17, metadata !485, metadata !DIExpression()), !dbg !484
  %68 = load ptr, ptr @__gl_Uniform3f, align 8, !dbg !486
  %69 = load i32, ptr %8, align 4, !dbg !486
  %70 = load ptr, ptr %17, align 8, !dbg !486
  %71 = getelementptr inbounds %__math_v3.174, ptr %70, i32 0, i32 0, !dbg !486
  %72 = load float, ptr %71, align 4, !dbg !486
  %73 = load ptr, ptr %17, align 8, !dbg !486
  %74 = getelementptr inbounds %__math_v3.174, ptr %73, i32 0, i32 1, !dbg !486
  %75 = load float, ptr %74, align 4, !dbg !486
  %76 = load ptr, ptr %17, align 8, !dbg !486
  %77 = getelementptr inbounds %__math_v3.174, ptr %76, i32 0, i32 2, !dbg !486
  %78 = load float, ptr %77, align 4, !dbg !486
  call void %68(i32 %69, float %72, float %75, float %78), !dbg !486
  br label %block_18, !dbg !486

block_17:                                         ; preds = %block_14
  %79 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 0, !dbg !487
  %80 = getelementptr inbounds %slice.206, ptr %18, i32 0, i32 1, !dbg !487
  store i64 1, ptr %79, align 8, !dbg !487
  store ptr %19, ptr %80, align 8, !dbg !487
  %81 = alloca %string.146, align 8, !dbg !487
  %String1 = getelementptr inbounds %string.146, ptr %81, i32 0, i32 0, !dbg !487
  %Size2 = getelementptr inbounds %string.146, ptr %81, i32 0, i32 1, !dbg !487
  store ptr @___asan_gen__anon_global.41, ptr %String1, align 8, !dbg !487
  store i64 34, ptr %Size2, align 8, !dbg !487
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %81, i64 16, i1 false), !dbg !487
  %82 = load i64, ptr %7, align 8, !dbg !487
  store i64 %82, ptr %21, align 8, !dbg !487
  %83 = getelementptr [1 x %__init_Arg.147], ptr %19, i64 0, i64 0, !dbg !487
  %84 = getelementptr inbounds %__init_Arg.147, ptr %83, i32 0, i32 0, !dbg !487
  %85 = getelementptr inbounds %__init_Arg.147, ptr %83, i32 0, i32 1, !dbg !487
  store i64 16, ptr %84, align 8, !dbg !487
  store ptr %21, ptr %85, align 8, !dbg !487
  call void @__io_println(ptr %20, ptr %18), !dbg !487
  br label %block_18, !dbg !487

block_18:                                         ; preds = %block_17, %block_16
  br label %block_15, !dbg !487

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !487

block_12:                                         ; preds = %block_15, %block_10
  br label %block_9, !dbg !487

block_9:                                          ; preds = %block_12, %block_7
  br label %block_6, !dbg !487

block_6:                                          ; preds = %block_9, %block_4
  ret void, !dbg !488
}

declare i64 @__graph_map_point(i64, float, float)

declare i64 @__graph_calculate_spline(i64, i64, i64, i64, float)

declare void @__graph_draw(ptr, ptr, float, float)

declare i64 @__math_v2_scale(i64, float)

declare i64 @__math_v2_add(i64, i64)

declare float @__math_map(float, float, float, float, float)

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

declare i1 @ReadConsoleA(ptr, ptr, i32, ptr, ptr)

declare void @__os_abort()

declare void @__os_assert(i1, ptr)

declare void @__os_print(ptr, i32)

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

declare i32 @__os_read_stdin_line(ptr, i32)

declare void @__io_push_string(ptr, ptr)

declare void @__io_format_uint(ptr, i64)

declare void @__io_format_int(ptr, i64)

declare void @__io_print_typetype(ptr, ptr)

declare void @__io_print_type(ptr, ptr)

declare void @__io_builder_to_string(ptr, ptr)

declare void @__io_print_type_with_formatter(ptr, i32, ptr)

declare void @__io___internal_print(ptr, ptr, ptr)

declare void @__io_print(ptr, ptr)

declare void @__io_println(ptr, ptr)

declare void @__io_readln(ptr, ptr, i32)

declare i32 @__io_get_next(ptr)

declare void @"__io_format_float@type_*[]u32_f32_i32_@void"(i64, ptr, float, i32)

declare void @"__io_format_float@type_*[]u32_f64_i32_@void"(i64, ptr, double, i32)

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @__mem_arena_alloc(i64, ptr)

declare void @__mem_no_free(ptr, ptr)

declare void @__mem_create_scratch(ptr, i64)

declare void @__mem_destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_create@type_*__mem_Allocator_@[]__math_v3"(ptr, i64, ptr)

declare void @"__array_add@@@f32_f32_f32_@@*[]__math_v3_@@f32_f32_f32_@@__math_v3_@void"(ptr, ptr)

declare void @"__array_add@*[]u32_u32_@void"(ptr, i32)

declare void @"__array_create@type_*__mem_Allocator_@[]u8"(ptr, i64, ptr)

declare void @"__array_add@*[]u8_u8_@void"(ptr, i8)

declare void @"__array_create@type_*__mem_Allocator_@[]u32"(ptr, i64, ptr)

declare void @"__array_free@*[]u32_@void"(ptr)

declare void @"__array_free@*[]u8_@void"(ptr)

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

declare void @__asan_before_dynamic_init(i64)

declare void @__asan_after_dynamic_init()

declare void @__asan_register_globals(i64, i64)

declare void @__asan_unregister_globals(i64, i64)

declare void @__asan_register_image_globals(i64)

declare void @__asan_unregister_image_globals(i64)

declare void @__asan_register_elf_globals(i64, i64, i64)

declare void @__asan_unregister_elf_globals(i64, i64, i64)

declare void @__asan_init()

; Function Attrs: nounwind
define internal void @asan.module_ctor() #3 {
  call void @__asan_init()
  call void @__asan_version_mismatch_check_v8()
  ret void
}

declare void @__asan_version_mismatch_check_v8()

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!14}
!llvm.module.flags = !{!113, !114}

!0 = !{ptr @___asan_gen__anon_global}
!1 = !{ptr @___asan_gen__anon_global.17}
!2 = !{ptr @___asan_gen__anon_global.19}
!3 = !{ptr @___asan_gen__anon_global.21}
!4 = !{ptr @___asan_gen__anon_global.23}
!5 = !{ptr @___asan_gen__anon_global.25}
!6 = !{ptr @___asan_gen__anon_global.27}
!7 = !{ptr @___asan_gen__anon_global.29}
!8 = !{ptr @___asan_gen__anon_global.31}
!9 = !{ptr @___asan_gen__anon_global.33}
!10 = !{ptr @___asan_gen__anon_global.35}
!11 = !{ptr @___asan_gen__anon_global.37}
!12 = !{ptr @___asan_gen__anon_global.39}
!13 = !{ptr @___asan_gen__anon_global.41}
!14 = distinct !DICompileUnit(language: DW_LANG_C99, file: !15, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !16, splitDebugInlining: false)
!15 = !DIFile(filename: "renderer.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!16 = !{!17, !29, !50, !59, !64, !68, !76, !83, !17, !29, !50, !59, !64, !68}
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !15, file: !15, size: 64, align: 64, elements: !18)
!18 = !{!19, !20, !21, !22, !23, !24, !25, !26, !27, !28}
!19 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!23 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!24 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!25 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!26 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!27 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!28 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !15, file: !15, size: 64, align: 64, elements: !30)
!30 = !{!31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!31 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!34 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!35 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!36 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!37 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!38 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!39 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!40 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!41 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!42 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!43 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!44 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!45 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!46 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!47 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!48 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!49 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !15, file: !15, size: 32, align: 32, elements: !51)
!51 = !{!52, !53, !54, !55, !56, !57, !58}
!52 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!56 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!57 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!58 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !15, file: !15, size: 32, align: 32, elements: !60)
!60 = !{!61, !62, !63}
!61 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!62 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!63 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !15, file: !15, size: 64, align: 64, elements: !65)
!65 = !{!66, !67}
!66 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !15, file: !15, size: 32, align: 32, elements: !69)
!69 = !{!70, !71, !72, !73, !74, !75}
!70 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!73 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!74 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!75 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_EventType", scope: !15, file: !15, size: 32, align: 32, elements: !77)
!77 = !{!78, !79, !80, !81, !82}
!78 = !DIEnumerator(name: "FIRST", value: 0)
!79 = !DIEnumerator(name: "QUIT", value: 256, isUnsigned: true)
!80 = !DIEnumerator(name: "MOUSE_MOTION", value: 1024, isUnsigned: true)
!81 = !DIEnumerator(name: "MOUSE_BUTTON_DOWN", value: 1025, isUnsigned: true)
!82 = !DIEnumerator(name: "MOUSE_BUTTON_UP", value: 1026, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__sdl_GLattr", scope: !15, file: !15, size: 32, align: 32, elements: !84)
!84 = !{!85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112}
!85 = !DIEnumerator(name: "RED_SIZE", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "GREEN_SIZE", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "BLUE_SIZE", value: 2, isUnsigned: true)
!88 = !DIEnumerator(name: "ALPHA_SIZE", value: 3, isUnsigned: true)
!89 = !DIEnumerator(name: "BUFFER_SIZE", value: 4, isUnsigned: true)
!90 = !DIEnumerator(name: "DOUBLEBUFFER", value: 5, isUnsigned: true)
!91 = !DIEnumerator(name: "DEPTH_SIZE", value: 6, isUnsigned: true)
!92 = !DIEnumerator(name: "STENCIL_SIZE", value: 7, isUnsigned: true)
!93 = !DIEnumerator(name: "ACCUM_RED_SIZE", value: 8, isUnsigned: true)
!94 = !DIEnumerator(name: "ACCUM_GREEN_SIZE", value: 9, isUnsigned: true)
!95 = !DIEnumerator(name: "ACCUM_BLUE_SIZE", value: 10, isUnsigned: true)
!96 = !DIEnumerator(name: "ACCUM_ALPHA_SIZE", value: 11, isUnsigned: true)
!97 = !DIEnumerator(name: "STEREO", value: 12, isUnsigned: true)
!98 = !DIEnumerator(name: "MULTISAMPLEBUFFERS", value: 13, isUnsigned: true)
!99 = !DIEnumerator(name: "MULTISAMPLESAMPLES", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "ACCELERATED_VISUAL", value: 15, isUnsigned: true)
!101 = !DIEnumerator(name: "RETAINED_BACKING", value: 16, isUnsigned: true)
!102 = !DIEnumerator(name: "CONTEXT_MAJOR_VERSION", value: 17, isUnsigned: true)
!103 = !DIEnumerator(name: "CONTEXT_MINOR_VERSION", value: 18, isUnsigned: true)
!104 = !DIEnumerator(name: "CONTEXT_FLAGS", value: 19, isUnsigned: true)
!105 = !DIEnumerator(name: "CONTEXT_PROFILE_MASK", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "SHARE_WITH_CURRENT_CONTEXT", value: 21, isUnsigned: true)
!107 = !DIEnumerator(name: "FRAMEBUFFER_SRGB_CAPABLE", value: 22, isUnsigned: true)
!108 = !DIEnumerator(name: "CONTEXT_RELEASE_BEHAVIOR", value: 23, isUnsigned: true)
!109 = !DIEnumerator(name: "CONTEXT_RESET_NOTIFICATION", value: 24, isUnsigned: true)
!110 = !DIEnumerator(name: "CONTEXT_NO_ERROR", value: 25, isUnsigned: true)
!111 = !DIEnumerator(name: "FLOATBUFFERS", value: 26, isUnsigned: true)
!112 = !DIEnumerator(name: "EGL_PLATFORM", value: 27, isUnsigned: true)
!113 = !{i32 2, !"CodeView", i32 1}
!114 = !{i32 2, !"Debug Info Version", i32 3}
!115 = distinct !DISubprogram(name: "compile_shaders", linkageName: "__renderer_compile_shaders", scope: !15, file: !15, line: 20, type: !116, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!116 = !DISubroutineType(types: !117)
!117 = !{!118, !119, !119}
!118 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "**u8", baseType: !120, size: 64, align: 64, dwarfAddressSpace: 0)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !121, size: 64, align: 64, dwarfAddressSpace: 0)
!121 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!122 = !{}
!123 = !DILocation(line: 20, scope: !115)
!124 = !DILocalVariable(name: "vert", scope: !115, file: !15, line: 20, type: !119)
!125 = !DILocalVariable(name: "frag", arg: 1, scope: !115, file: !15, line: 20, type: !119)
!126 = !DILocation(line: 21, scope: !115)
!127 = !DILocalVariable(name: "vert_shader_gl", scope: !115, file: !15, line: 21, type: !118)
!128 = !DILocation(line: 22, scope: !115)
!129 = !DILocalVariable(name: "frag_shader_gl", scope: !115, file: !15, line: 22, type: !118)
!130 = !DILocation(line: 23, scope: !115)
!131 = !DILocation(line: 24, scope: !115)
!132 = !DILocation(line: 26, scope: !115)
!133 = !DILocalVariable(name: "program", scope: !115, file: !15, line: 26, type: !118)
!134 = !DILocation(line: 27, scope: !115)
!135 = !DILocation(line: 28, scope: !115)
!136 = !DILocation(line: 29, scope: !115)
!137 = !DILocation(line: 30, scope: !115)
!138 = !DILocalVariable(name: "success", scope: !115, file: !15, line: 30, type: !139)
!139 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!140 = !DILocation(line: 31, scope: !115)
!141 = !DILocation(line: 32, scope: !115)
!142 = !DILocation(line: 33, scope: !115)
!143 = !DILocalVariable(name: "info_log", scope: !115, file: !15, line: 33, type: !144)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 4096, align: 8, elements: !145)
!145 = !{!146}
!146 = !DISubrange(count: 512, lowerBound: 0)
!147 = !DILocation(line: 34, scope: !115)
!148 = !DILocation(line: 35, scope: !115)
!149 = !DILocation(line: 36, scope: !115)
!150 = !DILocation(line: 38, scope: !115)
!151 = !DILocation(line: 39, scope: !115)
!152 = !DILocation(line: 41, scope: !115)
!153 = distinct !DISubprogram(name: "use_shader", linkageName: "__renderer_use_shader", scope: !15, file: !15, line: 44, type: !154, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!154 = !DISubroutineType(types: !155)
!155 = !{null, !118}
!156 = !DILocation(line: 44, scope: !153)
!157 = !DILocalVariable(name: "program", scope: !153, file: !15, line: 44, type: !118)
!158 = !DILocation(line: 45, scope: !153)
!159 = !DILocation(line: 46, scope: !153)
!160 = distinct !DISubprogram(name: "create_ctx", linkageName: "__renderer_create_ctx", scope: !15, file: !15, line: 48, type: !161, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!161 = !DISubroutineType(types: !162)
!162 = !{!163}
!163 = !DICompositeType(tag: DW_TAG_structure_type, name: "__renderer_ctx", scope: !15, file: !15, size: 64, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "vao", scope: !15, file: !15, baseType: !118, size: 32, align: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "vbo", scope: !15, file: !15, baseType: !118, size: 32, align: 32, offset: 32)
!167 = !DILocation(line: 49, scope: !160)
!168 = !DILocalVariable(name: "result", scope: !160, file: !15, line: 49, type: !163)
!169 = !DILocation(line: 50, scope: !160)
!170 = !DILocation(line: 51, scope: !160)
!171 = !DILocation(line: 53, scope: !160)
!172 = !DILocation(line: 54, scope: !160)
!173 = !DILocation(line: 55, scope: !160)
!174 = !DILocation(line: 56, scope: !160)
!175 = !DILocation(line: 57, scope: !160)
!176 = !DILocation(line: 58, scope: !160)
!177 = !DILocation(line: 59, scope: !160)
!178 = !DILocation(line: 60, scope: !160)
!179 = !DILocation(line: 62, scope: !160)
!180 = distinct !DISubprogram(name: "create_framebuffer", linkageName: "__renderer_create_framebuffer", scope: !15, file: !15, line: 94, type: !181, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!181 = !DISubroutineType(types: !182)
!182 = !{!183, !118, !118, !189}
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "?*__renderer_Framebuffer", baseType: !184, size: 64, align: 64, dwarfAddressSpace: 0)
!184 = !DICompositeType(tag: DW_TAG_structure_type, name: "__renderer_Framebuffer", scope: !15, file: !15, size: 96, elements: !185)
!185 = !{!186, !187, !188}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !15, file: !15, baseType: !118, size: 32, align: 32)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !15, file: !15, baseType: !118, size: 32, align: 32, offset: 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "rbo", scope: !15, file: !15, baseType: !118, size: 32, align: 32, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_Allocator", baseType: !190, size: 64, align: 64, dwarfAddressSpace: 0)
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !191, file: !191, size: 192, align: 64, flags: DIFlagFwdDecl)
!191 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\graph\\src")
!192 = !DILocation(line: 94, scope: !180)
!193 = !DILocalVariable(name: "w", scope: !180, file: !15, line: 94, type: !118)
!194 = !DILocalVariable(name: "h", arg: 1, scope: !180, file: !15, line: 94, type: !118)
!195 = !DILocalVariable(name: "alloc", arg: 2, scope: !180, file: !15, line: 94, type: !189)
!196 = !DILocalVariable(name: "buf", scope: !180, file: !15, line: 95, type: !118)
!197 = !DILocation(line: 95, scope: !180)
!198 = !DILocalVariable(name: "tex", scope: !180, file: !15, line: 96, type: !118)
!199 = !DILocation(line: 96, scope: !180)
!200 = !DILocalVariable(name: "rbo", scope: !180, file: !15, line: 97, type: !118)
!201 = !DILocation(line: 97, scope: !180)
!202 = !DILocation(line: 99, scope: !180)
!203 = !DILocalVariable(name: "mem", scope: !180, file: !15, line: 99, type: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!205 = !DILocation(line: 100, scope: !180)
!206 = !DILocation(line: 102, scope: !180)
!207 = !DILocalVariable(name: "res", scope: !180, file: !15, line: 102, type: !208)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__renderer_Framebuffer", baseType: !184, size: 64, align: 64, dwarfAddressSpace: 0)
!209 = !DILocation(line: 104, scope: !180)
!210 = !DILocation(line: 105, scope: !180)
!211 = !DILocation(line: 107, scope: !180)
!212 = !DILocation(line: 110, scope: !180)
!213 = !DILocation(line: 113, scope: !180)
!214 = !DILocation(line: 115, scope: !180)
!215 = !DILocation(line: 116, scope: !180)
!216 = !DILocation(line: 118, scope: !180)
!217 = !DILocation(line: 121, scope: !180)
!218 = !DILocation(line: 123, scope: !180)
!219 = !DILocation(line: 126, scope: !180)
!220 = !DILocation(line: 128, scope: !180)
!221 = !DILocation(line: 129, scope: !180)
!222 = !DILocation(line: 132, scope: !180)
!223 = !DILocation(line: 133, scope: !180)
!224 = !DILocation(line: 134, scope: !180)
!225 = !DILocation(line: 124, scope: !180)
!226 = !DILocation(line: 111, scope: !180)
!227 = !DILocation(line: 108, scope: !180)
!228 = distinct !DISubprogram(name: "delete_framebuffer", linkageName: "__renderer_delete_framebuffer", scope: !15, file: !15, line: 139, type: !229, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!229 = !DISubroutineType(types: !230)
!230 = !{null, !208}
!231 = !DILocation(line: 139, scope: !228)
!232 = !DILocalVariable(name: "buf", scope: !228, file: !15, line: 139, type: !208)
!233 = !DILocation(line: 140, scope: !228)
!234 = !DILocalVariable(name: "buf", scope: !228, file: !15, line: 140, type: !208)
!235 = !DILocation(line: 141, scope: !228)
!236 = !DILocation(line: 142, scope: !228)
!237 = distinct !DISubprogram(name: "bind_framebuffer", linkageName: "__renderer_bind_framebuffer", scope: !15, file: !15, line: 144, type: !238, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !240, !183}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__renderer_ctx", baseType: !163, size: 64, align: 64, dwarfAddressSpace: 0)
!241 = !DILocation(line: 144, scope: !237)
!242 = !DILocalVariable(name: "c", scope: !237, file: !15, line: 144, type: !240)
!243 = !DILocalVariable(name: "buffer", arg: 1, scope: !237, file: !15, line: 144, type: !183)
!244 = !DILocation(line: 145, scope: !237)
!245 = !DILocation(line: 146, scope: !237)
!246 = !DILocation(line: 148, scope: !237)
!247 = !DILocation(line: 150, scope: !237)
!248 = distinct !DISubprogram(name: "draw_verts", linkageName: "__renderer_draw_verts", scope: !15, file: !15, line: 152, type: !249, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!249 = !DISubroutineType(types: !250)
!250 = !{null, !240, !251}
!251 = !DICompositeType(tag: DW_TAG_structure_type, scope: !15, file: !15, size: 128, align: 64, elements: !252)
!252 = !{!253, !255}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15, file: !15, baseType: !254, size: 64, align: 64)
!254 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15, file: !15, baseType: !256, size: 64, align: 64, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__math_v3", baseType: !257, size: 64, align: 64, dwarfAddressSpace: 0)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "__math_v3", scope: !15, file: !15, size: 96, elements: !258)
!258 = !{!259, !261, !262}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !15, file: !15, baseType: !260, size: 32, align: 32)
!260 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !15, file: !15, baseType: !260, size: 32, align: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !15, file: !15, baseType: !260, size: 32, align: 32, offset: 64)
!263 = !DILocation(line: 152, scope: !248)
!264 = !DILocalVariable(name: "c", scope: !248, file: !15, line: 152, type: !240)
!265 = !DILocalVariable(name: "verts", arg: 1, scope: !248, file: !15, line: 152, type: !251)
!266 = !DILocation(line: 153, scope: !248)
!267 = !DILocalVariable(name: "offset", scope: !248, file: !15, line: 153, type: !254)
!268 = !DILocation(line: 154, scope: !248)
!269 = !DILocation(line: 155, scope: !248)
!270 = !DILocation(line: 156, scope: !248)
!271 = !DILocation(line: 157, scope: !248)
!272 = !DILocation(line: 158, scope: !248)
!273 = !DILocation(line: 159, scope: !248)
!274 = !DILocation(line: 160, scope: !248)
!275 = distinct !DISubprogram(name: "draw_lines", linkageName: "__renderer_draw_lines", scope: !15, file: !15, line: 162, type: !276, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !240, !251, !260}
!278 = !DILocation(line: 162, scope: !275)
!279 = !DILocalVariable(name: "c", scope: !275, file: !15, line: 162, type: !240)
!280 = !DILocalVariable(name: "verts", arg: 1, scope: !275, file: !15, line: 162, type: !251)
!281 = !DILocalVariable(name: "width", arg: 2, scope: !275, file: !15, line: 162, type: !260)
!282 = !DILocation(line: 163, scope: !275)
!283 = !DILocalVariable(name: "offset", scope: !275, file: !15, line: 163, type: !254)
!284 = !DILocation(line: 164, scope: !275)
!285 = !DILocation(line: 165, scope: !275)
!286 = !DILocation(line: 166, scope: !275)
!287 = !DILocation(line: 167, scope: !275)
!288 = !DILocation(line: 168, scope: !275)
!289 = !DILocation(line: 169, scope: !275)
!290 = !DILocation(line: 171, scope: !275)
!291 = !DILocation(line: 172, scope: !275)
!292 = distinct !DISubprogram(name: "compile_shader", linkageName: "__renderer_compile_shader", scope: !15, file: !15, line: 176, type: !293, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!293 = !DISubroutineType(types: !294)
!294 = !{null, !118, !119, !295}
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !191, file: !191, size: 128, elements: !296)
!296 = !{!297, !298}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !191, file: !191, baseType: !120, size: 64, align: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !191, file: !191, baseType: !254, size: 64, align: 64, offset: 64)
!299 = !DILocation(line: 176, scope: !292)
!300 = !DILocalVariable(name: "shader", scope: !292, file: !15, line: 176, type: !118)
!301 = !DILocalVariable(name: "src", arg: 1, scope: !292, file: !15, line: 176, type: !119)
!302 = !DILocalVariable(name: "name", arg: 2, scope: !292, file: !15, line: 176, type: !295)
!303 = !DILocation(line: 177, scope: !292)
!304 = !DILocation(line: 178, scope: !292)
!305 = !DILocation(line: 180, scope: !292)
!306 = !DILocalVariable(name: "success", scope: !292, file: !15, line: 180, type: !139)
!307 = !DILocation(line: 181, scope: !292)
!308 = !DILocation(line: 182, scope: !292)
!309 = !DILocation(line: 183, scope: !292)
!310 = !DILocalVariable(name: "info_log", scope: !292, file: !15, line: 183, type: !144)
!311 = !DILocation(line: 184, scope: !292)
!312 = !DILocation(line: 185, scope: !292)
!313 = !DILocation(line: 186, scope: !292)
!314 = !DILocation(line: 188, scope: !292)
!315 = distinct !DISubprogram(name: "gl_callback", linkageName: "__renderer_gl_callback", scope: !15, file: !15, line: 190, type: !316, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !118, !118, !118, !118, !118, !120, !204}
!318 = !DILocation(line: 190, scope: !315)
!319 = !DILocalVariable(name: "src", scope: !315, file: !15, line: 190, type: !118)
!320 = !DILocalVariable(name: "t", arg: 1, scope: !315, file: !15, line: 190, type: !118)
!321 = !DILocalVariable(name: "id", arg: 2, scope: !315, file: !15, line: 190, type: !118)
!322 = !DILocalVariable(name: "severity", arg: 3, scope: !315, file: !15, line: 190, type: !118)
!323 = !DILocalVariable(name: "len", arg: 4, scope: !315, file: !15, line: 190, type: !118)
!324 = !DILocalVariable(name: "msg", arg: 5, scope: !315, file: !15, line: 190, type: !120)
!325 = !DILocalVariable(name: "user", arg: 6, scope: !315, file: !15, line: 190, type: !204)
!326 = !DILocation(line: 191, scope: !315)
!327 = !DILocation(line: 192, scope: !315)
!328 = distinct !DISubprogram(name: "set_uniform@u32_string_f32_@void", linkageName: "__renderer_set_uniform@u32_string_f32_@void", scope: !15, file: !15, line: 65, type: !329, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!329 = !DISubroutineType(types: !330)
!330 = !{null, !118, !295, !260}
!331 = !DILocation(line: 65, scope: !328)
!332 = !DILocalVariable(name: "program", scope: !328, file: !15, line: 65, type: !118)
!333 = !DILocalVariable(name: "name", arg: 1, scope: !328, file: !15, line: 65, type: !295)
!334 = !DILocalVariable(name: "passed", arg: 2, scope: !328, file: !15, line: 65, type: !260)
!335 = !DILocation(line: 66, scope: !328)
!336 = !DILocalVariable(name: "passed", scope: !328, file: !15, line: 66, type: !260)
!337 = !DILocation(line: 67, scope: !328)
!338 = !DILocalVariable(name: "t", scope: !328, file: !15, line: 67, type: !339)
!339 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!340 = !DILocation(line: 68, scope: !328)
!341 = !DILocalVariable(name: "loc", scope: !328, file: !15, line: 68, type: !139)
!342 = !DILocation(line: 69, scope: !328)
!343 = !DILocation(line: 70, scope: !328)
!344 = !DILocation(line: 71, scope: !328)
!345 = !DILocation(line: 74, scope: !328)
!346 = !DILocation(line: 75, scope: !328)
!347 = !DILocalVariable(name: "v", scope: !328, file: !15, line: 75, type: !260)
!348 = !DILocation(line: 76, scope: !328)
!349 = !DILocation(line: 77, scope: !328)
!350 = !DILocation(line: 78, scope: !328)
!351 = !DILocalVariable(name: "v", scope: !328, file: !15, line: 78, type: !352)
!352 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!353 = !DILocation(line: 79, scope: !328)
!354 = !DILocation(line: 80, scope: !328)
!355 = !DILocation(line: 81, scope: !328)
!356 = !DILocalVariable(name: "v", scope: !328, file: !15, line: 81, type: !254)
!357 = !DILocation(line: 82, scope: !328)
!358 = !DILocation(line: 83, scope: !328)
!359 = !DILocation(line: 84, scope: !328)
!360 = !DILocalVariable(name: "v", scope: !328, file: !15, line: 84, type: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__math_v2", baseType: !362, size: 64, align: 64, dwarfAddressSpace: 0)
!362 = !DICompositeType(tag: DW_TAG_structure_type, name: "__math_v2", scope: !191, file: !191, size: 64, elements: !363)
!363 = !{!364, !365}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !191, file: !191, baseType: !260, size: 32, align: 32)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !191, file: !191, baseType: !260, size: 32, align: 32, offset: 32)
!366 = !DILocation(line: 85, scope: !328)
!367 = !DILocation(line: 86, scope: !328)
!368 = !DILocation(line: 87, scope: !328)
!369 = !DILocalVariable(name: "v", scope: !328, file: !15, line: 87, type: !256)
!370 = !DILocation(line: 88, scope: !328)
!371 = !DILocation(line: 90, scope: !328)
!372 = !DILocation(line: 92, scope: !328)
!373 = distinct !DISubprogram(name: "set_uniform@u32_string_@@f32_f32_@@__math_v2_@void", linkageName: "__renderer_set_uniform@u32_string_@@f32_f32_@@__math_v2_@void", scope: !15, file: !15, line: 65, type: !374, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!374 = !DISubroutineType(types: !375)
!375 = !{null, !118, !295, !376}
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "__math_v2", scope: !15, file: !15, size: 64, elements: !377)
!377 = !{!259, !261}
!378 = !DILocation(line: 65, scope: !373)
!379 = !DILocalVariable(name: "program", scope: !373, file: !15, line: 65, type: !118)
!380 = !DILocalVariable(name: "name", arg: 1, scope: !373, file: !15, line: 65, type: !295)
!381 = !DILocalVariable(name: "passed", arg: 2, scope: !373, file: !15, line: 65, type: !376)
!382 = !DILocation(line: 66, scope: !373)
!383 = !DILocalVariable(name: "passed", scope: !373, file: !15, line: 66, type: !376)
!384 = !DILocation(line: 67, scope: !373)
!385 = !DILocalVariable(name: "t", scope: !373, file: !15, line: 67, type: !339)
!386 = !DILocation(line: 68, scope: !373)
!387 = !DILocalVariable(name: "loc", scope: !373, file: !15, line: 68, type: !139)
!388 = !DILocation(line: 69, scope: !373)
!389 = !DILocation(line: 70, scope: !373)
!390 = !DILocation(line: 71, scope: !373)
!391 = !DILocation(line: 74, scope: !373)
!392 = !DILocation(line: 75, scope: !373)
!393 = !DILocalVariable(name: "v", scope: !373, file: !15, line: 75, type: !260)
!394 = !DILocation(line: 76, scope: !373)
!395 = !DILocation(line: 77, scope: !373)
!396 = !DILocation(line: 78, scope: !373)
!397 = !DILocalVariable(name: "v", scope: !373, file: !15, line: 78, type: !352)
!398 = !DILocation(line: 79, scope: !373)
!399 = !DILocation(line: 80, scope: !373)
!400 = !DILocation(line: 81, scope: !373)
!401 = !DILocalVariable(name: "v", scope: !373, file: !15, line: 81, type: !254)
!402 = !DILocation(line: 82, scope: !373)
!403 = !DILocation(line: 83, scope: !373)
!404 = !DILocation(line: 84, scope: !373)
!405 = !DILocalVariable(name: "v", scope: !373, file: !15, line: 84, type: !361)
!406 = !DILocation(line: 85, scope: !373)
!407 = !DILocation(line: 86, scope: !373)
!408 = !DILocation(line: 87, scope: !373)
!409 = !DILocalVariable(name: "v", scope: !373, file: !15, line: 87, type: !256)
!410 = !DILocation(line: 88, scope: !373)
!411 = !DILocation(line: 90, scope: !373)
!412 = !DILocation(line: 92, scope: !373)
!413 = distinct !DISubprogram(name: "set_uniform@u32_string_@@f32_f32_f32_@@__math_v3_@void", linkageName: "__renderer_set_uniform@u32_string_@@f32_f32_f32_@@__math_v3_@void", scope: !15, file: !15, line: 65, type: !414, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!414 = !DISubroutineType(types: !415)
!415 = !{null, !118, !295, !257}
!416 = !DILocation(line: 65, scope: !413)
!417 = !DILocalVariable(name: "program", scope: !413, file: !15, line: 65, type: !118)
!418 = !DILocalVariable(name: "name", arg: 1, scope: !413, file: !15, line: 65, type: !295)
!419 = !DILocalVariable(name: "passed", arg: 2, scope: !413, file: !15, line: 65, type: !257)
!420 = !DILocation(line: 66, scope: !413)
!421 = !DILocalVariable(name: "passed", scope: !413, file: !15, line: 66, type: !257)
!422 = !DILocation(line: 67, scope: !413)
!423 = !DILocalVariable(name: "t", scope: !413, file: !15, line: 67, type: !339)
!424 = !DILocation(line: 68, scope: !413)
!425 = !DILocalVariable(name: "loc", scope: !413, file: !15, line: 68, type: !139)
!426 = !DILocation(line: 69, scope: !413)
!427 = !DILocation(line: 70, scope: !413)
!428 = !DILocation(line: 71, scope: !413)
!429 = !DILocation(line: 74, scope: !413)
!430 = !DILocation(line: 75, scope: !413)
!431 = !DILocalVariable(name: "v", scope: !413, file: !15, line: 75, type: !260)
!432 = !DILocation(line: 76, scope: !413)
!433 = !DILocation(line: 77, scope: !413)
!434 = !DILocation(line: 78, scope: !413)
!435 = !DILocalVariable(name: "v", scope: !413, file: !15, line: 78, type: !352)
!436 = !DILocation(line: 79, scope: !413)
!437 = !DILocation(line: 80, scope: !413)
!438 = !DILocation(line: 81, scope: !413)
!439 = !DILocalVariable(name: "v", scope: !413, file: !15, line: 81, type: !254)
!440 = !DILocation(line: 82, scope: !413)
!441 = !DILocation(line: 83, scope: !413)
!442 = !DILocation(line: 84, scope: !413)
!443 = !DILocalVariable(name: "v", scope: !413, file: !15, line: 84, type: !361)
!444 = !DILocation(line: 85, scope: !413)
!445 = !DILocation(line: 86, scope: !413)
!446 = !DILocation(line: 87, scope: !413)
!447 = !DILocalVariable(name: "v", scope: !413, file: !15, line: 87, type: !256)
!448 = !DILocation(line: 88, scope: !413)
!449 = !DILocation(line: 90, scope: !413)
!450 = !DILocation(line: 92, scope: !413)
!451 = distinct !DISubprogram(name: "set_uniform@u32_string_int_@void", linkageName: "__renderer_set_uniform@u32_string_int_@void", scope: !15, file: !15, line: 65, type: !452, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !122)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !118, !295, !254}
!454 = !DILocation(line: 65, scope: !451)
!455 = !DILocalVariable(name: "program", scope: !451, file: !15, line: 65, type: !118)
!456 = !DILocalVariable(name: "name", arg: 1, scope: !451, file: !15, line: 65, type: !295)
!457 = !DILocalVariable(name: "passed", arg: 2, scope: !451, file: !15, line: 65, type: !254)
!458 = !DILocation(line: 66, scope: !451)
!459 = !DILocalVariable(name: "passed", scope: !451, file: !15, line: 66, type: !254)
!460 = !DILocation(line: 67, scope: !451)
!461 = !DILocalVariable(name: "t", scope: !451, file: !15, line: 67, type: !339)
!462 = !DILocation(line: 68, scope: !451)
!463 = !DILocalVariable(name: "loc", scope: !451, file: !15, line: 68, type: !139)
!464 = !DILocation(line: 69, scope: !451)
!465 = !DILocation(line: 70, scope: !451)
!466 = !DILocation(line: 71, scope: !451)
!467 = !DILocation(line: 74, scope: !451)
!468 = !DILocation(line: 75, scope: !451)
!469 = !DILocalVariable(name: "v", scope: !451, file: !15, line: 75, type: !260)
!470 = !DILocation(line: 76, scope: !451)
!471 = !DILocation(line: 77, scope: !451)
!472 = !DILocation(line: 78, scope: !451)
!473 = !DILocalVariable(name: "v", scope: !451, file: !15, line: 78, type: !352)
!474 = !DILocation(line: 79, scope: !451)
!475 = !DILocation(line: 80, scope: !451)
!476 = !DILocation(line: 81, scope: !451)
!477 = !DILocalVariable(name: "v", scope: !451, file: !15, line: 81, type: !254)
!478 = !DILocation(line: 82, scope: !451)
!479 = !DILocation(line: 83, scope: !451)
!480 = !DILocation(line: 84, scope: !451)
!481 = !DILocalVariable(name: "v", scope: !451, file: !15, line: 84, type: !361)
!482 = !DILocation(line: 85, scope: !451)
!483 = !DILocation(line: 86, scope: !451)
!484 = !DILocation(line: 87, scope: !451)
!485 = !DILocalVariable(name: "v", scope: !451, file: !15, line: 87, type: !256)
!486 = !DILocation(line: 88, scope: !451)
!487 = !DILocation(line: 90, scope: !451)
!488 = !DILocation(line: 92, scope: !451)
