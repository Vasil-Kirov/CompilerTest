gl

#import os


#private

wglGetProcAddress :: fn #foreign(name: *u8) -> ?*;
GetProcAddress :: fn #foreign(module: *, name: *u8) -> ?*;
LoadLibraryA :: fn #foreign(name: *u8) -> ?*;

dll_module: *;

load_gl_fn :: fn(name: *u8) -> * {
    p := wglGetProcAddress(name);
    if (p == null) || (@uint p == 0x1) || (@uint p == 0x2) || (@uint p == 0x3) || (@uint p == -1) {
        p = GetProcAddress(dll_module, name);
        os.assert(p != null, "Failed to get gl function");
    }

    return ?p;
}

#public



ClearColor: *fn(red: f32, green: f32, blue: f32, alpha: f32);
Clear: *fn(mask: u32);
GenVertexArrays: *fn(n: i32, arrays: *u32);
GenBuffers: *fn(n: i32, buffers: *u32);
BindBuffer: *fn(target: u32, buffer: u32);
BufferData: *fn(target: u32, size: uint, data: *, usage: u32);
BufferSubData: *fn(target: u32, offset: uint, size: uint, data: *);
DeleteBuffers: *fn(n: i32, buffers: *u32);
DeleteVertexArrays: *fn(n: i32, arrays: *u32);
BindVertexArray: *fn(array: u32);
Enable: *fn(cap: u32);
Disable: *fn(cap: u32);
EnableVertexAttribArray: *fn(index: u32);
DisableVertexAttribArray: *fn(index: u32);
VertexAttribPointer: *fn(index: u32, size: i32, t: u32, normalized: bool, stride: i32, pointer: *);
CreateShader: *fn(t: u32) -> u32;
ShaderSource: *fn(shader: u32, count: i32, str: **u8, length: ?*i32);
CompileShader: *fn(shader: u32);
GetShaderiv: *fn(shader: u32, pname: u32, params: *i32);
GetProgramiv: *fn(program: u32, pname: u32, params: *i32);
GetShaderInfoLog: *fn(shader: u32, bufSize: i32, length: ?*i32, infoLog: *u8);
GetProgramInfoLog: *fn(shader: u32, bufSize: i32, length: ?*i32, infoLog: *u8);
DeleteShader: *fn(shader: u32);
AttachShader: *fn(program: u32, shader: u32);
LinkProgram: *fn(program: u32);
UseProgram: *fn(program: u32);
CreateProgram: *fn() -> u32;
DeleteProgram: *fn(program: u32);
GetUniformLocation: *fn(program: u32, name: *u8) -> i32;
Uniform1i: *fn(location: i32, v0: i32);
Uniform1f: *fn(location: i32, v0: f32);
Uniform2f: *fn(location: i32, v0: f32, v1: f32);
Uniform3f: *fn(location: i32, v0: f32, v1: f32, v2: f32);
UniformMatrix4fv: *fn(location: i32, count: i32, transpose: bool, value: *f32);
DrawArrays: *fn(mode: u32, first: i32, count: i32);
DrawElements: *fn(mode: u32, count: i32, type: u32, indices: *);
Viewport: *fn(x: i32, y: i32, width: i32, height: i32);
DebugMessageCallback: *fn(callback: *fn(src: u32, t: u32, id: u32, severity: u32, len: u32, msg: *u8, user: ?*), user: ?*);
DebugMessageControl: *fn(src: u32, t: u32, severity: u32, count: u32, ids: ?*u32, enabled: bool);
LineWidth: *fn(w: f32);

load :: fn () -> bool {
    maybe_module := LoadLibraryA(c"opengl32.dll");
    if maybe_module == null return false;
    dll_module = ?maybe_module;

    ClearColor = load_gl_fn(c"glClearColor");
    Clear = load_gl_fn(c"glClear");
    GenVertexArrays = load_gl_fn(c"glGenVertexArrays");
    GenBuffers = load_gl_fn(c"glGenBuffers");
    BindBuffer = load_gl_fn(c"glBindBuffer");
    BufferData = load_gl_fn(c"glBufferData");
    BufferSubData = load_gl_fn(c"glBufferSubData");
    DeleteBuffers = load_gl_fn(c"glDeleteBuffers");
    DeleteVertexArrays = load_gl_fn(c"glDeleteVertexArrays");
    BindVertexArray = load_gl_fn(c"glBindVertexArray");
    Enable = load_gl_fn(c"glEnable");
    Disable = load_gl_fn(c"glDisable");
    EnableVertexAttribArray = load_gl_fn(c"glEnableVertexAttribArray");
    DisableVertexAttribArray = load_gl_fn(c"glDisableVertexAttribArray");
    VertexAttribPointer = load_gl_fn(c"glVertexAttribPointer");
    CreateShader = load_gl_fn(c"glCreateShader");
    ShaderSource = load_gl_fn(c"glShaderSource");
    CompileShader = load_gl_fn(c"glCompileShader");
    GetShaderiv = load_gl_fn(c"glGetShaderiv");
    GetProgramiv = load_gl_fn(c"glGetProgramiv");
    GetShaderInfoLog = load_gl_fn(c"glGetShaderInfoLog");
    GetProgramInfoLog = load_gl_fn(c"glGetProgramInfoLog");
    DeleteShader = load_gl_fn(c"glDeleteShader");
    AttachShader = load_gl_fn(c"glAttachShader");
    LinkProgram = load_gl_fn(c"glLinkProgram");
    UseProgram = load_gl_fn(c"glUseProgram");
    CreateProgram = load_gl_fn(c"glCreateProgram");
    DeleteProgram = load_gl_fn(c"glDeleteProgram");
    GetUniformLocation = load_gl_fn(c"glGetUniformLocation");
    Uniform1f = load_gl_fn(c"glUniform1f");
    Uniform1i = load_gl_fn(c"glUniform1i");
    UniformMatrix4fv = load_gl_fn(c"glUniformMatrix4fv");
    DrawArrays = load_gl_fn(c"glDrawArrays");
    DrawElements = load_gl_fn(c"glDrawElements");
    Viewport = load_gl_fn(c"glViewport");
    DebugMessageCallback = load_gl_fn(c"glDebugMessageCallback");
    DebugMessageControl = load_gl_fn(c"glDebugMessageControl");
    LineWidth = load_gl_fn(c"glLineWidth");
    Uniform2f = load_gl_fn(c"glUniform2f");
    Uniform3f = load_gl_fn(c"glUniform3f");

    return true;
}

VERSION_ES_CL_1_0            :: @u32 1;
VERSION_ES_CM_1_1            :: @u32 1;
VERSION_ES_CL_1_1            :: @u32 1;
DEPTH_BUFFER_BIT             :: @u32 0x00000100;
STENCIL_BUFFER_BIT           :: @u32 0x00000400;
COLOR_BUFFER_BIT             :: @u32 0x00004000;
FALSE                        :: @u32 0;
TRUE                         :: @u32 1;
POINTS                       :: @u32 0x0000;
LINES                        :: @u32 0x0001;
LINE_LOOP                    :: @u32 0x0002;
LINE_STRIP                   :: @u32 0x0003;
TRIANGLES                    :: @u32 0x0004;
TRIANGLE_STRIP               :: @u32 0x0005;
TRIANGLE_FAN                 :: @u32 0x0006;
NEVER                        :: @u32 0x0200;
LESS                         :: @u32 0x0201;
EQUAL                        :: @u32 0x0202;
LEQUAL                       :: @u32 0x0203;
GREATER                      :: @u32 0x0204;
NOTEQUAL                     :: @u32 0x0205;
GEQUAL                       :: @u32 0x0206;
ALWAYS                       :: @u32 0x0207;
ZERO                         :: @u32 0;
ONE                          :: @u32 1;
SRC_COLOR                    :: @u32 0x0300;
ONE_MINUS_SRC_COLOR          :: @u32 0x0301;
SRC_ALPHA                    :: @u32 0x0302;
ONE_MINUS_SRC_ALPHA          :: @u32 0x0303;
DST_ALPHA                    :: @u32 0x0304;
ONE_MINUS_DST_ALPHA          :: @u32 0x0305;
DST_COLOR                    :: @u32 0x0306;
ONE_MINUS_DST_COLOR          :: @u32 0x0307;
SRC_ALPHA_SATURATE           :: @u32 0x0308;
CLIP_PLANE0                  :: @u32 0x3000;
CLIP_PLANE1                  :: @u32 0x3001;
CLIP_PLANE2                  :: @u32 0x3002;
CLIP_PLANE3                  :: @u32 0x3003;
CLIP_PLANE4                  :: @u32 0x3004;
CLIP_PLANE5                  :: @u32 0x3005;
FRONT                        :: @u32 0x0404;
BACK                         :: @u32 0x0405;
FRONT_AND_BACK               :: @u32 0x0408;
FOG                          :: @u32 0x0B60;
LIGHTING                     :: @u32 0x0B50;
TEXTURE_2D                   :: @u32 0x0DE1;
CULL_FACE                    :: @u32 0x0B44;
ALPHA_TEST                   :: @u32 0x0BC0;
BLEND                        :: @u32 0x0BE2;
COLOR_LOGIC_OP               :: @u32 0x0BF2;
DITHER                       :: @u32 0x0BD0;
STENCIL_TEST                 :: @u32 0x0B90;
DEPTH_TEST                   :: @u32 0x0B71;
POINT_SMOOTH                 :: @u32 0x0B10;
LINE_SMOOTH                  :: @u32 0x0B20;
SCISSOR_TEST                 :: @u32 0x0C11;
COLOR_MATERIAL               :: @u32 0x0B57;
NORMALIZE                    :: @u32 0x0BA1;
RESCALE_NORMAL               :: @u32 0x803A;
VERTEX_ARRAY                 :: @u32 0x8074;
NORMAL_ARRAY                 :: @u32 0x8075;
COLOR_ARRAY                  :: @u32 0x8076;
TEXTURE_COORD_ARRAY          :: @u32 0x8078;
MULTISAMPLE                  :: @u32 0x809D;
SAMPLE_ALPHA_TO_COVERAGE     :: @u32 0x809E;
SAMPLE_ALPHA_TO_ONE          :: @u32 0x809F;
SAMPLE_COVERAGE              :: @u32 0x80A0;
NO_ERROR                     :: @u32 0;
INVALID_ENUM                 :: @u32 0x0500;
INVALID_VALUE                :: @u32 0x0501;
INVALID_OPERATION            :: @u32 0x0502;
STACK_OVERFLOW               :: @u32 0x0503;
STACK_UNDERFLOW              :: @u32 0x0504;
OUT_OF_MEMORY                :: @u32 0x0505;
EXP                          :: @u32 0x0800;
EXP2                         :: @u32 0x0801;
FOG_DENSITY                  :: @u32 0x0B62;
FOG_START                    :: @u32 0x0B63;
FOG_END                      :: @u32 0x0B64;
FOG_MODE                     :: @u32 0x0B65;
FOG_COLOR                    :: @u32 0x0B66;
CW                           :: @u32 0x0900;
CCW                          :: @u32 0x0901;
CURRENT_COLOR                :: @u32 0x0B00;
CURRENT_NORMAL               :: @u32 0x0B02;
CURRENT_TEXTURE_COORDS       :: @u32 0x0B03;
POINT_SIZE                   :: @u32 0x0B11;
POINT_SIZE_MIN               :: @u32 0x8126;
POINT_SIZE_MAX               :: @u32 0x8127;
POINT_FADE_THRESHOLD_SIZE    :: @u32 0x8128;
POINT_DISTANCE_ATTENUATION   :: @u32 0x8129;
SMOOTH_POINT_SIZE_RANGE      :: @u32 0x0B12;
LINE_WIDTH                   :: @u32 0x0B21;
SMOOTH_LINE_WIDTH_RANGE      :: @u32 0x0B22;
ALIASED_POINT_SIZE_RANGE     :: @u32 0x846D;
ALIASED_LINE_WIDTH_RANGE     :: @u32 0x846E;
CULL_FACE_MODE               :: @u32 0x0B45;
FRONT_FACE                   :: @u32 0x0B46;
SHADE_MODEL                  :: @u32 0x0B54;
DEPTH_RANGE                  :: @u32 0x0B70;
DEPTH_WRITEMASK              :: @u32 0x0B72;
DEPTH_CLEAR_VALUE            :: @u32 0x0B73;
DEPTH_FUNC                   :: @u32 0x0B74;
STENCIL_CLEAR_VALUE          :: @u32 0x0B91;
STENCIL_FUNC                 :: @u32 0x0B92;
STENCIL_VALUE_MASK           :: @u32 0x0B93;
STENCIL_FAIL                 :: @u32 0x0B94;
STENCIL_PASS_DEPTH_FAIL      :: @u32 0x0B95;
STENCIL_PASS_DEPTH_PASS      :: @u32 0x0B96;
STENCIL_REF                  :: @u32 0x0B97;
STENCIL_WRITEMASK            :: @u32 0x0B98;
MATRIX_MODE                  :: @u32 0x0BA0;
VIEWPORT                     :: @u32 0x0BA2;
MODELVIEW_STACK_DEPTH        :: @u32 0x0BA3;
PROJECTION_STACK_DEPTH       :: @u32 0x0BA4;
TEXTURE_STACK_DEPTH          :: @u32 0x0BA5;
MODELVIEW_MATRIX             :: @u32 0x0BA6;
PROJECTION_MATRIX            :: @u32 0x0BA7;
TEXTURE_MATRIX               :: @u32 0x0BA8;
ALPHA_TEST_FUNC              :: @u32 0x0BC1;
ALPHA_TEST_REF               :: @u32 0x0BC2;
BLEND_DST                    :: @u32 0x0BE0;
BLEND_SRC                    :: @u32 0x0BE1;
LOGIC_OP_MODE                :: @u32 0x0BF0;
SCISSOR_BOX                  :: @u32 0x0C10;
COLOR_CLEAR_VALUE            :: @u32 0x0C22;
COLOR_WRITEMASK              :: @u32 0x0C23;
MAX_LIGHTS                   :: @u32 0x0D31;
MAX_CLIP_PLANES              :: @u32 0x0D32;
MAX_TEXTURE_SIZE             :: @u32 0x0D33;
MAX_MODELVIEW_STACK_DEPTH    :: @u32 0x0D36;
MAX_PROJECTION_STACK_DEPTH   :: @u32 0x0D38;
MAX_TEXTURE_STACK_DEPTH      :: @u32 0x0D39;
MAX_VIEWPORT_DIMS            :: @u32 0x0D3A;
MAX_TEXTURE_UNITS            :: @u32 0x84E2;
SUBPIXEL_BITS                :: @u32 0x0D50;
RED_BITS                     :: @u32 0x0D52;
GREEN_BITS                   :: @u32 0x0D53;
BLUE_BITS                    :: @u32 0x0D54;
ALPHA_BITS                   :: @u32 0x0D55;
DEPTH_BITS                   :: @u32 0x0D56;
STENCIL_BITS                 :: @u32 0x0D57;
POLYGON_OFFSET_UNITS         :: @u32 0x2A00;
POLYGON_OFFSET_FILL          :: @u32 0x8037;
POLYGON_OFFSET_FACTOR        :: @u32 0x8038;
TEXTURE_BINDING_2D           :: @u32 0x8069;
VERTEX_ARRAY_SIZE            :: @u32 0x807A;
VERTEX_ARRAY_TYPE            :: @u32 0x807B;
VERTEX_ARRAY_STRIDE          :: @u32 0x807C;
NORMAL_ARRAY_TYPE            :: @u32 0x807E;
NORMAL_ARRAY_STRIDE          :: @u32 0x807F;
COLOR_ARRAY_SIZE             :: @u32 0x8081;
COLOR_ARRAY_TYPE             :: @u32 0x8082;
COLOR_ARRAY_STRIDE           :: @u32 0x8083;
TEXTURE_COORD_ARRAY_SIZE     :: @u32 0x8088;
TEXTURE_COORD_ARRAY_TYPE     :: @u32 0x8089;
TEXTURE_COORD_ARRAY_STRIDE   :: @u32 0x808A;
VERTEX_ARRAY_POINTER         :: @u32 0x808E;
NORMAL_ARRAY_POINTER         :: @u32 0x808F;
COLOR_ARRAY_POINTER          :: @u32 0x8090;
TEXTURE_COORD_ARRAY_POINTER  :: @u32 0x8092;
SAMPLE_BUFFERS               :: @u32 0x80A8;
SAMPLES                      :: @u32 0x80A9;
SAMPLE_COVERAGE_VALUE        :: @u32 0x80AA;
SAMPLE_COVERAGE_INVERT       :: @u32 0x80AB;
NUM_COMPRESSED_TEXTURE_FORMATS :: @u32 0x86A2;
COMPRESSED_TEXTURE_FORMATS   :: @u32 0x86A3;
DONT_CARE                    :: @u32 0x1100;
FASTEST                      :: @u32 0x1101;
NICEST                       :: @u32 0x1102;
PERSPECTIVE_CORRECTION_HINT  :: @u32 0x0C50;
POINT_SMOOTH_HINT            :: @u32 0x0C51;
LINE_SMOOTH_HINT             :: @u32 0x0C52;
FOG_HINT                     :: @u32 0x0C54;
GENERATE_MIPMAP_HINT         :: @u32 0x8192;
LIGHT_MODEL_AMBIENT          :: @u32 0x0B53;
LIGHT_MODEL_TWO_SIDE         :: @u32 0x0B52;
AMBIENT                      :: @u32 0x1200;
DIFFUSE                      :: @u32 0x1201;
SPECULAR                     :: @u32 0x1202;
POSITION                     :: @u32 0x1203;
SPOT_DIRECTION               :: @u32 0x1204;
SPOT_EXPONENT                :: @u32 0x1205;
SPOT_CUTOFF                  :: @u32 0x1206;
CONSTANT_ATTENUATION         :: @u32 0x1207;
LINEAR_ATTENUATION           :: @u32 0x1208;
QUADRATIC_ATTENUATION        :: @u32 0x1209;
BYTE                         :: @u32 0x1400;
UNSIGNED_BYTE                :: @u32 0x1401;
SHORT                        :: @u32 0x1402;
UNSIGNED_SHORT               :: @u32 0x1403;
FLOAT                        :: @u32 0x1406;
FIXED                        :: @u32 0x140C;
CLEAR                        :: @u32 0x1500;
AND                          :: @u32 0x1501;
AND_REVERSE                  :: @u32 0x1502;
COPY                         :: @u32 0x1503;
AND_INVERTED                 :: @u32 0x1504;
NOOP                         :: @u32 0x1505;
XOR                          :: @u32 0x1506;
OR                           :: @u32 0x1507;
NOR                          :: @u32 0x1508;
EQUIV                        :: @u32 0x1509;
INVERT                       :: @u32 0x150A;
OR_REVERSE                   :: @u32 0x150B;
COPY_INVERTED                :: @u32 0x150C;
OR_INVERTED                  :: @u32 0x150D;
NAND                         :: @u32 0x150E;
SET                          :: @u32 0x150F;
EMISSION                     :: @u32 0x1600;
SHININESS                    :: @u32 0x1601;
AMBIENT_AND_DIFFUSE          :: @u32 0x1602;
MODELVIEW                    :: @u32 0x1700;
PROJECTION                   :: @u32 0x1701;
TEXTURE                      :: @u32 0x1702;
ALPHA                        :: @u32 0x1906;
RGB                          :: @u32 0x1907;
RGBA                         :: @u32 0x1908;
LUMINANCE                    :: @u32 0x1909;
LUMINANCE_ALPHA              :: @u32 0x190A;
UNPACK_ALIGNMENT             :: @u32 0x0CF5;
PACK_ALIGNMENT               :: @u32 0x0D05;
UNSIGNED_SHORT_4_4_4_4       :: @u32 0x8033;
UNSIGNED_SHORT_5_5_5_1       :: @u32 0x8034;
UNSIGNED_SHORT_5_6_5         :: @u32 0x8363;
FLAT                         :: @u32 0x1D00;
SMOOTH                       :: @u32 0x1D01;
KEEP                         :: @u32 0x1E00;
REPLACE                      :: @u32 0x1E01;
INCR                         :: @u32 0x1E02;
DECR                         :: @u32 0x1E03;
VENDOR                       :: @u32 0x1F00;
RENDERER                     :: @u32 0x1F01;
VERSION                      :: @u32 0x1F02;
EXTENSIONS                   :: @u32 0x1F03;
MODULATE                     :: @u32 0x2100;
DECAL                        :: @u32 0x2101;
ADD                          :: @u32 0x0104;
TEXTURE_ENV_MODE             :: @u32 0x2200;
TEXTURE_ENV_COLOR            :: @u32 0x2201;
TEXTURE_ENV                  :: @u32 0x2300;
NEAREST                      :: @u32 0x2600;
LINEAR                       :: @u32 0x2601;
NEAREST_MIPMAP_NEAREST       :: @u32 0x2700;
LINEAR_MIPMAP_NEAREST        :: @u32 0x2701;
NEAREST_MIPMAP_LINEAR        :: @u32 0x2702;
LINEAR_MIPMAP_LINEAR         :: @u32 0x2703;
TEXTURE_MAG_FILTER           :: @u32 0x2800;
TEXTURE_MIN_FILTER           :: @u32 0x2801;
TEXTURE_WRAP_S               :: @u32 0x2802;
TEXTURE_WRAP_T               :: @u32 0x2803;
GENERATE_MIPMAP              :: @u32 0x8191;
TEXTURE0                     :: @u32 0x84C0;
TEXTURE1                     :: @u32 0x84C1;
TEXTURE2                     :: @u32 0x84C2;
TEXTURE3                     :: @u32 0x84C3;
TEXTURE4                     :: @u32 0x84C4;
TEXTURE5                     :: @u32 0x84C5;
TEXTURE6                     :: @u32 0x84C6;
TEXTURE7                     :: @u32 0x84C7;
TEXTURE8                     :: @u32 0x84C8;
TEXTURE9                     :: @u32 0x84C9;
TEXTURE10                    :: @u32 0x84CA;
TEXTURE11                    :: @u32 0x84CB;
TEXTURE12                    :: @u32 0x84CC;
TEXTURE13                    :: @u32 0x84CD;
TEXTURE14                    :: @u32 0x84CE;
TEXTURE15                    :: @u32 0x84CF;
TEXTURE16                    :: @u32 0x84D0;
TEXTURE17                    :: @u32 0x84D1;
TEXTURE18                    :: @u32 0x84D2;
TEXTURE19                    :: @u32 0x84D3;
TEXTURE20                    :: @u32 0x84D4;
TEXTURE21                    :: @u32 0x84D5;
TEXTURE22                    :: @u32 0x84D6;
TEXTURE23                    :: @u32 0x84D7;
TEXTURE24                    :: @u32 0x84D8;
TEXTURE25                    :: @u32 0x84D9;
TEXTURE26                    :: @u32 0x84DA;
TEXTURE27                    :: @u32 0x84DB;
TEXTURE28                    :: @u32 0x84DC;
TEXTURE29                    :: @u32 0x84DD;
TEXTURE30                    :: @u32 0x84DE;
TEXTURE31                    :: @u32 0x84DF;
ACTIVE_TEXTURE               :: @u32 0x84E0;
CLIENT_ACTIVE_TEXTURE        :: @u32 0x84E1;
REPEAT                       :: @u32 0x2901;
CLAMP_TO_EDGE                :: @u32 0x812F;
LIGHT0                       :: @u32 0x4000;
LIGHT1                       :: @u32 0x4001;
LIGHT2                       :: @u32 0x4002;
LIGHT3                       :: @u32 0x4003;
LIGHT4                       :: @u32 0x4004;
LIGHT5                       :: @u32 0x4005;
LIGHT6                       :: @u32 0x4006;
LIGHT7                       :: @u32 0x4007;
ARRAY_BUFFER                 :: @u32 0x8892;
ELEMENT_ARRAY_BUFFER         :: @u32 0x8893;
ARRAY_BUFFER_BINDING         :: @u32 0x8894;
ELEMENT_ARRAY_BUFFER_BINDING :: @u32 0x8895;
VERTEX_ARRAY_BUFFER_BINDING  :: @u32 0x8896;
NORMAL_ARRAY_BUFFER_BINDING  :: @u32 0x8897;
COLOR_ARRAY_BUFFER_BINDING   :: @u32 0x8898;
TEXTURE_COORD_ARRAY_BUFFER_BIDING :: @u32 0x889A;
STATIC_DRAW                  :: @u32 0x88E4;
DYNAMIC_DRAW                 :: @u32 0x88E8;
BUFFER_SIZE                  :: @u32 0x8764;
BUFFER_USAGE                 :: @u32 0x8765;
SUBTRACT                     :: @u32 0x84E7;
COMBINE                      :: @u32 0x8570;
COMBINE_RGB                  :: @u32 0x8571;
COMBINE_ALPHA                :: @u32 0x8572;
RGB_SCALE                    :: @u32 0x8573;
ADD_SIGNED                   :: @u32 0x8574;
INTERPOLATE                  :: @u32 0x8575;
CONSTANT                     :: @u32 0x8576;
PRIMARY_COLOR                :: @u32 0x8577;
PREVIOUS                     :: @u32 0x8578;
OPERAND0_RGB                 :: @u32 0x8590;
OPERAND1_RGB                 :: @u32 0x8591;
OPERAND2_RGB                 :: @u32 0x8592;
OPERAND0_ALPHA               :: @u32 0x8598;
OPERAND1_ALPHA               :: @u32 0x8599;
OPERAND2_ALPHA               :: @u32 0x859A;
ALPHA_SCALE                  :: @u32 0x0D1C;
SRC0_RGB                     :: @u32 0x8580;
SRC1_RGB                     :: @u32 0x8581;
SRC2_RGB                     :: @u32 0x8582;
SRC0_ALPHA                   :: @u32 0x8588;
SRC1_ALPHA                   :: @u32 0x8589;
SRC2_ALPHA                   :: @u32 0x858A;
DOT3_RGB                     :: @u32 0x86AE;
DOT3_RGBA                    :: @u32 0x86AF;

BLEND_EQUATION_RGB             :: @u32 0x8009;
VERTEX_ATTRIB_ARRAY_ENABLED    :: @u32 0x8622;
VERTEX_ATTRIB_ARRAY_SIZE       :: @u32 0x8623;
VERTEX_ATTRIB_ARRAY_STRIDE     :: @u32 0x8624;
VERTEX_ATTRIB_ARRAY_TYPE       :: @u32 0x8625;
CURRENT_VERTEX_ATTRIB          :: @u32 0x8626;
VERTEX_PROGRAM_POINT_SIZE      :: @u32 0x8642;
VERTEX_ATTRIB_ARRAY_POINTER    :: @u32 0x8645;
STENCIL_BACK_FUNC              :: @u32 0x8800;
STENCIL_BACK_FAIL              :: @u32 0x8801;
STENCIL_BACK_PASS_DEPTH_FAIL   :: @u32 0x8802;
STENCIL_BACK_PASS_DEPTH_PASS   :: @u32 0x8803;
MAX_DRAW_BUFFERS               :: @u32 0x8824;
DRAW_BUFFER0                   :: @u32 0x8825;
DRAW_BUFFER1                   :: @u32 0x8826;
DRAW_BUFFER2                   :: @u32 0x8827;
DRAW_BUFFER3                   :: @u32 0x8828;
DRAW_BUFFER4                   :: @u32 0x8829;
DRAW_BUFFER5                   :: @u32 0x882A;
DRAW_BUFFER6                   :: @u32 0x882B;
DRAW_BUFFER7                   :: @u32 0x882C;
DRAW_BUFFER8                   :: @u32 0x882D;
DRAW_BUFFER9                   :: @u32 0x882E;
DRAW_BUFFER10                  :: @u32 0x882F;
DRAW_BUFFER11                  :: @u32 0x8830;
DRAW_BUFFER12                  :: @u32 0x8831;
DRAW_BUFFER13                  :: @u32 0x8832;
DRAW_BUFFER14                  :: @u32 0x8833;
DRAW_BUFFER15                  :: @u32 0x8834;
BLEND_EQUATION_ALPHA           :: @u32 0x883D;
MAX_VERTEX_ATTRIBS             :: @u32 0x8869;
VERTEX_ATTRIB_ARRAY_NORMALIZED :: @u32 0x886A;
MAX_TEXTURE_IMAGE_UNITS        :: @u32 0x8872;
FRAGMENT_SHADER                :: @u32 0x8B30;
VERTEX_SHADER                  :: @u32 0x8B31;
MAX_FRAGMENT_UNIFORM_COMPONENTS:: @u32 0x8B49;
MAX_VERTEX_UNIFORM_COMPONENTS  :: @u32 0x8B4A;
MAX_VARYING_FLOATS             :: @u32 0x8B4B;
MAX_VERTEX_TEXTURE_IMAGE_UNITS :: @u32 0x8B4C;
MAX_COMBINED_TEXTURE_IMAGE_UNITS :: @u32 0x8B4D;
SHADER_TYPE                    :: @u32 0x8B4F;
FLOAT_VEC2                     :: @u32 0x8B50;
FLOAT_VEC3                     :: @u32 0x8B51;
FLOAT_VEC4                     :: @u32 0x8B52;
INT_VEC2                       :: @u32 0x8B53;
INT_VEC3                       :: @u32 0x8B54;
INT_VEC4                       :: @u32 0x8B55;
BOOL                           :: @u32 0x8B56;
BOOL_VEC2                      :: @u32 0x8B57;
BOOL_VEC3                      :: @u32 0x8B58;
BOOL_VEC4                      :: @u32 0x8B59;
FLOAT_MAT2                     :: @u32 0x8B5A;
FLOAT_MAT3                     :: @u32 0x8B5B;
FLOAT_MAT4                     :: @u32 0x8B5C;
SAMPLER_1D                     :: @u32 0x8B5D;
SAMPLER_2D                     :: @u32 0x8B5E;
SAMPLER_3D                     :: @u32 0x8B5F;
SAMPLER_CUBE                   :: @u32 0x8B60;
SAMPLER_1D_SHADOW              :: @u32 0x8B61;
SAMPLER_2D_SHADOW              :: @u32 0x8B62;
DELETE_STATUS                  :: @u32 0x8B80;
COMPILE_STATUS                 :: @u32 0x8B81;
LINK_STATUS                    :: @u32 0x8B82;
VALIDATE_STATUS                :: @u32 0x8B83;
INFO_LOG_LENGTH                :: @u32 0x8B84;
ATTACHED_SHADERS               :: @u32 0x8B85;
ACTIVE_UNIFORMS                :: @u32 0x8B86;
ACTIVE_UNIFORM_MAX_LENGTH      :: @u32 0x8B87;
SHADER_SOURCE_LENGTH           :: @u32 0x8B88;
ACTIVE_ATTRIBUTES              :: @u32 0x8B89;
ACTIVE_ATTRIBUTE_MAX_LENGTH    :: @u32 0x8B8A;
FRAGMENT_SHADER_DERIVATIVE_HINT:: @u32 0x8B8B;
SHADING_LANGUAGE_VERSION       :: @u32 0x8B8C;
CURRENT_PROGRAM                :: @u32 0x8B8D;
POINT_SPRITE_COORD_ORIGIN      :: @u32 0x8CA0;
LOWER_LEFT                     :: @u32 0x8CA1;
UPPER_LEFT                     :: @u32 0x8CA2;
STENCIL_BACK_REF               :: @u32 0x8CA3;
STENCIL_BACK_VALUE_MASK        :: @u32 0x8CA4;
STENCIL_BACK_WRITEMASK         :: @u32 0x8CA5;
VERTEX_PROGRAM_TWO_SIDE        :: @u32 0x8643;
POINT_SPRITE                   :: @u32 0x8861;
COORD_REPLACE                  :: @u32 0x8862;
MAX_TEXTURE_COORDS             :: @u32 0x8871;

NUM_SHADING_LANGUAGE_VERSIONS  :: @u32 0x82E9;
VERTEX_ATTRIB_ARRAY_LONG       :: @u32 0x874E;
COMPRESSED_RGB8_ETC2           :: @u32 0x9274;
COMPRESSED_SRGB8_ETC2          :: @u32 0x9275;
COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: @u32 0x9276;
COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: @u32 0x9277;
COMPRESSED_RGBA8_ETC2_EAC      :: @u32 0x9278;
COMPRESSED_SRGB8_ALPHA8_ETC2_EAC :: @u32 0x9279;
COMPRESSED_R11_EAC             :: @u32 0x9270;
COMPRESSED_SIGNED_R11_EAC      :: @u32 0x9271;
COMPRESSED_RG11_EAC            :: @u32 0x9272;
COMPRESSED_SIGNED_RG11_EAC     :: @u32 0x9273;
PRIMITIVE_RESTART_FIXED_INDEX  :: @u32 0x8D69;
ANY_SAMPLES_PASSED_CONSERVATIVE :: @u32 0x8D6A;
MAX_ELEMENT_INDEX              :: @u32 0x8D6B;
COMPUTE_SHADER                 :: @u32 0x91B9;
MAX_COMPUTE_UNIFORM_BLOCKS     :: @u32 0x91BB;
MAX_COMPUTE_TEXTURE_IMAGE_UNITS :: @u32 0x91BC;
MAX_COMPUTE_IMAGE_UNIFORMS     :: @u32 0x91BD;
MAX_COMPUTE_SHARED_MEMORY_SIZE :: @u32 0x8262;
MAX_COMPUTE_UNIFORM_COMPONENTS :: @u32 0x8263;
MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS :: @u32 0x8264;
MAX_COMPUTE_ATOMIC_COUNTERS    :: @u32 0x8265;
MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS :: @u32 0x8266;
MAX_COMPUTE_WORK_GROUP_INVOCATIONS :: @u32 0x90EB;
MAX_COMPUTE_WORK_GROUP_COUNT   :: @u32 0x91BE;
MAX_COMPUTE_WORK_GROUP_SIZE    :: @u32 0x91BF;
COMPUTE_WORK_GROUP_SIZE        :: @u32 0x8267;
UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER :: @u32 0x90EC;
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER :: @u32 0x90ED;
DISPATCH_INDIRECT_BUFFER       :: @u32 0x90EE;
DISPATCH_INDIRECT_BUFFER_BINDING :: @u32 0x90EF;
COMPUTE_SHADER_BIT             :: @u32 0x00000020;
DEBUG_OUTPUT_SYNCHRONOUS       :: @u32 0x8242;
DEBUG_NEXT_LOGGED_MESSAGE_LENGTH :: @u32 0x8243;
DEBUG_CALLBACK_FUNCTION        :: @u32 0x8244;
DEBUG_CALLBACK_USER_PARAM      :: @u32 0x8245;
DEBUG_SOURCE_API               :: @u32 0x8246;
DEBUG_SOURCE_WINDOW_SYSTEM     :: @u32 0x8247;
DEBUG_SOURCE_SHADER_COMPILER   :: @u32 0x8248;
DEBUG_SOURCE_THIRD_PARTY       :: @u32 0x8249;
DEBUG_SOURCE_APPLICATION       :: @u32 0x824A;
DEBUG_SOURCE_OTHER             :: @u32 0x824B;
DEBUG_TYPE_ERROR               :: @u32 0x824C;
DEBUG_TYPE_DEPRECATED_BEHAVIOR :: @u32 0x824D;
DEBUG_TYPE_UNDEFINED_BEHAVIOR  :: @u32 0x824E;
DEBUG_TYPE_PORTABILITY         :: @u32 0x824F;
DEBUG_TYPE_PERFORMANCE         :: @u32 0x8250;
DEBUG_TYPE_OTHER               :: @u32 0x8251;
MAX_DEBUG_MESSAGE_LENGTH       :: @u32 0x9143;
MAX_DEBUG_LOGGED_MESSAGES      :: @u32 0x9144;
DEBUG_LOGGED_MESSAGES          :: @u32 0x9145;
DEBUG_SEVERITY_HIGH            :: @u32 0x9146;
DEBUG_SEVERITY_MEDIUM          :: @u32 0x9147;
DEBUG_SEVERITY_LOW             :: @u32 0x9148;
DEBUG_TYPE_MARKER              :: @u32 0x8268;
DEBUG_TYPE_PUSH_GROUP          :: @u32 0x8269;
DEBUG_TYPE_POP_GROUP           :: @u32 0x826A;
DEBUG_SEVERITY_NOTIFICATION    :: @u32 0x826B;
MAX_DEBUG_GROUP_STACK_DEPTH    :: @u32 0x826C;
DEBUG_GROUP_STACK_DEPTH        :: @u32 0x826D;
BUFFER                         :: @u32 0x82E0;
SHADER                         :: @u32 0x82E1;
PROGRAM                        :: @u32 0x82E2;
QUERY                          :: @u32 0x82E3;
PROGRAM_PIPELINE               :: @u32 0x82E4;
SAMPLER                        :: @u32 0x82E6;
MAX_LABEL_LENGTH               :: @u32 0x82E8;
DEBUG_OUTPUT                   :: @u32 0x92E0;
CONTEXT_FLAG_DEBUG_BIT         :: @u32 0x00000002;
MAX_UNIFORM_LOCATIONS          :: @u32 0x826E;
FRAMEBUFFER_DEFAULT_WIDTH      :: @u32 0x9310;
FRAMEBUFFER_DEFAULT_HEIGHT     :: @u32 0x9311;
FRAMEBUFFER_DEFAULT_LAYERS     :: @u32 0x9312;
FRAMEBUFFER_DEFAULT_SAMPLES    :: @u32 0x9313;
FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS :: @u32 0x9314;
MAX_FRAMEBUFFER_WIDTH          :: @u32 0x9315;
MAX_FRAMEBUFFER_HEIGHT         :: @u32 0x9316;
MAX_FRAMEBUFFER_LAYERS         :: @u32 0x9317;
MAX_FRAMEBUFFER_SAMPLES        :: @u32 0x9318;
INTERNALFORMAT_SUPPORTED       :: @u32 0x826F;
INTERNALFORMAT_PREFERRED       :: @u32 0x8270;
INTERNALFORMAT_RED_SIZE        :: @u32 0x8271;
INTERNALFORMAT_GREEN_SIZE      :: @u32 0x8272;
INTERNALFORMAT_BLUE_SIZE       :: @u32 0x8273;
INTERNALFORMAT_ALPHA_SIZE      :: @u32 0x8274;
INTERNALFORMAT_DEPTH_SIZE      :: @u32 0x8275;
INTERNALFORMAT_STENCIL_SIZE    :: @u32 0x8276;
INTERNALFORMAT_SHARED_SIZE     :: @u32 0x8277;
INTERNALFORMAT_RED_TYPE        :: @u32 0x8278;
INTERNALFORMAT_GREEN_TYPE      :: @u32 0x8279;
INTERNALFORMAT_BLUE_TYPE       :: @u32 0x827A;
INTERNALFORMAT_ALPHA_TYPE      :: @u32 0x827B;
INTERNALFORMAT_DEPTH_TYPE      :: @u32 0x827C;
INTERNALFORMAT_STENCIL_TYPE    :: @u32 0x827D;
MAX_WIDTH                      :: @u32 0x827E;
MAX_HEIGHT                     :: @u32 0x827F;
MAX_DEPTH                      :: @u32 0x8280;
MAX_LAYERS                     :: @u32 0x8281;
MAX_COMBINED_DIMENSIONS        :: @u32 0x8282;
COLOR_COMPONENTS               :: @u32 0x8283;
DEPTH_COMPONENTS               :: @u32 0x8284;
STENCIL_COMPONENTS             :: @u32 0x8285;
COLOR_RENDERABLE               :: @u32 0x8286;
DEPTH_RENDERABLE               :: @u32 0x8287;
STENCIL_RENDERABLE             :: @u32 0x8288;
FRAMEBUFFER_RENDERABLE         :: @u32 0x8289;
FRAMEBUFFER_RENDERABLE_LAYERED :: @u32 0x828A;
FRAMEBUFFER_BLEND              :: @u32 0x828B;
READ_PIXELS                    :: @u32 0x828C;
READ_PIXELS_FORMAT             :: @u32 0x828D;
READ_PIXELS_TYPE               :: @u32 0x828E;
TEXTURE_IMAGE_FORMAT           :: @u32 0x828F;
TEXTURE_IMAGE_TYPE             :: @u32 0x8290;
GET_TEXTURE_IMAGE_FORMAT       :: @u32 0x8291;
GET_TEXTURE_IMAGE_TYPE         :: @u32 0x8292;
MIPMAP                         :: @u32 0x8293;
MANUAL_GENERATE_MIPMAP         :: @u32 0x8294;
AUTO_GENERATE_MIPMAP           :: @u32 0x8295;
COLOR_ENCODING                 :: @u32 0x8296;
SRGB_READ                      :: @u32 0x8297;
SRGB_WRITE                     :: @u32 0x8298;
FILTER                         :: @u32 0x829A;
VERTEX_TEXTURE                 :: @u32 0x829B;
TESS_CONTROL_TEXTURE           :: @u32 0x829C;
TESS_EVALUATION_TEXTURE        :: @u32 0x829D;
GEOMETRY_TEXTURE               :: @u32 0x829E;
FRAGMENT_TEXTURE               :: @u32 0x829F;
COMPUTE_TEXTURE                :: @u32 0x82A0;
TEXTURE_SHADOW                 :: @u32 0x82A1;
TEXTURE_GATHER                 :: @u32 0x82A2;
TEXTURE_GATHER_SHADOW          :: @u32 0x82A3;
SHADER_IMAGE_LOAD              :: @u32 0x82A4;
SHADER_IMAGE_STORE             :: @u32 0x82A5;
SHADER_IMAGE_ATOMIC            :: @u32 0x82A6;
IMAGE_TEXEL_SIZE               :: @u32 0x82A7;
IMAGE_COMPATIBILITY_CLASS      :: @u32 0x82A8;
IMAGE_PIXEL_FORMAT             :: @u32 0x82A9;
IMAGE_PIXEL_TYPE               :: @u32 0x82AA;
SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST :: @u32 0x82AC;
SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST :: @u32 0x82AD;
SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE :: @u32 0x82AE;
SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE :: @u32 0x82AF;
TEXTURE_COMPRESSED_BLOCK_WIDTH :: @u32 0x82B1;
TEXTURE_COMPRESSED_BLOCK_HEIGHT :: @u32 0x82B2;
TEXTURE_COMPRESSED_BLOCK_SIZE  :: @u32 0x82B3;
CLEAR_BUFFER                   :: @u32 0x82B4;
TEXTURE_VIEW                   :: @u32 0x82B5;
VIEW_COMPATIBILITY_CLASS       :: @u32 0x82B6;
FULL_SUPPORT                   :: @u32 0x82B7;
CAVEAT_SUPPORT                 :: @u32 0x82B8;
IMAGE_CLASS_4_X_32             :: @u32 0x82B9;
IMAGE_CLASS_2_X_32             :: @u32 0x82BA;
IMAGE_CLASS_1_X_32             :: @u32 0x82BB;
IMAGE_CLASS_4_X_16             :: @u32 0x82BC;
IMAGE_CLASS_2_X_16             :: @u32 0x82BD;
IMAGE_CLASS_1_X_16             :: @u32 0x82BE;
IMAGE_CLASS_4_X_8              :: @u32 0x82BF;
IMAGE_CLASS_2_X_8              :: @u32 0x82C0;
IMAGE_CLASS_1_X_8              :: @u32 0x82C1;
IMAGE_CLASS_11_11_10           :: @u32 0x82C2;
IMAGE_CLASS_10_10_10_2         :: @u32 0x82C3;
VIEW_CLASS_128_BITS            :: @u32 0x82C4;
VIEW_CLASS_96_BITS             :: @u32 0x82C5;
VIEW_CLASS_64_BITS             :: @u32 0x82C6;
VIEW_CLASS_48_BITS             :: @u32 0x82C7;
VIEW_CLASS_32_BITS             :: @u32 0x82C8;
VIEW_CLASS_24_BITS             :: @u32 0x82C9;
VIEW_CLASS_16_BITS             :: @u32 0x82CA;
VIEW_CLASS_8_BITS              :: @u32 0x82CB;
VIEW_CLASS_S3TC_DXT1_RGB       :: @u32 0x82CC;
VIEW_CLASS_S3TC_DXT1_RGBA      :: @u32 0x82CD;
VIEW_CLASS_S3TC_DXT3_RGBA      :: @u32 0x82CE;
VIEW_CLASS_S3TC_DXT5_RGBA      :: @u32 0x82CF;
VIEW_CLASS_RGTC1_RED           :: @u32 0x82D0;
VIEW_CLASS_RGTC2_RG            :: @u32 0x82D1;
VIEW_CLASS_BPTC_UNORM          :: @u32 0x82D2;
VIEW_CLASS_BPTC_FLOAT          :: @u32 0x82D3;
UNIFORM                        :: @u32 0x92E1;
UNIFORM_BLOCK                  :: @u32 0x92E2;
PROGRAM_INPUT                  :: @u32 0x92E3;
PROGRAM_OUTPUT                 :: @u32 0x92E4;
BUFFER_VARIABLE                :: @u32 0x92E5;
SHADER_STORAGE_BLOCK           :: @u32 0x92E6;
VERTEX_SUBROUTINE              :: @u32 0x92E8;
TESS_CONTROL_SUBROUTINE        :: @u32 0x92E9;
TESS_EVALUATION_SUBROUTINE     :: @u32 0x92EA;
GEOMETRY_SUBROUTINE            :: @u32 0x92EB;
FRAGMENT_SUBROUTINE            :: @u32 0x92EC;
COMPUTE_SUBROUTINE             :: @u32 0x92ED;
VERTEX_SUBROUTINE_UNIFORM      :: @u32 0x92EE;
TESS_CONTROL_SUBROUTINE_UNIFORM :: @u32 0x92EF;
TESS_EVALUATION_SUBROUTINE_UNIFORM :: @u32 0x92F0;
GEOMETRY_SUBROUTINE_UNIFORM    :: @u32 0x92F1;
FRAGMENT_SUBROUTINE_UNIFORM    :: @u32 0x92F2;
COMPUTE_SUBROUTINE_UNIFORM     :: @u32 0x92F3;
TRANSFORM_FEEDBACK_VARYING     :: @u32 0x92F4;
ACTIVE_RESOURCES               :: @u32 0x92F5;
MAX_NAME_LENGTH                :: @u32 0x92F6;
MAX_NUM_ACTIVE_VARIABLES       :: @u32 0x92F7;
MAX_NUM_COMPATIBLE_SUBROUTINES :: @u32 0x92F8;
NAME_LENGTH                    :: @u32 0x92F9;
TYPE                           :: @u32 0x92FA;
ARRAY_SIZE                     :: @u32 0x92FB;
OFFSET                         :: @u32 0x92FC;
BLOCK_INDEX                    :: @u32 0x92FD;
ARRAY_STRIDE                   :: @u32 0x92FE;
MATRIX_STRIDE                  :: @u32 0x92FF;
IS_ROW_MAJOR                   :: @u32 0x9300;
ATOMIC_COUNTER_BUFFER_INDEX    :: @u32 0x9301;
BUFFER_BINDING                 :: @u32 0x9302;
BUFFER_DATA_SIZE               :: @u32 0x9303;
NUM_ACTIVE_VARIABLES           :: @u32 0x9304;
ACTIVE_VARIABLES               :: @u32 0x9305;
REFERENCED_BY_VERTEX_SHADER    :: @u32 0x9306;
REFERENCED_BY_TESS_CONTROL_SHADER :: @u32 0x9307;
REFERENCED_BY_TESS_EVALUATION_SHADER :: @u32 0x9308;
REFERENCED_BY_GEOMETRY_SHADER  :: @u32 0x9309;
REFERENCED_BY_FRAGMENT_SHADER  :: @u32 0x930A;
REFERENCED_BY_COMPUTE_SHADER   :: @u32 0x930B;
TOP_LEVEL_ARRAY_SIZE           :: @u32 0x930C;
TOP_LEVEL_ARRAY_STRIDE         :: @u32 0x930D;
LOCATION                       :: @u32 0x930E;
LOCATION_INDEX                 :: @u32 0x930F;
IS_PER_PATCH                   :: @u32 0x92E7;
SHADER_STORAGE_BUFFER          :: @u32 0x90D2;
SHADER_STORAGE_BUFFER_BINDING  :: @u32 0x90D3;
SHADER_STORAGE_BUFFER_START    :: @u32 0x90D4;
SHADER_STORAGE_BUFFER_SIZE     :: @u32 0x90D5;
MAX_VERTEX_SHADER_STORAGE_BLOCKS :: @u32 0x90D6;
MAX_GEOMETRY_SHADER_STORAGE_BLOCKS :: @u32 0x90D7;
MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS :: @u32 0x90D8;
MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS :: @u32 0x90D9;
MAX_FRAGMENT_SHADER_STORAGE_BLOCKS :: @u32 0x90DA;
MAX_COMPUTE_SHADER_STORAGE_BLOCKS :: @u32 0x90DB;
MAX_COMBINED_SHADER_STORAGE_BLOCKS :: @u32 0x90DC;
MAX_SHADER_STORAGE_BUFFER_BINDINGS :: @u32 0x90DD;
MAX_SHADER_STORAGE_BLOCK_SIZE  :: @u32 0x90DE;
SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT :: @u32 0x90DF;
SHADER_STORAGE_BARRIER_BIT     :: @u32 0x00002000;
MAX_COMBINED_SHADER_OUTPUT_RESOURCES :: @u32 0x8F39;
DEPTH_STENCIL_TEXTURE_MODE     :: @u32 0x90EA;
TEXTURE_BUFFER_OFFSET          :: @u32 0x919D;
TEXTURE_BUFFER_SIZE            :: @u32 0x919E;
TEXTURE_BUFFER_OFFSET_ALIGNMENT :: @u32 0x919F;
TEXTURE_VIEW_MIN_LEVEL         :: @u32 0x82DB;
TEXTURE_VIEW_NUM_LEVELS        :: @u32 0x82DC;
TEXTURE_VIEW_MIN_LAYER         :: @u32 0x82DD;
TEXTURE_VIEW_NUM_LAYERS        :: @u32 0x82DE;
TEXTURE_IMMUTABLE_LEVELS       :: @u32 0x82DF;
VERTEX_ATTRIB_BINDING          :: @u32 0x82D4;
VERTEX_ATTRIB_RELATIVE_OFFSET  :: @u32 0x82D5;
VERTEX_BINDING_DIVISOR         :: @u32 0x82D6;
VERTEX_BINDING_OFFSET          :: @u32 0x82D7;
VERTEX_BINDING_STRIDE          :: @u32 0x82D8;
MAX_VERTEX_ATTRIB_RELATIVE_OFFSET :: @u32 0x82D9;
MAX_VERTEX_ATTRIB_BINDINGS     :: @u32 0x82DA;
VERTEX_BINDING_BUFFER          :: @u32 0x8F4F;
DISPLAY_LIST                   :: @u32 0x82E7;

